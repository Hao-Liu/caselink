- model: caselink.framework
  pk: libvirt-ci
  fields: {}
- model: caselink.project
  pk: RHEL6
  fields: {name: RedHatEnterpriseLinux6}
- model: caselink.project
  pk: RHEL7
  fields: {name: RedHatEnterpriseLinux7}
- model: caselink.document
  pk: Libvirt Test Plan - console and serial devices
  fields: {title: Libvirt Test Plan - console and serial devices}
- model: caselink.document
  pk: Libvirt Test Plan - USB
  fields: {title: Libvirt Test Plan - USB}
- model: caselink.document
  pk: Libvirt Test Plan - Migration
  fields: {title: Libvirt Test Plan - Migration}
- model: caselink.document
  pk: Libvirt Test Plan - Storage
  fields: {title: Libvirt Test Plan - Storage}
- model: caselink.document
  pk: Libvirt Test Plan - Ceph
  fields: {title: Libvirt Test Plan - Ceph}
- model: caselink.document
  pk: Libvirt Test Plan - Virsh cmd - Confirmed
  fields: {title: Libvirt Test Plan - Virsh cmd - Confirmed}
- model: caselink.document
  pk: Libvirt Test Plan - Libvirt domain event handler
  fields: {title: Libvirt Test Plan - Libvirt domain event handler}
- model: caselink.document
  pk: Libvirt Test Plan - Libvirtd
  fields: {title: Libvirt Test Plan - Libvirtd}
- model: caselink.document
  pk: Libvirt Test Plan - QE Consumption
  fields: {title: Libvirt Test Plan - QE Consumption}
- model: caselink.document
  pk: Libvirt Test Plan - host network interface management
  fields: {title: Libvirt Test Plan - host network interface management}
- model: caselink.document
  pk: Libvirt Test Plan - CPU Management_PPC64LE_
  fields: {title: Libvirt Test Plan - CPU Management_PPC64LE_}
- model: caselink.document
  pk: Libvirt Test Plan - CPU Management
  fields: {title: Libvirt Test Plan - CPU Management}
- model: caselink.document
  pk: Libvirt Test Plan - NFV
  fields: {title: Libvirt Test Plan - NFV}
- model: caselink.document
  pk: Libvirt Test Plan - Virtual devices
  fields: {title: Libvirt Test Plan - Virtual devices}
- model: caselink.document
  pk: Libvirt Test Plan - SRIOV
  fields: {title: Libvirt Test Plan - SRIOV}
- model: caselink.document
  pk: Libvirt Test Plan - Memory management
  fields: {title: Libvirt Test Plan - Memory management}
- model: caselink.document
  pk: Libvirt Test Plan - Scalability and Longevity
  fields: {title: Libvirt Test Plan - Scalability and Longevity}
- model: caselink.document
  pk: Libvirt Test Plan - SCSI device
  fields: {title: Libvirt Test Plan - SCSI device}
- model: caselink.document
  pk: Libvirt Test Plan - network filter
  fields: {title: Libvirt Test Plan - network filter}
- model: caselink.document
  pk: Libvirt Test Plan - hooks
  fields: {title: Libvirt Test Plan - hooks}
- model: caselink.document
  pk: Libvirt Test Plan - sVirt
  fields: {title: Libvirt Test Plan - sVirt}
- model: caselink.document
  pk: Libvirt Test Plan - Virtual disks
  fields: {title: Libvirt Test Plan - Virtual disks}
- model: caselink.document
  pk: Libvirt Test Plan - Lock Manager
  fields: {title: Libvirt Test Plan - Lock Manager}
- model: caselink.document
  pk: Libvirt Test Plan - Compatibility
  fields: {title: Libvirt Test Plan - Compatibility}
- model: caselink.document
  pk: Libvirt Test Plan - Snapshot
  fields: {title: Libvirt Test Plan - Snapshot}
- model: caselink.document
  pk: Libvirt Test Plan - Virtual networks
  fields: {title: Libvirt Test Plan - Virtual networks}
- model: caselink.document
  pk: Libvirt Test Plan - Guest resource controll
  fields: {title: Libvirt Test Plan - Guest resource controll}
- model: caselink.document
  pk: Libvirt Test Plan - Guest agent
  fields: {title: Libvirt Test Plan - Guest agent}
- model: caselink.document
  pk: Libvirt Test Plan - LXC
  fields: {title: Libvirt Test Plan - LXC}
- model: caselink.document
  pk: Libvirt Test Plan - Graphical framebuffers
  fields: {title: Libvirt Test Plan - Graphical framebuffers}
- model: caselink.document
  pk: Libvirt Test Plan - NPIV
  fields: {title: Libvirt Test Plan - NPIV}
- model: caselink.document
  pk: Libvirt Test Plan - Node devices
  fields: {title: Libvirt Test Plan - Node devices}
- model: caselink.document
  pk: Libvirt Test Plan - ACL
  fields: {title: Libvirt Test Plan - ACL}
- model: caselink.document
  pk: Libvirt Test Plan - PCIe
  fields: {title: Libvirt Test Plan - PCIe}
- model: caselink.document
  pk: Libvirt Test Plan - PCI bridge
  fields: {title: Libvirt Test Plan - PCI bridge}
- model: caselink.document
  pk: Libvirt Test Plan - Guest kernel debugging
  fields: {title: Libvirt Test Plan - Guest kernel debugging}
- model: caselink.document
  pk: Libvirt Test Plan - Remote access
  fields: {title: Libvirt Test Plan - Remote access}
- model: caselink.document
  pk: Libvirt Test Plan - NUMA
  fields: {title: Libvirt Test Plan - NUMA}
- model: caselink.document
  pk: Libvirt Test Plan - Managed save
  fields: {title: Libvirt Test Plan - Managed save}
- model: caselink.document
  pk: Libvirt Test Plan - netcf
  fields: {title: Libvirt Test Plan - netcf}
- model: caselink.document
  pk: Libvirt Test Plan - Log and debugging
  fields: {title: Libvirt Test Plan - Log and debugging}
- model: caselink.document
  pk: RHEL 7_3 Libvirt_KVM ppc64le plan
  fields: {title: RHEL 7_3 Libvirt_KVM ppc64le plan}
- model: caselink.document
  pk: Libvirt Test Plan - Configuration
  fields: {title: Libvirt Test Plan - Configuration}
- model: caselink.document
  pk: Libvirt Test Plan - Security
  fields: {title: Libvirt Test Plan - Security}
- model: caselink.document
  pk: Libvirt Test Plan - snmp
  fields: {title: Libvirt Test Plan - snmp}
- model: caselink.document
  pk: Libvirt Test Plan - BIOS
  fields: {title: Libvirt Test Plan - BIOS}
- model: caselink.document
  pk: Libvirt Test Plan - Domain async job handling
  fields: {title: Libvirt Test Plan - Domain async job handling}
- model: caselink.component
  pk: libvirt
  fields: {}
- model: caselink.arch
  pk: ''
  fields: {}
- model: caselink.workitem
  pk: RHEL7-17519
  fields:
    type: heading
    title: console
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17780
  fields:
    type: heading
    title: Other USB bus/model support
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17381
  fields:
    type: heading
    title: migration-gluster
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17380
  fields:
    type: testcase
    title: '[migration]Cross migration with some disabled device on rhel7'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17387
  fields:
    type: heading
    title: migration-RDMA
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17386
  fields:
    type: testcase
    title: '[migration] Migration guest with glusterfs volume which can''t  access
      by destination host - bug 1024632'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17385
  fields:
    type: testcase
    title: '[migration]libvirtd use a port from the migration range for NBD migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17384
  fields:
    type: testcase
    title: '[migration]qemu live migration port conflicts with other users of ephemeral
      port(s)--Bug:1019237'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17389
  fields:
    type: testcase
    title: '[migration]RDMA based live guest migration with rdma-pin-all'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17388
  fields:
    type: testcase
    title: '[migration]RDMA based live guest migration -- Bug: 1013055,1046833'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16490
  fields:
    type: testcase
    title: '[storage][rbd pool][authentication] - rbd based storage pool with authentication-bug
      1187533'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16491
  fields:
    type: testcase
    title: '[storage][rbd pool][authentication] - volume operations in rbd pool with
      authentication enabled -bug 1187533'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16492
  fields:
    type: heading
    title: Known Issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16493
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-17145
  fields:
    type: testcase
    title: '[virt-xml-validate] validate libvirt XML files against a schema -- bug
      1004364, 1035792'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17144
  fields:
    type: testcase
    title: '[virt-pki-validate] validate libvirt PKI files are configured correctly-bug825108'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17147
  fields:
    type: testcase
    title: '[vol-create-as] - Create a qcow2 file using libvirt storage APIs - Bug
      504119'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17146
  fields:
    type: testcase
    title: '[vncdisplay] - Check IP address and port number for the VNC display BZ#832004'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17141
  fields:
    type: testcase
    title: '[memtune]Check results of testing memtune for twice with the same parameters
      - bug 767921 1024272'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17140
  fields:
    type: testcase
    title: '[virsh commands] Custom the escape sequence  for console command - bug
      808652'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17143
  fields:
    type: testcase
    title: '[virt-host-validate] validate host virtualization setup'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17142
  fields:
    type: testcase
    title: '[virsh command]Check the memory leak for some functions - bug 761453/761402/767488/761344/770943/770994'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12708
  fields:
    type: heading
    title: Events for virtual device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12709
  fields:
    type: testcase
    title: '[Libvirt domain event handler]Track the graphical events with VNC & SPICE
      connecting & disconnecting'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-34928
  fields:
    type: testcase
    title: '[storage][iscsi pool] iSCSI based storage pool (ipv6) BZ#907171'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17459
  fields:
    type: heading
    title: '1. Test for libvirtd pid and configuration:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-12700
  fields:
    type: heading
    title: Events for guest
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12701
  fields:
    type: testcase
    title: '[Libvirt domain event handler] Track all events for basic operations on
      a domain - bug 994317'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12702
  fields:
    type: testcase
    title: '[Libvirt domain event handler] Track all events for multiple domains'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-12703
  fields:
    type: testcase
    title: '[guest agent] Check guest agent state''s lifecycle event in libvirt side
      - bug 1146944'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12704
  fields:
    type: testcase
    title: '[libvirtd]Libvirtd shouldn''t crash while enabel acl '' and connect guest
      with virt-viewer--bug 741533'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12705
  fields:
    type: testcase
    title: '[Libvirt domain event handler] Stopping/reboot guest with the  negive
      way could capture expect events'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12706
  fields:
    type: testcase
    title: '[libvirt  domain event handler]Bug 834927 - virConnectDomainEventRegisterAny  won''t
      register the same callback for the same event but for different  domains'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12707
  fields:
    type: testcase
    title: '[Libvirt domain event handler] event-test.py help info'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-34851
  fields:
    type: testcase
    title: '[capability]capability testing while upgrade related virt packets'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18017
  fields:
    type: heading
    title: bond device characteristic
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-17963
  fields:
    type: testcase
    title: '[CPU Management]Query QEMU for CPU capabilities-bug824989'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17962
  fields:
    type: testcase
    title: '[CPU Management] Enable rtc time drift correction by default-bug805257'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17961
  fields:
    type: testcase
    title: '[CPU Management] Configure timezone of guest - bug859868'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17960
  fields:
    type: testcase
    title: '[CPU management][NFV]host-passthrough allow enabling/disabling CPU flags
      - bug 1178850 1207095'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-17965
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17964
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17800
  fields:
    type: testcase
    title: '[USB][sVirt] sVirt testing about usb device - bug 1111451 , bug 1111450'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17490
  fields:
    type: testcase
    title: '[libvirtd]ip_forward is not persistent BZ#810464'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-16968
  fields:
    type: testcase
    title: '[domstate --reason]domain state - normal'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16969
  fields:
    type: testcase
    title: '[domstate --reason]domain state - snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16964
  fields:
    type: testcase
    title: '[dompmsuspend] suspend a domain  for a given time duration - bug 766958'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16965
  fields:
    type: testcase
    title: '[dompmwakeup] wakeup a domain from S4'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16966
  fields:
    type: testcase
    title: '[domstate --reason]domain state - I/O error'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16967
  fields:
    type: testcase
    title: '[domstate --reason]domain state - migrate'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16960
  fields:
    type: testcase
    title: '[domjobabort] - Aborts the currently running domain job'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16961
  fields:
    type: testcase
    title: '[domjobinfo] - Get information about jobs running on a domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16962
  fields:
    type: testcase
    title: '[dommemstat] - Get memory statistics for a running domain - Bug 572453
      Bug 904160'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16963
  fields:
    type: testcase
    title: '[domname] - Convert a domain id or UUID to domain name'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17801
  fields:
    type: testcase
    title: '[USB][Scalability] Domain with maximum virtio virtual disks when enabling
      PCI multifunction(coldplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16940
  fields:
    type: testcase
    title: '[destroy] - Destroy a running domain - bug 771016 927620 927620'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-31707
  fields:
    type: testcase
    title: Migration with --migratedisks that allows CLI user to explicitly specify
      block devices to migrate - (new for RHEL7.2) - bug 1210352
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16941
  fields:
    type: testcase
    title: '[detach-device] - Detach device from xml file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17802
  fields:
    type: testcase
    title: '[USB][Scalability] Attach/detach maximum virtio virtual disks(normal PCI
      devices) to one domain via attach-disk (hotplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18013
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-17149
  fields:
    type: testcase
    title: '[vol-create] - Create a vol from an XML file -Bug 1037454'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17148
  fields:
    type: testcase
    title: '[vol-create-as] - Create a vol from a set of args - Bug 970495'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16674
  fields:
    type: testcase
    title: '[Storage][logical pool]create pool on lvm volume groups that contains
      mirrored LVM'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16675
  fields:
    type: testcase
    title: '[storage][logical pool]  create logical pools for lvm volume groups with
      striped volumes - Bug 727474'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17803
  fields:
    type: testcase
    title: '[USB][Scalability] Domain with maximum 37 usb disks per usb controller
      (coldplug)-bug807145, 808980'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16676
  fields:
    type: testcase
    title: '[storage][logical pool]  Create/refresh logical pool on the vg with inactive
      volumes BZ#958702'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16810
  fields:
    type: heading
    title: timer device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16811
  fields:
    type: heading
    title: hub device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16812
  fields:
    type: heading
    title: nvram device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16813
  fields:
    type: heading
    title: 'panic device #BZ1169183'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16814
  fields:
    type: heading
    title: 'tpm device #BZ1169183'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16815
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16816
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16817
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-17541
  fields:
    type: testcase
    title: '[console and serial devices][serial]Support for KVM virtio serial/console'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-16819
  fields:
    type: testcase
    title: '[Input devices] absolute cursor function'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-17543
  fields:
    type: testcase
    title: '[console and serial devices][console]hot-plug/unplug the console and channel
      to guest --bug 887348'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17810
  fields:
    type: testcase
    title: '[USB][Stable Guest ABI]Check domain input ABI Stability'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17545
  fields:
    type: testcase
    title: '[console and serial devices][controller]It should report an error while
      add an invalid pci controller to the guest ---bug 981261'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17544
  fields:
    type: testcase
    title: '[console and serial devices][console]Prevent multiple connections to same
      VM console and add ability to force disconnect existing console sessions 729940'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17547
  fields:
    type: testcase
    title: '[console and serial devices][serial]TCP type serial port in domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18510
  fields:
    type: testcase
    title: '[SR-IOV] Save a guest with assigned VF'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-16672
  fields:
    type: testcase
    title: '[storage][logical pool]volume operations in logical pool--BUG 1166592,1091866'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19570
  fields:
    type: testcase
    title: '[CPU management] Check the command/feature which not require cgroup will
      work well when we disable them in configure file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17804
  fields:
    type: heading
    title: negative testing
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16673
  fields:
    type: testcase
    title: '[storage][logical pool]  Support pools of thin lvm - bug 1060287'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16775
  fields:
    type: testcase
    title: '[Memory management] ballooning testing(API)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16774
  fields:
    type: heading
    title: Memory balloon device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16777
  fields:
    type: testcase
    title: '[Memory management] Deactivate memory balloon with type of none BZ 833674'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16776
  fields:
    type: testcase
    title: '[Memory management] ballooning testing(virsh)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16771
  fields:
    type: heading
    title: ksm
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16770
  fields:
    type: testcase
    title: '[Memory management] lock pages - bug 876096, 1035954'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-17606
  fields:
    type: testcase
    title: '[Scalability][One domain] Attach/Detach virtio disk which is 1TB to domian
      via attach-disk for looping 100 times (hotplug)- large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17607
  fields:
    type: testcase
    title: '[Scalability][One domain]Domain with maximum virtio virtual disks when
      enabling PCI multifunction(coldplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17604
  fields:
    type: testcase
    title: '[Scalability][One domain] Attach/Detach maximum Vfs to one guest via attach/detach-device
      for 10 times (hotplug)-bug696877,bug678368'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17605
  fields:
    type: testcase
    title: '[Scalability][One domain]Domain with maximum IDE disks for looping 10
      times(coldplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17603
  fields:
    type: testcase
    title: '[Scalability][One domain][SCSI] Attach 1024 scsi type disks on one domain
      via attach-device(hotplug) on 2 scsi controllers --bug841519'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-17600
  fields:
    type: testcase
    title: '[Scalability][Virtual networks] 256 autostarted network (isolated, route
      , NAT) reloading'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17601
  fields:
    type: testcase
    title: '[Scalability][Storage]256 autostarted storage pools reloading'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-16772
  fields:
    type: testcase
    title: '[Memory management] Disable ksm for per VM - BZ#635419, 950968, 1008500'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-17608
  fields:
    type: testcase
    title: '[Scalability][One domain]Attach/detach maximum virtio virtual disks(normal
      PCI devices) to one domain via attach-disk (hotplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17609
  fields:
    type: testcase
    title: '[Scalability][One domain]Domain with maximum virtual interfaces when disabling/enabling
      PCI multifunction(hotplug vs coldplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-16704
  fields:
    type: testcase
    title: '[Storage][negative] check pool info for fs pool after vol-create-as failed
      -bug 1024159'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16705
  fields:
    type: testcase
    title: '[Storage][encryption] - Create a domain with qcow2 encrypted disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16706
  fields:
    type: testcase
    title: '[storage][negative] virsh pool-create should fail when fs format mismatch
      with xml --BZ924059'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16707
  fields:
    type: testcase
    title: '[storage][negative] simultaneous volume operations should throw error
      --BZ 1069552'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16700
  fields:
    type: testcase
    title: '[Storage][negative]Define a storage pool with unsupported format type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16701
  fields:
    type: testcase
    title: '[Storage][negative]vol-create-as should fail when allocate a malformed
      size image --Bug 823362'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16702
  fields:
    type: testcase
    title: '[storage]Requesting qcow2 allocation should preallocate metadata -- Bug:684793'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16703
  fields:
    type: testcase
    title: '[storage][negative] libvirt activate pool with invalid source BG 1025230'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18359
  fields:
    type: testcase
    title: '[Network filter]To start a domain with nwfilter whose chain priority is
      greater than its filter rule priority  --Bug 1072292'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18358
  fields:
    type: testcase
    title: '[Network filter] Consistent error message when hot-plugging interface
      with an inexistence nwfilter repeatedly --Bug 1072677'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18429
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18428
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-16708
  fields:
    type: testcase
    title: '[Storage][negative] Define 2 iscsi pools with the same source (ip VS hostname)--BZ
      1171984'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16709
  fields:
    type: testcase
    title: '[Storage][negative] Define 2 iscsi pools with the same source (ipv4 and
      ipv6) --BZ 1188463'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17189
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-19114
  fields:
    type: testcase
    title: '[virtual disks] Refuse to start a domain with a USB disk attached to a
      PCI bus - bug 1043374 , 1043436'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19115
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][negative]: detach-disk with wrong arguments
      - bug 803591'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19116
  fields:
    type: testcase
    title: '[Virtual disks] Start guest with dir type disks --bug 525074'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19117
  fields:
    type: testcase
    title: '[virtual disks][PCI bridges] start guest whichh virtual disk is on pci
      bridge'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19110
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach an iscsi disk
      with readonly mode'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19111
  fields:
    type: testcase
    title: '[virtual disks] Create a domain with blockio element -bug749122, 960803'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19112
  fields:
    type: testcase
    title: '[virtual disks] Libvirt can not assign particular USB controller to USB
      disk in Domain. -bug 1046267'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19113
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Audit check when detach disk - bug 710150'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18067
  fields:
    type: testcase
    title: '[sanlock] Migrate guest with sanlock enabled'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-19118
  fields:
    type: testcase
    title: '[virtual disks][transient] Start guest with transient disk - bug1057800'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19119
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][post-operation] Hot-unplug a disk device
      to guest with rebooting the guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18066
  fields:
    type: heading
    title: Migration testing as per "Dual host testing" with sanlock
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-34458
  fields:
    type: testcase
    title: Managedsave guests on RHEL7.1 host, then upgrade the host to RHEL7.2, restore
      the guests - bug 1275542 1274147
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-18065
  fields:
    type: testcase
    title: '[sanlock] Prevent starting 2 guests on 2 hosts pointing at a disk in non-shared
      modeBZ#578121,850470'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-34454
  fields:
    type: testcase
    title: '[libvirtd]Check libvirtd.conf in /usr/lib/sysctl.d/ starting with number'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-34455
  fields:
    type: testcase
    title: '[libvirtd]Check libvirt should disallow negative value for "max_*" etc
      in libvirtd.conf'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-34457
  fields:
    type: testcase
    title: Create internal/external snapshots on RHEL7.1 host, then upgrade the host
      to RHE...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-17188
  fields:
    type: heading
    title: Libvirt Test Plan - sVirt
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17778
  fields:
    type: testcase
    title: '[USB] [startupPolicy] Support usb disk with different policy.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17779
  fields:
    type: testcase
    title: '[USB] [removeable] Set removable flag for usb disk.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17772
  fields:
    type: testcase
    title: '[USB] [virtual disks][hotplug/unplug] Attach virtual usb device to a guest
      with different usb controller.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17773
  fields:
    type: testcase
    title: '[USB] [hotplug/unplug] Hot-plug/Hot-unplug multi usb disks.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17770
  fields:
    type: testcase
    title: '[USB][virtual disks] Refuse to start a domain with a USB disk attached
      to a PCI bus - bug 1043374 , 1043436'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17771
  fields:
    type: testcase
    title: '[USB] [virtual disks][hotplug/unplug] Hot-plug/Hot-unplug virtual usb
      device to a guest.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17776
  fields:
    type: testcase
    title: '[USB] Cold-plug multiple usb disks to guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17777
  fields:
    type: testcase
    title: '[USB] [virtual disks][startupPolicy] Support virtual usb device with different
      policy.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17774
  fields:
    type: testcase
    title: '[USB] [virtual disks] Boot VM from usb disk.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17775
  fields:
    type: testcase
    title: '[USB]  cold-plug a usb disk.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16638
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] Revert a internal system checkpoint
      snapshot after add a disk #BZ 742615'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16639
  fields:
    type: heading
    title: Internal disk-only snapshot (not supported officially)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16630
  fields:
    type: testcase
    title: '[snapshot]Live snapshots must be consistent (fail or succeed for all the
      drives) BZ#782457'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16631
  fields:
    type: heading
    title: Internal system checkpoint snapshot (not supported officially)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16632
  fields:
    type: requirement
    title: Internal System Checkpoint Snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16634
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] There will be memory leak when
      restart libvirtd during creating internal system checkpoint snapshot #BZ1094173'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16635
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] Revert a running domain to a running
      internal system checkpoint snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16636
  fields:
    type: testcase
    title: '[Internal] Revert a running domain to a shutdown internal snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16637
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] Revert a shutdown domain to a running
      internal system checkpoint snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18737
  fields:
    type: testcase
    title: '[virtual networks] Define a <network> with a subelement  <portgroup>'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18736
  fields:
    type: testcase
    title: '[virtual networks] Network config with no gateway addresses -bug 1079866'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18735
  fields:
    type: testcase
    title: '[virtual networks] Migrate with macvtap network (bridge mode)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18734
  fields:
    type: testcase
    title: '[virtual networks] Check the ability to dynamically change a libvirt network
      - bug 844404, bug 907779'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18733
  fields:
    type: testcase
    title: '[virtual networks] failure to add new PCI passthrough device after restarting
      libvirtd -- bug 1045002'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18732
  fields:
    type: testcase
    title: '[virtual networks] Allow QoS change on the fly using updateDeviceFlags
      - bug 1014198 ,bug 1022293 ,bug 1014503,bug1064770'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18223
  fields:
    type: heading
    title: Hot-plug/unplug disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18222
  fields:
    type: testcase
    title: '[Guest resource control] a <serial> port pointing at a host serial port'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18739
  fields:
    type: testcase
    title: '[virtual networks] Configure the ''native-tagged'' and ''native-untagged''
      vlan modes using openvswitch'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18738
  fields:
    type: testcase
    title: '[virtual networks] IPv6 support in routed network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-23876
  fields:
    type: testcase
    title: hot-plug/unplug disk with host device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-23877
  fields:
    type: heading
    title: configure qemu.conf
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-23874
  fields:
    type: testcase
    title: '[memtune] get / set memtune'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-23875
  fields:
    type: testcase
    title: boot up guest with host device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-23878
  fields:
    type: testcase
    title: change cgroup controllers in qemu.conf
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-23879
  fields:
    type: testcase
    title: change cgroup_device_acl in qemu.conf
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-12645
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12644
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12647
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12646
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12643
  fields:
    type: heading
    title: Libvirt Test Plan - Guest agent
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12649
  fields:
    type: requirement
    title: Guest life-cycle testing with qemu guest agent (dompmsuspend, shutdown/reboot
      --...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12648
  fields:
    type: heading
    title: Guest life-cycle testing with qemu guest agent (dompmsuspend, shutdown/reboot
      --mode agent)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-16555
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do multiple continious blockcommit/blockpull
      and concurrent blockcommit/blockpull with disk type=block with relative path'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16554
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from base to top after creating
      external disk-only snapshot with "network" disk type(gluster)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16557
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do multiple continious blockcommit/blockpull
      and concurrent blockcommit/blockpull with disk type=block with relative path'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16556
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do multiple continious blockcommit/blockpull
      and concurrent blockcommit/blockpull with image based on gluster server with
      relative path'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16551
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to middle after creating
      external disk-only snapshot with guest source file based on NFS'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16550
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to base after creating
      external disk-only snapshot with guest source file based on NFS'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16553
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to middle after creating
      external disk-only snapshot with "network" disk type(gluster)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16552
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to base after creating
      external disk-only snapshot with "network" disk type(gluster)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16559
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit using keep-relative option'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16558
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull passing keep-relative option'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18649
  fields:
    type: testcase
    title: '[LXC] get domain infor via virsh dominfo - bug 819401'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18648
  fields:
    type: testcase
    title: '[LXC] connect to OS container via console'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18643
  fields:
    type: testcase
    title: '[LXC][LifeCycle] Prepare(define, start) container - Application / Full
      OS'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18642
  fields:
    type: testcase
    title: '[LXC] Application container event register'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18640
  fields:
    type: testcase
    title: '[LXC] set max memory for shutoff domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18647
  fields:
    type: testcase
    title: '[LXC] Check setting memory error message when cgroup is unmounted'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18646
  fields:
    type: testcase
    title: '[LXC] autostart enable/disable'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18645
  fields:
    type: testcase
    title: '[LXC] Application container with multi network interfaces'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18644
  fields:
    type: testcase
    title: '[LXC] Application container suspend/resume - bug 773212 842979 857341'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-17390
  fields:
    type: testcase
    title: '[migration]Turn off rdma-pin-all once it was turned on'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17391
  fields:
    type: heading
    title: stress-migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17392
  fields:
    type: testcase
    title: '[Migration] migrate a guest with disk I/O load'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17393
  fields:
    type: testcase
    title: '[Migration] migrate a guest with heavy CPU load'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17394
  fields:
    type: testcase
    title: '[Migration] migrate a guest with heavy MEM load'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17395
  fields:
    type: testcase
    title: '[Migration] migrate a guest with hugepage memory'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17396
  fields:
    type: testcase
    title: '[Migration] Live migrate with high memory load with no swap'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17397
  fields:
    type: testcase
    title: '[Migration] Do migration loop with setmaxdowntime - bug 803186'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17398
  fields:
    type: testcase
    title: '[Migration] migrate a guest for 1024 rounds through TCP connection --offline'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17399
  fields:
    type: testcase
    title: '[Migration] migration with large RAM'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17028
  fields:
    type: testcase
    title: '[node-memory-tune] Get or set node memory parameters'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17152
  fields:
    type: testcase
    title: '[vol-dumpxml] - Get vol XML inforamtion'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17153
  fields:
    type: testcase
    title: '[vol-info] - Get vol basic information'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17150
  fields:
    type: testcase
    title: '[vol-delete] - Delete a vol'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17029
  fields:
    type: testcase
    title: '[nodecpustats] - Get the cpu time/utilization of the host node'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17156
  fields:
    type: testcase
    title: '[vol-name] - Get vol name by key or path --bug 924571'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17157
  fields:
    type: testcase
    title: '[vol-path] - Get vol path by name or key'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17154
  fields:
    type: testcase
    title: '[vol-key] - Get vol key by name or path'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17155
  fields:
    type: testcase
    title: '[vol-list] - List vols'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17185
  fields:
    type: testcase
    title: '[blockcopy] blockcopy with full options'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17158
  fields:
    type: testcase
    title: '[vol-pool] Get the storage pool for a given volume key or path'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17159
  fields:
    type: testcase
    title: '[vol-upload] Upload a local file into a volume to remote'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-13188
  fields:
    type: testcase
    title: '[Graphical framebuffers] Remove channel content from the  spicevmc channel----Bug
      851963'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17022
  fields:
    type: testcase
    title: '[net-info]Print network information'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17023
  fields:
    type: testcase
    title: '[net-list] - List networks'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18597
  fields:
    type: heading
    title: SAN Storage operations
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-17749
  fields:
    type: testcase
    title: '[USB] [Hostdev] Libvirt does not generate guest address for USB hostdev
      element--bug 1215968'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17748
  fields:
    type: testcase
    title: '[USB][Hostdev] Cold-plug multiple USB devices to guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17974
  fields:
    type: heading
    title: Libvirt Test Plan - Node devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17975
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17976
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17977
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17978
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17979
  fields:
    type: heading
    title: nodedev-create/destroy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-18607
  fields:
    type: heading
    title: WWNs assignments
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18000
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-18604
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Hot-plug/hot-unplug a virtual hard drive
      through the virtio-scsi controller [NPIV]'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18949
  fields:
    type: testcase
    title: '[migration]migration when configure guest with OVMF bios + machine type=rhel6.5.0'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16951
  fields:
    type: testcase
    title: '[domid] - Convert a domain name or UUID to domain id'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16950
  fields:
    type: testcase
    title: '[domhostname] print the domain''s hostname'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16953
  fields:
    type: testcase
    title: '[domif-setlink] set link state of a virtual interface  --bug 927483'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16952
  fields:
    type: testcase
    title: '[domif-getlink] get link state of a virtual interface'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16955
  fields:
    type: testcase
    title: '[domifstat] -     Get network interface stats for a running domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16954
  fields:
    type: testcase
    title: '[domiflist] list all domain virtual interfaces - Bug 1056902'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16957
  fields:
    type: testcase
    title: '[dominfo] - Get domain information --bug 817239'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16956
  fields:
    type: testcase
    title: '[domiftune] get/set parameters of a virtual interface - Bug 1043735'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16959
  fields:
    type: testcase
    title: '[dominfo] Get dominfo when guest shutdown - bug 741217'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16958
  fields:
    type: testcase
    title: '[dominfo] Check outputs for memory unit - bug 817239'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18600
  fields:
    type: testcase
    title: '[NPIV] Install a guest into SAN storage via vHBA.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18760
  fields:
    type: testcase
    title: '[Virtual networks] Support vhost-user interface  --bug1155458,1156267,
      1161217'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-38253
  fields:
    type: heading
    title: Domain job
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38250
  fields:
    type: heading
    title: DomXML and QemuArgs transition
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38251
  fields:
    type: heading
    title: Domain Schedule info
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38256
  fields:
    type: heading
    title: should move to other plan
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18765
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18942
  fields:
    type: heading
    title: model and topology
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18943
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-12874
  fields:
    type: testcase
    title: '[ACL]user access control for NodeDevice API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-16624
  fields:
    type: testcase
    title: '[Disk snapshot][External][Negative Test] Do concurrent blockcommit/blockpull/blockcopy
      jobs --BZ1199036'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16825
  fields:
    type: testcase
    title: '[Video devices] cirrus'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16824
  fields:
    type: testcase
    title: '[Stable Guest ABI]Check domain clock  ABI Stability'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16827
  fields:
    type: testcase
    title: '[Video devices] qxl---For Linux'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16826
  fields:
    type: testcase
    title: '[Video devices] Compare the resolution of display between 2 video types'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16821
  fields:
    type: testcase
    title: '[input/output devices] Configure sound pass-through to appear as MIC as
      opposed to line-in- bug816503'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16820
  fields:
    type: testcase
    title: '[Input devices] relative cursor function'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16823
  fields:
    type: testcase
    title: '[Sound devices] Intel HDA support'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16822
  fields:
    type: testcase
    title: '[input/output device]Change the order of video devices - bug 823535'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-17556
  fields:
    type: testcase
    title: '[console and serial devices][channel] modify channel''s controller to
      a negative number  --Bug 1171582'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17557
  fields:
    type: testcase
    title: '[console and serial devices][channel] Ignoring device address for gustfwd
      channel -- Bug 1172526'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17554
  fields:
    type: testcase
    title: '[Console and serial devices][console] libvirt should forbid attach a unsupport
      console to a active vm  --Bug 1164627'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17555
  fields:
    type: testcase
    title: '[Console and serial devices][console] Only the first console can be a
      serial port --Bug 1170092'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-16829
  fields:
    type: testcase
    title: '[Video devices] Remove video device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-17805
  fields:
    type: testcase
    title: '[USB] allow to disable usb & vga altogether BZ#818996'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17550
  fields:
    type: testcase
    title: '[console and serial devices][serial]UNIX type serial port in domain --bug
      1088787'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17551
  fields:
    type: testcase
    title: '[console and serial devices][controller]Automatically add a new PCI bus
      for q35 machines''s pci bridge dmi-to-pci-bridge - bug1003983'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18450
  fields:
    type: testcase
    title: '[Hooks] qemu - return non-zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-24946
  fields:
    type: testcase
    title: set custom resource partition --bug 1238570
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-16739
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(RAW) in network filesystem  pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16738
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(RAW) in filesystem pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16731
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe logical volume in logical volume pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16730
  fields:
    type: testcase
    title: '[Storage][volume wiping]  the volume format of qcow2 is changed to raw
      after volume wiped'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16733
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(QCOW2) in directory  pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16732
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe partition volume in disk pool - bug 738936'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16735
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(QCOW2) in network filesystem  pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16734
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(QCOW2) in filesystem pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16737
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(RAW) in directory pool by vol-key
      or vol-path'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16736
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(RAW) in directory  pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18346
  fields:
    type: heading
    title: Integration test with virtual network interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18347
  fields:
    type: requirement
    title: Integration test with virtual network interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18344
  fields:
    type: testcase
    title: '[Network filter] no-other-l2-traffic'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18345
  fields:
    type: testcase
    title: '[network filter] IPset API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18342
  fields:
    type: testcase
    title: '[Network filter] allow-ipv6'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18343
  fields:
    type: testcase
    title: '[Network filter] disallow-ipv6'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18340
  fields:
    type: testcase
    title: '[Network filter] disallow dhcp'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18341
  fields:
    type: testcase
    title: '[Network filter] clean-traffic'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18438
  fields:
    type: testcase
    title: '[Hooks] daemon restart - return non-zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18439
  fields:
    type: testcase
    title: '[Hooks] daemon restart - return zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-19123
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][startupPolicy] Attach file type disk with
      startupPolicy=''optional'''
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19122
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][post-operation] Hotplug a disk device
      to guest with rebooting the guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19125
  fields:
    type: testcase
    title: '[virtual disks][discard] glusterfs backend does not support discard --
      bug 1103845,bug 1136534'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19124
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][pre-operation] hotunplug a device from
      guest during the process of start or shutdown guest (658713)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18348
  fields:
    type: testcase
    title: '[Network filter] live update of an interface''s filter using update-device  --
      bug 1126487 --bug 1202703  --bug 1205042'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18349
  fields:
    type: testcase
    title: '[Network filter] libvirt should initialize nwfilter when /tmp is mounted
      with noexec option - bug 752255'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-25944
  fields:
    type: testcase
    title: '[NFV] strict NUMA policy on hugetlbfs backed guests without enough hugepages
      -- bug 1061470, 1076730, 1076989'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-25945
  fields:
    type: testcase
    title: '[capabilities] Expose huge pages information -- bug 1076957'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-25946
  fields:
    type: testcase
    title: '[freepages] Expose huge pages information -- bug 1076957'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-34462
  fields:
    type: testcase
    title: Boot up and reboot the guests on RHEL7.1 host, then upgrade the host to
      RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-25940
  fields:
    type: testcase
    title: '[NFV] nodedev-dumpxml reports NUMA node locality for PCI devices on NUMA
      machine--bug 1093127'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-25941
  fields:
    type: testcase
    title: '[NFV] Host to Guest NUMA memory binding - bug 997627'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-25942
  fields:
    type: testcase
    title: '[NFV] strict NUMA policy on hugetlbfs backed guests with enough hugepages
      -- bug 1061470, 1076730, 1076989'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-25943
  fields:
    type: testcase
    title: '[NFV] guest numa topology with 2M-hugepages - bug 1076725'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-34469
  fields:
    type: testcase
    title: '[libvirtd]Check screenshot after qemu-attach will not crash libvirtd'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-25126
  fields:
    type: testcase
    title: '[virtual disks][hotplug][scsi]Using virsh attach-device to hotplug iscsi
      or fc lun volume with --config/--persistent option --bug1228007'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17178
  fields:
    type: testcase
    title: '[virsh command]Create a dedicated group for virt-login-shell - bug 1033614'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16609
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] Clone snapshot by vol-clone drop
      the snapshot of qcow2 image #BZ 717869  980676'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16608
  fields:
    type: testcase
    title: '[system checkpoint snapshot][Internal] Delete a internal system checkpoint
      snapshot and it''s children #BZ 790744'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16605
  fields:
    type: testcase
    title: '[Disk snapshot][External] Change current external disk-only snapshot with
      snapshot-edit'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16604
  fields:
    type: testcase
    title: '[System checkpoint snapshot][External] Revert guest to a external system
      checkpoint snapshot'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16607
  fields:
    type: testcase
    title: '[Disk snapshot][External] Change external disk-only snapshot name with
      snapshot-edit  #BZ 843324 744724'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16606
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] Check snapshot-info BZ 842966,
      890458,890457'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16601
  fields:
    type: testcase
    title: '[Disk snapshot][External] Clone a external disk-only snapshot with snapshot-edit'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16600
  fields:
    type: requirement
    title: Snapshot Operations
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16603
  fields:
    type: testcase
    title: '[Disk snapshot][External] Get guest snapshot list with options #BZ 807545
      807555 842947  845468'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16602
  fields:
    type: testcase
    title: '[Disk snapshot][External] Delete external disk-only snapshot'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18724
  fields:
    type: testcase
    title: '[virtual networks]Support configurable dhcp lease time for virtual networks  Bug
      913446'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18725
  fields:
    type: testcase
    title: '[virtual networks]Check the actual network throughput correspond with
      bandwidth parameter in network bug 895340'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18726
  fields:
    type: testcase
    title: '[virtual networks]Fail to parse <boot> when parsing a single device --bug
      895294'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18727
  fields:
    type: testcase
    title: '[virtual networks] Allow changing XML parameters sent to dnsmasq --bug
      928638,1061099'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18720
  fields:
    type: testcase
    title: '[Virtual Networks] Extend libvirt network QoS to support guaranteed minimum
      bandwidth "floor"  - bug 837908'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18721
  fields:
    type: testcase
    title: '[Virtual Networks]  libvirt support for QEMU network helper for unprivileged
      users - bug 833167'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18722
  fields:
    type: testcase
    title: '[Virtual Networks] The DHCP service in libvirt needs much more configurability
      - bug 824573'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18723
  fields:
    type: testcase
    title: '[Virtual Networks] Multiple queue support in macvtap/virtio-net - bug
      651941,bug 1071888,bug 1095636'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-19635
  fields:
    type: heading
    title: Node Device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19634
  fields:
    type: heading
    title: Networking
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19637
  fields:
    type: heading
    title: Snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19636
  fields:
    type: heading
    title: Secret
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18728
  fields:
    type: testcase
    title: '[virtual networks] xml with mutiple dhcp sections - bug 735950 907779'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18729
  fields:
    type: testcase
    title: '[Guest network driver]Check the the default network card model into the
      domain XML -bug887886'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-19632
  fields:
    type: heading
    title: Network Filter
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12658
  fields:
    type: heading
    title: Set domain time with the guest agent (domtime)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12659
  fields:
    type: requirement
    title: Set domain time with the guest agent (domtime)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12652
  fields:
    type: testcase
    title: '[cross-migration] Do s3/s4 while migrate the guest from rhel6.5 host to
      rhel7 host Bug 1037480'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12653
  fields:
    type: testcase
    title: '[guest agent]Should forbid suspend&resume operate when guest in pmsuspend
      status. -bug 846639'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12650
  fields:
    type: testcase
    title: '[guest agent] Testing about suspend-to-memory and suspend-to-disk - bug
      890648 872424'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12651
  fields:
    type: testcase
    title: '[guest agent] Enable or disable s3/s4 per VMs - For windows guest BZ 1028927'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12656
  fields:
    type: testcase
    title: '[guest agent] reboot guest with ''agent''  mode'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12657
  fields:
    type: testcase
    title: '[guest agent]Testing about suspend-to-hybrid'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12654
  fields:
    type: testcase
    title: '[guest agent]Run virsh save after performing some domain operations -
      688850,1028927'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12655
  fields:
    type: testcase
    title: '[guest agent] shutdown guest with ''agent''  mode - bug 1236924'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-16548
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to middle after creating
      external disk-only snapshot with guest source file based on NFS'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16549
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to middle after creating
      external disk-only snapshot with "block" disk type #BZ 1062142'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16542
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit when guest image has multiple
      backing-chains'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16543
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from middle to top after creating
      external disk-only snapshot with "block" disk type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16540
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to base after creating
      external disk-only snapshot with "network" disk type(gluster)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16541
  fields:
    type: testcase
    title: '[Disk snapshot][External] Doing blockcommit is unsupported with qemu-kvm'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16546
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to middle after creating
      external disk-only snapshot with "file" disk type #BZ 1062142'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16547
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to middle after creating
      external disk-only snapshot with "file" disk type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16544
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to base after creating
      external disk-only snapshot with "block" disk type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16545
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to base after creating
      external disk-only snapshot with guest source file based on NFS'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17013
  fields:
    type: testcase
    title: '[migrate-setmaxdowntime] - set maximum tolerable downtime'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17012
  fields:
    type: testcase
    title: '[migrate-getspeed]Get the maximum migration bandwidth'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17011
  fields:
    type: testcase
    title: '[memtune] Get or set memory parameters BZ 839537 950478'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17010
  fields:
    type: testcase
    title: '[maxvcpus] - check max virtual cpus number supported'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17017
  fields:
    type: testcase
    title: '[net-create] - Create a network from an XML file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17016
  fields:
    type: testcase
    title: '[net-autostart] - Autostart a network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17015
  fields:
    type: testcase
    title: '[migrate] - Migrate domain to another host'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17014
  fields:
    type: testcase
    title: '[migrate-setspeed]Set the maximum migration bandwidth'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17019
  fields:
    type: testcase
    title: '[net-destroy] - Destroy an active network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17018
  fields:
    type: testcase
    title: '[net-define] - Define (but don''t start) a network from an XML file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18658
  fields:
    type: testcase
    title: '[LXC] numatune options should not prevent lxc starting BZ 1213698'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18659
  fields:
    type: heading
    title: Libvirt Test Plan - PCIe
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-12679
  fields:
    type: requirement
    title: Hot-unplug cpu with the guest agent
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-18650
  fields:
    type: testcase
    title: '[LXC] get interface statistics'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18651
  fields:
    type: testcase
    title: '[LXC] kill process "/usr/libexec/libvirt_lxc"'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18652
  fields:
    type: testcase
    title: '[LXC] make sure it will only show the process in the container.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18653
  fields:
    type: testcase
    title: '[LXC] network device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18654
  fields:
    type: testcase
    title: '[LXC] OS container suspend/resume'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18655
  fields:
    type: testcase
    title: '[LXC] schedinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18656
  fields:
    type: testcase
    title: '[LXC] schedinfo - give wrong parameters'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18657
  fields:
    type: testcase
    title: '[LXC] set max memory'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-16728
  fields:
    type: testcase
    title: '[Storage][permission] volume operation in a pool residing on a no-root-squashed
      NFS share'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17814
  fields:
    type: testcase
    title: '[USB][Hostdev] Hot-plug/hot-unplug usb device 1000 times'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16469
  fields:
    type: heading
    title: Do blockpull when using rbd image as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-17113
  fields:
    type: testcase
    title: '[snapshot-dumpxml] - dump xml for a domain snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18458
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-34480
  fields:
    type: testcase
    title: Define nwfilter on RHEL7.1 host, then upgrade the host OS to RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-17127
  fields:
    type: testcase
    title: '[update-device] update device from an XML file -bug 921398'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17126
  fields:
    type: testcase
    title: '[undefine]Check libvirt undefine on running guest can allow transition
      from persistent to transient - bug 735498'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17125
  fields:
    type: testcase
    title: '[undefine] - Undefine an inactive domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17124
  fields:
    type: testcase
    title: '[ttyconsole] - get device for TTY console'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17123
  fields:
    type: testcase
    title: '[timing] - Print time info'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17122
  fields:
    type: testcase
    title: '[sysinfo]print the hypervisor sysinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17121
  fields:
    type: testcase
    title: '[suspend] - Suspend a running domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17120
  fields:
    type: testcase
    title: '[start]virsh start with options - bug 733762'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17129
  fields:
    type: testcase
    title: '[vcpucount] - Print virtual cpus count in max/active/config/live/current
      flags'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17128
  fields:
    type: testcase
    title: '[uri] - Print the hypervisor canonical URI --bug 889984'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12720
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-17615
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Create 1024 guests on different kinds
      of virtual network (isolated, route , NAT) with DHCP - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18038
  fields:
    type: testcase
    title: '[Host network interface management] destroy & start interface - bug 956994'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18039
  fields:
    type: testcase
    title: '[Host network interface management] dump interface''s xml'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18402
  fields:
    type: testcase
    title: '[Guest kernel debugging] forbid invalid address type for panic device.  -
      #BZ1138125'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-17530
  fields:
    type: testcase
    title: '[Console and serial devices][console]console disconnection after guest
      os gets shut down'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17239
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] sVirt testing about glusterfs'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17238
  fields:
    type: testcase
    title: '[sVirt] sVirt testing about usb device - bug 1111451'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17614
  fields:
    type: testcase
    title: '[Scalability][Migration]Concurrent migrate 514 guests through TLS connection
      using live,undefinesource,persistent with ipv6 - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17531
  fields:
    type: testcase
    title: '[console and serial devices][console]set escape character for console
      - bug 754800 845460'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17233
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] Should be able to set security context for
      the Read-only file system - bug 947342'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17232
  fields:
    type: testcase
    title: '[sVirt] [DAC] [static] static DAC''s testing in guest''s xml and qemu.conf
      - bug 856951 1146886'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17231
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] shared disks with <shareable/> usability'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17230
  fields:
    type: testcase
    title: '[sVirt] [selinux] [custom] set set_process_name in /etc/libvirt/qemu.conf'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17237
  fields:
    type: testcase
    title: '[sVirt] [none] sVirt testing while set security mode=''none'' in guest''s
      xml --bug 1027096 1113860'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17236
  fields:
    type: testcase
    title: '[sVirt] [none]sVirt testing while set seclabel type=''none'' in guest''s
      xml -bug 1108590 1105954'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17235
  fields:
    type: testcase
    title: '[sVirt]Check avc info caused by sVirt'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17234
  fields:
    type: testcase
    title: '[sVirt] [selinux] [custom] Grant KVM guests retain arbitrary capabilities
      - BZ#767425'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17533
  fields:
    type: testcase
    title: '[console and serial devices][serial]vc type serial port in domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-19132
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][startupPolicy] Start domain with cdrom disk
      with startupPolicy=''optional'''
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17535
  fields:
    type: testcase
    title: '[console and serial devices][channel]Modify target type of channel element
      from ''virtio'' to ''guestfwd'' should not cause libvirtd crash -- Bug 856489'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17536
  fields:
    type: testcase
    title: '[console and serial devices][console]console should be released in interactive
      virsh -- bug 730101'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17537
  fields:
    type: testcase
    title: '[console and serial devices][channel]virtio UNIX type channel in domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-19036
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17177
  fields:
    type: testcase
    title: '[virt-xml-validate] Dump lxc''s xml should valid --bug 1028107'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17945
  fields:
    type: testcase
    title: '[CPU Management] CPU checks during migration - vendor check'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17944
  fields:
    type: testcase
    title: '[CPU Management] check the compatibility of CPU between two host'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17947
  fields:
    type: testcase
    title: '[CPU Management] Check baseline CPU for a set of given capabilities especially
      with NUMA'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17946
  fields:
    type: testcase
    title: '[CPU Management] the vendor_id attribute should be disabled while cpu
      mode is ''host-model'' - bug 858147'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17941
  fields:
    type: testcase
    title: '[CPU Management] host-model does not use correct cpuid level and causes
      kernel panics - bug 1014682, 1018251'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17940
  fields:
    type: testcase
    title: '[CPU Management]Check CPU topology in capabilities XML when libvirt fails
      to detect host CPU model-bug866999,bug868972'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17943
  fields:
    type: testcase
    title: '[CPU Management] CPU checks during migration - feature check'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17942
  fields:
    type: testcase
    title: '[CPU Management] nonstop_tsc cpu flag support for KVM guests -- bug 1100086'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17949
  fields:
    type: testcase
    title: '[CPU Management] check CPU models/flags added to cpu_map.xml  - bug 797283'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17948
  fields:
    type: testcase
    title: '[CPU Management] compare baseline CPU for a set of given capabilities
      - bug 731151'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-19529
  fields:
    type: heading
    title: '[configuration]unix socket modification'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-17618
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Do libvirt statistics command to fetch
      the dom/blk/mem/list info about 1024 guests-bug617286,bug687907 - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-19039
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16946
  fields:
    type: testcase
    title: '[domblklist]list all domain blocks'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16947
  fields:
    type: testcase
    title: '[domdisplay] - provides a URI for spice'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16944
  fields:
    type: testcase
    title: '[domblkerror] Show errors on block devices'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16945
  fields:
    type: testcase
    title: '[domblkinfo] -     Get block device size info for a domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16942
  fields:
    type: testcase
    title: '[detach-disk] - Detach disk from args'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16943
  fields:
    type: testcase
    title: '[detach-interface] - Detach interface from args'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17499
  fields:
    type: testcase
    title: '[libvirtd] Restart libvirtd without killing guests'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17498
  fields:
    type: testcase
    title: '[libvirtd] Libvirt client may crash when it closes connection to libvirtd
      - bug 800185'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17497
  fields:
    type: testcase
    title: '[libvirtd] Start&destroy guest in a loop - bug 823716'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17496
  fields:
    type: testcase
    title: '[libvirtd] Check for domain being active on successful job acquire'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17495
  fields:
    type: testcase
    title: '[libvirtd] libvirtd crash/hang at virFDStreamEvent when qemu guest shuts
      down - BZ#716393'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17494
  fields:
    type: heading
    title: Need to update test case
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17493
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17492
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17491
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-16949
  fields:
    type: testcase
    title: '[domdisplay] - provides a URI for VNC'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-13197
  fields:
    type: testcase
    title: '[Graphical framebuffers] Configuring Spice compression options - bug 682237'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17176
  fields:
    type: testcase
    title: '[nwfilter-define] - define or update a network filter from an XML file
      --bug 981106'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16838
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "i6300esb" - poweroff'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16839
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "ib700" - dump(bug667090)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16832
  fields:
    type: testcase
    title: '[Watchdog device]Watchdog device "ib700" - none(bug667090)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16833
  fields:
    type: testcase
    title: '[Watchdog device]Watchdog device "ib700" - pause(bug667090)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16830
  fields:
    type: testcase
    title: '[Video devices] vga'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16831
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "ib700" - shutdown (bug667090)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16836
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "i6300esb" - dump'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16837
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "i6300esb" - none'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16834
  fields:
    type: testcase
    title: '[Watchdog device]Watchdog device "ib700" - reset(bug667090)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16835
  fields:
    type: testcase
    title: '[Watchdog device]  Watchdog device "i6300esb" - shutdown'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18531
  fields:
    type: testcase
    title: '[SR-IOV]Check the number of connections on hostdev network -bug1020135'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18530
  fields:
    type: testcase
    title: '[SRIOV] Attach virtual interface whose source is default network while
      the guest contains VF - bug 1012824'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18533
  fields:
    type: testcase
    title: '[SR-IOV]libvirt choose the available vf for assignment automatically if
      the fore vfs are unavaliable -bug1012820'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18532
  fields:
    type: testcase
    title: '[SR-IOV]Check  VFs are listed in order in PF''s sysfs directory -bug1025397'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18535
  fields:
    type: testcase
    title: '[SR-IOV] Prepare: Emulex network adapters'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18534
  fields:
    type: testcase
    title: '[SR-IOV][VFIO] prepare VFIO testing env'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18537
  fields:
    type: heading
    title: Libvirt Test Plan - SCSI device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18536
  fields:
    type: testcase
    title: '[SR-IOV] Prepare: Intel 82576 network adapters'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18539
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18538
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-24950
  fields:
    type: testcase
    title: '[USB][smartcard][controller] Smartcard emulation support USB controller '
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-20257
  fields:
    type: testcase
    title: '[Storage][negative] should be able to destroy iscsi pool when iscsi session
      closed bz 1171984'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-35614
  fields:
    type: testcase
    title: Check for maximum number of vcpus exceeding topology limit - bug 725269
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-20255
  fields:
    type: testcase
    title: check libvirt will auto detect a right arch when do not specified arch
      - bug 1219191
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-20252
  fields:
    type: testcase
    title: basic test for memtune - bug 1146539
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-35613
  fields:
    type: testcase
    title: Hot-plug/unplug vcpus with vcpupin operation- bug 1088165
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-16729
  fields:
    type: heading
    title: Wipe volume by using different options with algorithm
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16726
  fields:
    type: heading
    title: Permission in nfs based pool by using nfs format
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16727
  fields:
    type: testcase
    title: '[Storage][permission] Volume operation in a pool residing on a root-squashed
      NFS share - BZ#612341'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16724
  fields:
    type: testcase
    title: '[Storage][permission] check vol permission in direcotry pool - bug 839463'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16725
  fields:
    type: testcase
    title: '[Storage][permission]check directory pool permission -- Bug: 815644'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16723
  fields:
    type: heading
    title: Storage pool/volume permission in dir/fs based pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16720
  fields:
    type: testcase
    title: '[Storage][encryption] volume operations with encrypted vol --BZ1143785'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18405
  fields:
    type: testcase
    title: '[Guest kernel debugging] Libvirt can detect crashed domains correctly
      after restarted libvirtd- bug 749096'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18404
  fields:
    type: testcase
    title: '[Guest kernel debugging] Libvirtd can recognize guest-panicked status
      when restart libvirtd. #BZ1178652'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18407
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "i6300esb" - dump'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18406
  fields:
    type: requirement
    title: dump with watchdog device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18401
  fields:
    type: testcase
    title: '[Guest kernel debugging] on_crash event with pvpanic device test scenarios
      coverage - Bug 828546 826315 1033984 1136251'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18400
  fields:
    type: testcase
    title: '[Guest kernel debugging] on_crash event without pvpanic device test scenarios
      coverage'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18403
  fields:
    type: testcase
    title: '[Guest kernel debugging] libvirt should report error when hot-plug/hot-unplug
      panic device . -  #BZ 1169183'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-19139
  fields:
    type: testcase
    title: '[virtual disks][boot order] Attach/Detach a disk with boot order in xml
      - bug1007759'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19136
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][startupPolicy] Start domain with cdrom disk
      with startupPolicy=''requisite'''
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19137
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][startupPolicy] Start domain with floppy
      disk with startupPolicy=''mandatory'''
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19134
  fields:
    type: testcase
    title: '[virtual disks][boot order] Define/start/destroy/save/restore/snapshot
      a domain with ''boot order'' defined'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18409
  fields:
    type: heading
    title: Crash qemu-kvm process
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18408
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "ib700" - dump(bug667090)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-16570
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to middle after creating
      external disk-only snapshot with "block" disk type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16612
  fields:
    type: testcase
    title: '[Disk snapshot][External] Get/set the current external disk-only snapshot'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18399
  fields:
    type: testcase
    title: '[Guest kernel debugging] Set auto_dump_path in qemu.conf'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18398
  fields:
    type: testcase
    title: '[Guest kernel debugging] Set bypass_cache for the auto dump in qemu.conf'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-16613
  fields:
    type: testcase
    title: '[Internal] Revert a shutdown domain to a shutdown internal  snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18395
  fields:
    type: testcase
    title: '[Guest kernel debugging] Send a bad keycode to guest or send key to a
      shutdown guest - bug 733597/746268'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18394
  fields:
    type: testcase
    title: '[Guest kernel debugging] Send SysRq key strokes to guests'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18397
  fields:
    type: requirement
    title: coredump with panic devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18396
  fields:
    type: testcase
    title: '[Guest kernel debugging] Send NMI to QEMU guests - 632495'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18391
  fields:
    type: heading
    title: Techniques relate to guest kernel panic
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18390
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18393
  fields:
    type: testcase
    title: '[Guest kernel debugging] Send Alt+SysRq+B to trigger guest reboot - bug
      708756'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18392
  fields:
    type: requirement
    title: Send Alt+SysRq+B/SysRq/NMI to guest to debug or diagnose the guest while
      the gue...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18719
  fields:
    type: testcase
    title: '[Virtual Networks] MAC Programming for virtio over macvtap - bug 848199
      ,bug 923051'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18718
  fields:
    type: testcase
    title: '[Virtual Networks] Define and start a macvtap network with invalid section
      - bug 767057'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16610
  fields:
    type: testcase
    title: '[Disk snapshot][External] Change external disk-only snapshot description
      with snapshot-edit #BZ 741510 744071'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16611
  fields:
    type: testcase
    title: '[Disk snapshot][External] Get the name of the parent of a snapshot #BZ
      742410'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16616
  fields:
    type: requirement
    title: Negative Test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16617
  fields:
    type: testcase
    title: '[Disk snapshot][External] Doing blockpull is unsupported with qemu-kvm'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16614
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] Delete a internal system checkpoint
      snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18248
  fields:
    type: heading
    title: Network tuning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18711
  fields:
    type: testcase
    title: '[Virtual Networks] Shared physical network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18710
  fields:
    type: testcase
    title: '[Virtual Networks] Route virtual network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18713
  fields:
    type: testcase
    title: '[virtual networks] Unable to determine device index for network device"
      when attaching new network device to a guest that already has a netdev of type=''hostdev''
      BZ#827519'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16615
  fields:
    type: heading
    title: Negative test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18715
  fields:
    type: testcase
    title: '[Virtual Networks] using remote TFTP server in virtual network - bug 683377'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18714
  fields:
    type: testcase
    title: '[Virtual Networks] undefine network -bug949487'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18241
  fields:
    type: heading
    title: Block I/O tuning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18716
  fields:
    type: testcase
    title: '[virtual networks]Libvirt with NAT setup nukes port forwarding into the
      internal network BZ#812441'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18089
  fields:
    type: heading
    title: Dual host testing Provision two virtual machines on two hosts with virtlockd
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18088
  fields:
    type: testcase
    title: '[virtlockd] Prevent starting 2 guests on 1 host pointing at the same scsi
      device in non-shareable mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-19627
  fields:
    type: heading
    title: Host and Hypervisor
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19624
  fields:
    type: testcase
    title: '[Storage][negative] vol of extended partition should not be wiped by vol-wipe
      bz1225694'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18081
  fields:
    type: testcase
    title: '[sanlock] Sanlock library license compatibility testing'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18080
  fields:
    type: heading
    title: Check sanlock library license compatibility
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18083
  fields:
    type: testcase
    title: '[sanlock] Check virt-sanlock-cleanup command BZ# 738534 949483'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18082
  fields:
    type: heading
    title: Check virt-sanlock-cleanup command
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18085
  fields:
    type: heading
    title: Single host testing Provision two virtual machines on  a host with virtlockd
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-16618
  fields:
    type: testcase
    title: '[Disk snapshot][External] Doing blockcopy is unsupported with qemu-kvm'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18087
  fields:
    type: testcase
    title: '[virtlockd] Prevent starting 2 guests pointing at  the same lvm in non-shareable
      mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18086
  fields:
    type: testcase
    title: '[virtlockd] Prevent starting 2 guests on 1 host pointing at the same disk
      in non-shareable mode --bug 968128 973543 981122'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-16619
  fields:
    type: testcase
    title: '[Disk snapshot][External] Creating external disk-only snapshot is unsupported
      with qemu-kvm'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18717
  fields:
    type: testcase
    title: '[Virtual Networks]PXE and TFTP support in virtual network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16539
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from base to top after creating
      external disk-only snapshot with "file" disk type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16538
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from base to top after creating
      external disk-only snapshot with "block" disk type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16537
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from middle to top after creating
      external disk-only snapshot with "file" disk type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16536
  fields:
    type: requirement
    title: Snapshot Merge
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16535
  fields:
    type: heading
    title: Do snapshot merge after create external snapshot - RHEV only
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16532
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create an external disk-only snapshot with guest
      imges based netfs-nfs pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16531
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk-only snapshot with guest
      imges based iSCSI pool #BZ 1032363'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17000
  fields:
    type: testcase
    title: '[iface-rollback] - rollback to previous saved configuration created via
      iface-begin'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17001
  fields:
    type: testcase
    title: '[iface-start] - start a physical host interface (enable it / "if-up")'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17002
  fields:
    type: testcase
    title: '[iface-unbridge] undefine a bridge device after detaching its slave device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17003
  fields:
    type: testcase
    title: '[iface-undefine] - undefine a physical host interface (remove it from
      configuration)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17004
  fields:
    type: testcase
    title: '[inject-nmi]Inject NMI to the guest - bug 632495'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17005
  fields:
    type: testcase
    title: '[list] - List domains'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17006
  fields:
    type: testcase
    title: '[log] - Output logging to file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17007
  fields:
    type: testcase
    title: '[managedsave-remove] Remove an existing managed save state file for a
      domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17008
  fields:
    type: testcase
    title: '[Managedsave] - managed save of a domain state'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17009
  fields:
    type: testcase
    title: '[managedsave] bypass the file system cache when managed saving and restoring
      guests'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18490
  fields:
    type: heading
    title: SR-IOV - <hostdev>
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18323
  fields:
    type: heading
    title: nwfilter define and usage in guest network interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18669
  fields:
    type: testcase
    title: '[Guest network driver]Check all supported NIC models driver'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18668
  fields:
    type: testcase
    title: '[Guest network driver] Illegal interface type or NIC model'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18665
  fields:
    type: testcase
    title: '[PCIe] Q35 suppoort save/dump/snapshot - bug 1023852'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-18664
  fields:
    type: testcase
    title: '[PCIe] A pci-bridge support 31 pci devices.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-18667
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18666
  fields:
    type: heading
    title: Libvirt Test Plan - Virtual networks
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18661
  fields:
    type: testcase
    title: '[PCIe] PCIe support device hot-plug -- bug  1045975'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-18660
  fields:
    type: testcase
    title: '[PCIe] Emulate PCI Express Bus in libvirt -- bug 819968'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-18663
  fields:
    type: testcase
    title: '[PCIe] PCIe support device cold-plug'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-18662
  fields:
    type: testcase
    title: '[console and serial devices][controller]Automatically add a new PCI bus
      for q35 machines''s pci bridge dmi-to-pci-bridge - bug1003983'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-18244
  fields:
    type: heading
    title: Memory tuning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18326
  fields:
    type: testcase
    title: '[Network filter] edit XML configuration for a network filter - bug 981107'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18327
  fields:
    type: testcase
    title: '[Network filter]The uuid of a nwfilter shouldn''t be permitted to change
      --bug 1077009'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18328
  fields:
    type: testcase
    title: '[Network filter] list network filters'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18329
  fields:
    type: testcase
    title: '[Network filter] network filter information in XML'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18498
  fields:
    type: testcase
    title: '[SR-IOV] Create up to MAX VFs'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-16440
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16447
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-16446
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-16445
  fields:
    type: heading
    title: Libvirt Test Plan - NFV
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-16449
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-16448
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-18084
  fields:
    type: heading
    title: virtlockd
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-17134
  fields:
    type: testcase
    title: '[domiftune] - set virtual network interface bandwidth - bug 782716'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17135
  fields:
    type: testcase
    title: '[virsh cmd]Check libvirt detect crashed domains correctly - bug 739641'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17136
  fields:
    type: testcase
    title: '[domstate]Check Libvirt detect crashed domains correctly after restarted
      libvirtd - 749096'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17137
  fields:
    type: testcase
    title: '[undefine]Check memory leak of undefine guest with --remove-all-storage
      - bug 786674'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17130
  fields:
    type: testcase
    title: '[vcpuinfo] Get domain vcpu information - bug 808979, 920010, 985980'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17131
  fields:
    type: testcase
    title: '[vcpupin] - Control domain vcpu affinity with --config --live --current
      - bug 949212'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17132
  fields:
    type: testcase
    title: '[version] - Show version'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17133
  fields:
    type: testcase
    title: '[virsh -h]Some issues about virsh -h usage BZ 817244'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17138
  fields:
    type: testcase
    title: '[virsh cmd]Check the libvirtd on domblkinfo - bug 736603'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17139
  fields:
    type: testcase
    title: '[virsh cmd]Cloned domain with macvtap NIC - bug 786648'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12669
  fields:
    type: heading
    title: Discard blocked which are not in use by the filesystem (domfstrim)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12759
  fields:
    type: heading
    title: Libvirt Test Plan - Managed save
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-17228
  fields:
    type: testcase
    title: '[sVirt] [selinux] [custom] set security_default_confined in qemu.conf
      - bug  823857'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17229
  fields:
    type: testcase
    title: '[sVirt] [selinux] [custom] set security_require_confined in qemu.conf'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17220
  fields:
    type: testcase
    title: '[sVirt] [DAC] libvirt DAC Isolation - bug 822589'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17221
  fields:
    type: testcase
    title: '[sVirt] [selinux] [static] Use virt-manager to set the static labels for
      the guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17222
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] migration with svirt'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17223
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] qemu-kvm can access -mem-path while umask is
      027 - bug 815206'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17224
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] save and restore with svirt - scenario 1'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17225
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] save and restore with svirt - scenario 2'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17226
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] Guest with sVirt on no_root_squash NFS'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17227
  fields:
    type: testcase
    title: '[sVirt] [DAC] security: support for names on DAC labels - 860519'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17958
  fields:
    type: testcase
    title: '[CPU management] error output when migrate a vm which have migration unsupported
      cpu flags - bug 1185458'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17959
  fields:
    type: testcase
    title: '[CPU Management] check different cpu model''s guest can work well with
      save/restore/migrate --xml and save-image-edit - bug 1183869 1150200'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17952
  fields:
    type: testcase
    title: '[CPU Management]Support new KVM processor models in QEMU driver-bug836667'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17953
  fields:
    type: testcase
    title: '[CPU Management] libvirt should support new sandy bridge cpu - bug 761005'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17950
  fields:
    type: testcase
    title: '[CPU Management] start the guest which CPU comprises flags that host doesn''t
      support - bug 724893'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17951
  fields:
    type: testcase
    title: '[CPU Management] libvirt should support cpu64-rhel* cpu models - bug 768450'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17956
  fields:
    type: testcase
    title: '[CPU Management] libvirt support SMAP and Broadwell new instructions -
      bug 1089383 ,bug1089378'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17957
  fields:
    type: testcase
    title: '[CPU Management] libvirt support Haswell new instructions- bug844007'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17954
  fields:
    type: testcase
    title: '[CPU Management]  libvirt should support AMD Bulldozer cpu - bug 767364'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17955
  fields:
    type: testcase
    title: '[CPU Management] support AMD Abu-Dhabi/Seoul (AMD OpteronTM 63xx/4xxx
      series) processor - bug 838129,838127'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-16799
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16798
  fields:
    type: heading
    title: Libvirt Test Plan - Virtual devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16439
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-17488
  fields:
    type: testcase
    title: '[libvirtd]  libvirtd.conf error causes libvirtd to exit silently - bug
      728654'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17489
  fields:
    type: heading
    title: 5. Others
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17484
  fields:
    type: testcase
    title: '[libvirtd] option "--timeout" testing - 3'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17485
  fields:
    type: heading
    title: 4. Operation cause libvirtd crash
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17486
  fields:
    type: testcase
    title: '[libvirtd] xmldesc with a typo should not make libvirtd segfault - Bug
      523418'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17487
  fields:
    type: testcase
    title: '[libvirtd] destroy a creating domain - bug 843716'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17480
  fields:
    type: testcase
    title: '[libvirtd] check access control of readonly unix socket.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17481
  fields:
    type: testcase
    title: '[libvirtd] check return value when restart libvirtd  by non-root user
      - bug 730510 889984 955470'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17482
  fields:
    type: testcase
    title: '[libvirtd] option "--timeout" testing - 1'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17483
  fields:
    type: testcase
    title: '[libvirtd] option "--timeout" testing - 2'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17549
  fields:
    type: testcase
    title: '[console and serial devices][serial]UDP type serial port in domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17548
  fields:
    type: testcase
    title: '[console and serial devices][serial]Named pipe type serial port in domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18454
  fields:
    type: testcase
    title: '[Hooks] network hooks - stdin/hostdev network/Output actual vlan and bandwidth
      -bug1064831'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18519
  fields:
    type: testcase
    title: '[SR-IOV][VFIO] passthrough the VF of VF Pool to the guest with VFIO driver
      with "managed=no" setting'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-16846
  fields:
    type: testcase
    title: '[configuration] Configure timer of guest - bug 973005'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18518
  fields:
    type: testcase
    title: '[SR-IOV][VFIO] passthrough the VF of VF pool to guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-16843
  fields:
    type: testcase
    title: '[input/output devices] libvirt: qemu, qxl device: support ram_size parameter
      -- Bug:896604'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16842
  fields:
    type: testcase
    title: '[Watchdog device]Watchdog device "i6300esb" - reset'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16841
  fields:
    type: testcase
    title: '[Watchdog device]Watchdog device "i6300esb" - pause'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16840
  fields:
    type: testcase
    title: '[Watchdog device] Watchdog device "ib700" - poweroff(bug667090)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18526
  fields:
    type: testcase
    title: '[SR-IOV] Hot-plug VFs from sriov vfs pool to guest--bug 1003537,bug1035490'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17813
  fields:
    type: testcase
    title: '[USB][Hostdev][unplug/re-plug]Add support for usb-host hotplug - bug1006915'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18524
  fields:
    type: testcase
    title: '[SR-IOV] AER support -- bug 984599'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18525
  fields:
    type: testcase
    title: '[SR-IOV] Start the VF Pool ---bug 1002438'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18522
  fields:
    type: testcase
    title: '[virtual networks] SRIOV VFs pool - bug 971325'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18523
  fields:
    type: testcase
    title: '[SR-IOV][VFIO]passthrough 2 PFs with vfio driver with "managed=yes"'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18520
  fields:
    type: testcase
    title: '[SR-IOV][VFIO] passthrough VF with vfio driver without "managed=yes"'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17812
  fields:
    type: testcase
    title: '[USB] Octal device number is offered in libvirt Error when virt-install
      guest with duplicate --host-device options. - bug 967712'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17281
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17811
  fields:
    type: testcase
    title: '[USB][Stable guest ABI]check redirected usb device -bug 1035128'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18528
  fields:
    type: testcase
    title: '[SR-IOV] Define the VF Pool --bug 1002423  1004676 1047818'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18529
  fields:
    type: testcase
    title: '[SR-IOV] Attach interfaces from macvtap network with passthrough mode
      ---bug 848193'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17542
  fields:
    type: testcase
    title: '[console and serial devices][controller]Controllers do not support virsh
      attach/detach-device --persistent BZ#804601'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17817
  fields:
    type: heading
    title: Referenc
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16680
  fields:
    type: testcase
    title: '[storage][disk pool]Edit source format of a disk pool in active status  BZ#
      851078 bug 1181062'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17816
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17815
  fields:
    type: testcase
    title: '[USB][virtual disk] Hot-plug/hot-unplug usb disk 1000 times'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17546
  fields:
    type: testcase
    title: '[console and serial devices][RFE] add support for pci-serial - bug 998813'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18418
  fields:
    type: testcase
    title: '[Guest kernel debugging] Compress guest core dump to gzip'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18419
  fields:
    type: testcase
    title: '[Guest kernel debugging] Compress guest core dump to invalid format -
      bug669586'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18412
  fields:
    type: testcase
    title: '[Guest kernel debugging] Core dump a non-live guest should reprot error'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18413
  fields:
    type: testcase
    title: '[Guest kernel debugging] virsh dump with exclusive options - Bug 698490'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18410
  fields:
    type: testcase
    title: '[Guest kernel debugging] Check the dumped images can be analyzed with
      crash tool sucessfully'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18411
  fields:
    type: testcase
    title: '[Guest kernel debugging] Coredump filter to exclude KVM guest OS memory
      out of QEMU process BZ 822641'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18416
  fields:
    type: requirement
    title: virsh dump with compression format
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18417
  fields:
    type: testcase
    title: '[Guest kernel debugging] Compress guest core dump to bzip2'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18414
  fields:
    type: testcase
    title: '[guest kernel debugging] virsh dump with option --bypass-cache to avoid
      file system cache when dumping'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18415
  fields:
    type: testcase
    title: '[Guest kernel debugging] Print domstate reason after virsh dump --crash'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-38174
  fields:
    type: heading
    title: To be deleted or move to other plan
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16999
  fields:
    type: testcase
    title: '[iface-name] - convert an interface MAC address to interface name'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16998
  fields:
    type: testcase
    title: '[iface-mac] - convert an interface name to interface MAC address'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16995
  fields:
    type: testcase
    title: '[iface-dumpxml] - dump interface''s xml with option "--inactive"'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16994
  fields:
    type: testcase
    title: '[iface-dumpxml] - dump interface''s xml'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16997
  fields:
    type: testcase
    title: '[iface-list] - list physical host interfaces'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16996
  fields:
    type: testcase
    title: '[iface-edit] - edit XML configuration for a physical host interface'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16991
  fields:
    type: testcase
    title: '[iface-commit] - commit changes made since iface-begin and free restore
      point'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16990
  fields:
    type: testcase
    title: '[iface-bridge] create a bridge device and attach an existing network device
      to it'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16993
  fields:
    type: testcase
    title: '[iface-destroy] - destroy a physical host interface (disable it / "if-down")'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16992
  fields:
    type: testcase
    title: '[iface-define] - define (but don''t start) a physical host interface from
      an XML file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21869
  fields:
    type: testcase
    title: '[CPU management] Check libvirt won''t create a xml have broken settings
      during iothreadadd/del/pin - bug 1218577'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-19385
  fields:
    type: testcase
    title: '[CPU Management] configuring the guest CPU model-bug822148'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18382
  fields:
    type: testcase
    title: netcf ignores any IPv4 address past the first one   --Bug 1159000
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18383
  fields:
    type: testcase
    title: netcf should allow interfaces to be configured with both DHCPv4 and static
      IPv4 addresses at the same time   --Bug 1113983
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18380
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18381
  fields:
    type: testcase
    title: Emit  DHCPV6C to ifcfg-XXX and Remove extraneous single quotes from IPV6ADDR_SECONDARIES   --Bug
      1170941  bug 1113978
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18386
  fields:
    type: heading
    title: Libvirt Test Plan - Guest kernel debugging
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18387
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18384
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18385
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18388
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18389
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18761
  fields:
    type: testcase
    title: '[virtual networks] Disallow <mac>/<bandwidth>/<ip>/<dns>/<domian> parameters
      for bridged/macvtap/hostdev virtual networks.  --bug 1057321'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-17623
  fields:
    type: testcase
    title: '[Scalability][Migration]Migrate 514 guests through TCP connection --tunnelled
      with ipv4 - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17729
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17728
  fields:
    type: heading
    title: Libvirt Test Plan - USB
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16667
  fields:
    type: heading
    title: Logical based storage pool/volume
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16666
  fields:
    type: testcase
    title: '[storage][iscsi pool]volume operations in iscsi pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16665
  fields:
    type: testcase
    title: '[storage][iscsi pool] define Multi-IQN iscsi pool --bug 488142, 1172015'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16664
  fields:
    type: testcase
    title: '[storage][iscsi pool]define multiple iscsi pools with the same target--bug:
      817219'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16663
  fields:
    type: testcase
    title: '[Storage][iscsi pool] iSCSI based storage pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16662
  fields:
    type: heading
    title: ISCSI based storage pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16661
  fields:
    type: testcase
    title: '[Storage][netfs pool] check the uuid changed after create the same netfs
      pool second time - Bug 603442'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16660
  fields:
    type: testcase
    title: '[storage][netfs pool] volume operations in netfs pool with glusterfs source
      format --BZ1072653, 1077068'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18254
  fields:
    type: heading
    title: Libvirt Test Plan - Remote access
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18255
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18256
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18257
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18702
  fields:
    type: testcase
    title: '[virtual networks]  Direct attachment to physical interface'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18703
  fields:
    type: testcase
    title: '[Virtual Networks] migrate guest with the virtual network that doesn''t
      exist on target host'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18252
  fields:
    type: heading
    title: Known issue
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18253
  fields:
    type: heading
    title: reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-34243
  fields:
    type: testcase
    title: '[sVirt][dac] dac label testing  while set dynamic ownership=none -bug
      1267154'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-19652
  fields:
    type: heading
    title: migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18098
  fields:
    type: heading
    title: Basic virtlockd options test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18099
  fields:
    type: testcase
    title: '[virtlockd] Basic virtlockd options test'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18096
  fields:
    type: heading
    title: Check virtlockd's configuration file
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18097
  fields:
    type: testcase
    title: '[virtlockd] test conf file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18094
  fields:
    type: heading
    title: Live snapshot and merge with virtlockd enabled
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18095
  fields:
    type: testcase
    title: '[virtlockd] Live snapshot and merge with virtlockd enabled BZ#1191901'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18092
  fields:
    type: heading
    title: Migration testing as per "Dual host testing" with virtlockd
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18093
  fields:
    type: testcase
    title: '[virtlockd] Migrate guest with virtlockd enabled'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18090
  fields:
    type: testcase
    title: '[virtlockd] Prevent starting 2 guests on 2 hosts pointing at the same
      disk in non-shareable mode --bug 968128 973543 981122'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18091
  fields:
    type: testcase
    title: '[virtlockd] Prevent starting 2 guests on 2 hosts pointing at the same
      scsi device in non-shareable mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18763
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16528
  fields:
    type: testcase
    title: '[Disk snapshot][External] Libvirt should not create external snapshot
      file when fail to create external disk snapshot #BZ 843372'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16529
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk-only snapshot with quiesce
      option #BZ 804210'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16525
  fields:
    type: testcase
    title: '[Snapshot] External snapshot with gluster volume with disk type=network
      - bug 1032370'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16526
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create an external disk-only snapshot with guest
      imges based netfs-gluster pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16527
  fields:
    type: testcase
    title: '[Disk snapshot][External] Libvirt should export the live disk snapshot
      capabilities of QEMU hypervisor #BZ 1081032'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16520
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk-only snapshot for guest
      with multiple disks'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16521
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create an external disk-only snapshot with guest
      imges based FS pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16522
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create an external disk-only snapshot with guest
      imges based Logical pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16523
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create an external disk-only snapshot with guest
      imges based Dir pool #BZ 896013'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17035
  fields:
    type: testcase
    title: '[nodedev-list] - Enumerate devices on host  --bug 959428'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17034
  fields:
    type: testcase
    title: '[nodedev-dumpxml] - node device details in XML --bug 979290'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17037
  fields:
    type: testcase
    title: '[nodedev-reattach] - reattach node device to its device driver'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17036
  fields:
    type: testcase
    title: '[nodedev-reattach] - Reattach node device driver'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17031
  fields:
    type: testcase
    title: '[nodedev-create] - create a device defined by an XML file on the node
      [NPIV]'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17030
  fields:
    type: testcase
    title: '[nodedev-create] - create a device defined by an XML file on the node
      [no NPIV]'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17033
  fields:
    type: testcase
    title: '[nodedev-detach] - dettach node device from its device driver'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17032
  fields:
    type: testcase
    title: '[nodedev-destroy] - destroy a device on the node'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17039
  fields:
    type: testcase
    title: '[nodedev-reset] - Reset node device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17038
  fields:
    type: testcase
    title: '[nodedev-reset] - reset node device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18672
  fields:
    type: testcase
    title: '[Interface hotplug] Attach 32 NIC to guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18673
  fields:
    type: testcase
    title: '[Interface hotplug] Restart libvirtd before and after interface hot-plug,
      then unplug the interface - bug1146310'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18670
  fields:
    type: testcase
    title: '[Guest network driver]Libvirt can pick up the vhost driver for interface
      automatically'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18671
  fields:
    type: testcase
    title: '[Guest network driver] macvtap device name keeps the same after libvirtd
      shutdown/restart cycle --- Bug 649964'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18676
  fields:
    type: testcase
    title: '[Interface hotplug] Attach/Detach supported model NIC to guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18677
  fields:
    type: testcase
    title: '[interface hotplug] Check the ''passthru'' mode for direct interfaces
      - bug 693839 ,1052835'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18674
  fields:
    type: testcase
    title: '[interface hotplug] Attach interface with same mac or target as already
      attached interface'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18675
  fields:
    type: testcase
    title: '[Interface hotplug] Attach/Detach NIC to guest for 500 times - stress
      test'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18678
  fields:
    type: testcase
    title: '[interface hotplug] virsh can''t attach a new device to an inactive domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18679
  fields:
    type: testcase
    title: '[interface hotplug] virsh attach-interface using  a nonexistent script
      file  - bug 638633'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-38161
  fields:
    type: testcase
    title: '[event] [tray-change] List tray change events - 1226849'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-38162
  fields:
    type: heading
    title: Events for graphics
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-38163
  fields:
    type: testcase
    title: '[event] [graphics] List graphics events - 1236585'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-32950
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] support unpriv_sgio for the SCSI generic
      device - bug 1072736, 1072734'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-32956
  fields:
    type: testcase
    title: '[migration] Report reasonable error when QEMU fails with incoming migration
      - 1090093'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-33137
  fields:
    type: testcase
    title: '[migration] Migration from RHEL7.0 to RHEL7.2 - 1252685 1266856'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16450
  fields:
    type: heading
    title: libvirt feature for KVM-RT
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-16451
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-16452
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-16453
  fields:
    type: heading
    title: Libvirt Test Plan - Ceph
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16454
  fields:
    type: heading
    title: Test Strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16455
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16456
  fields:
    type: heading
    title: Test Scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16457
  fields:
    type: heading
    title: Use rbd image with domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16458
  fields:
    type: testcase
    title: '[virtual disks][network][ceph] Start domain with images based on ceph
      with disk type=network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16459
  fields:
    type: testcase
    title: '[virtual disks][network][ceph] Start domain with images based on ceph
      specifying <config..> in xml'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17103
  fields:
    type: testcase
    title: '[setmem] - Change current memory allocation'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17102
  fields:
    type: testcase
    title: '[setmaxmem] - Change maximum memory limit of inactive guest - Bug 572146'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17105
  fields:
    type: testcase
    title: '[setvcpus] - Change number of virtual CPUs - Bug 573597'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17104
  fields:
    type: testcase
    title: '[setmem] - Change current memory allocation with --config --live --current'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17107
  fields:
    type: testcase
    title: '[setvcpus]Check setvcpus set vcpu count correctly according to vcpucount
      output - bug 847198 1024245'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17106
  fields:
    type: testcase
    title: '[setvcpus] - Persistently change number of virtual CPUs -- 1129372'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38380
  fields:
    type: testcase
    title: '[log and debugging] Libvirtd has INFO log when max_anonymous_clients/max_clients
      reaches/falls below the limit.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18231
  fields:
    type: heading
    title: Tunable virsh command & CGroup
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-38382
  fields:
    type: testcase
    title: '[domjobinfo] - Get information about a completed job'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17109
  fields:
    type: testcase
    title: '[snapshot-create-as] Create a snapshot from a set of args'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17219
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] libvirt (KVM) NFS Image File Isolation - bug
      738882 731134'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17218
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] Guest with sVirt on root_squash NFS'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17215
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] guest create/destroy with virt-install and
      sVirt'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17214
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] Should failed to reload iptables rules with
      root permission when starting libvirtd in the way of executing /usr/sbin/libvirtd
      - bug 716612'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17217
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] Start guest with svirt on nfs while disable
      virt_use_nfs'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17216
  fields:
    type: testcase
    title: '[sVirt] [none] sVirt testing while disabled the selinux in the host os'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17211
  fields:
    type: testcase
    title: '[sVirt] [selinux] [static] Label guest with static seclabel type -bug
      976635 1066280'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17210
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] Label guest with the dynamic seclabel type
      - bug 954245'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17213
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] create live snapshot (disk-only) with guest''s
      image backing file on NFS storage - bug 822015'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17212
  fields:
    type: testcase
    title: '[sVirt] [selinux] [device] CDROMs with <readonly/> for multiple guest
      access -bug 547546'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-18021
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18020
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18213
  fields:
    type: heading
    title: Proposed Case
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18423
  fields:
    type: testcase
    title: '[Guest kernel debugging] storage device test scenarios coverage with dump/autodump/dumpcore'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17929
  fields:
    type: testcase
    title: '[CPU Management] enable/disable kvmclock - bug 783921'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-18350
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-17927
  fields:
    type: testcase
    title: '[CPU Management] libvirt support PV EOI feature- bug840940,848185'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17926
  fields:
    type: testcase
    title: '[CPU Management] Enable Hyper-V Enlightenment for Windows guests-bug864606'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17925
  fields:
    type: testcase
    title: '[CPU Management] new cpu''s flags, to control hyper-v related features
      - bug784836'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17924
  fields:
    type: testcase
    title: '[CPU Management] pvticketlocks: add kvm feature kvm_pv_unhalt - bug 1008989'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17923
  fields:
    type: heading
    title: hypervisor features
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-18353
  fields:
    type: testcase
    title: '[network filter]nwfilter deadlock -- bug 1034807'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-17921
  fields:
    type: testcase
    title: '[CPU Management] changing the pinning with virsh setvcpupin does not work
      - bug 1207257 1198096'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17920
  fields:
    type: testcase
    title: '[CPU management] Check the vcpupin of a running guest can be set out of
      cpu range of <cpuset> - bug 1207257 1227180'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18420
  fields:
    type: testcase
    title: '[Guest kernel debugging] Compress guest core dump to lzop'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18355
  fields:
    type: testcase
    title: '[Network filter]DHCPSERVER variable usage in nwfilter'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18354
  fields:
    type: testcase
    title: '[network filter]nwfilter deadlock --Bug 1088864'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18357
  fields:
    type: testcase
    title: '[Network filter]To terminate libvirtd when DHCP snooping is being used
      --Bug 1075543'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18356
  fields:
    type: testcase
    title: '[Network filter] Using the notation of $VARIABLE[@<iterator ID>]'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-31804
  fields:
    type: testcase
    title: Expose MPX feature to guest - libvirt support
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-31805
  fields:
    type: testcase
    title: '[domcapabilities] run virsh domcapabilities on ppc64le [bug 1260753, 1210159] '
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18581
  fields:
    type: heading
    title: Known issues (status updated on 2015/04/09)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-16854
  fields:
    type: testcase
    title: '[virtual devices] guest clock based on UTC-- bz 964177'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16855
  fields:
    type: testcase
    title: '[virtual devices] guest clock based on UTC with adjustment -- bz 964177'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16850
  fields:
    type: testcase
    title: '[virtual device ]Timer device track setting.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16851
  fields:
    type: testcase
    title: '[Virtual device] Add usb-hub to the guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16852
  fields:
    type: testcase
    title: '[virtual keyboard] test the virtual keyboard in the guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16853
  fields:
    type: testcase
    title: '[Timer device]set the timer base as localtime once localtime is used in
      the variable attribute.- bug 1046192 964177'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-17585
  fields:
    type: heading
    title: Virtual network
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17584
  fields:
    type: heading
    title: Multiple domains, Cgroup, Libvirtd, Libvirt event handler
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17587
  fields:
    type: heading
    title: Migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17586
  fields:
    type: heading
    title: Storage
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17581
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17580
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17583
  fields:
    type: heading
    title: vCPU, Memory, Disk and NIC in one guest
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17582
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17589
  fields:
    type: heading
    title: RHEVM and VDSM
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17588
  fields:
    type: heading
    title: nwfilter
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18588
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18589
  fields:
    type: heading
    title: Create/destroy  virtual HBA with NPIV
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-20279
  fields:
    type: heading
    title: virtual interface - type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20278
  fields:
    type: heading
    title: virtual interface - basic test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18501
  fields:
    type: testcase
    title: '[SR-IOV] Hotplug PF'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-20272
  fields:
    type: testcase
    title: '[virtual disks] Prepare iscsi server by targetcli'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-20275
  fields:
    type: heading
    title: validate
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-20276
  fields:
    type: heading
    title: Proposed
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18469
  fields:
    type: testcase
    title: '[PCI bridge] pci-bridge controller support in libvirt'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18468
  fields:
    type: testcase
    title: '[Scalability][One domain] Attach/Detach virtio disks to guest over the
      top limitation using PCI bridge(coldplug && hotplug) - bug737723'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18467
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18466
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18465
  fields:
    type: heading
    title: Migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18464
  fields:
    type: heading
    title: Hot-plug/unplug devices to PCI bridge
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18463
  fields:
    type: heading
    title: Attach devices to PCI bridge
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18462
  fields:
    type: heading
    title: PCI-bridge controller itself
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-31701
  fields:
    type: heading
    title: Known issue
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-18460
  fields:
    type: heading
    title: PCI bridge behind PCI bridge
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-16982
  fields:
    type: testcase
    title: '[escape] set escape sequence for console - bug 754800'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16983
  fields:
    type: testcase
    title: '[exit] - Quit interactive terminal - bug 837466'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16980
  fields:
    type: testcase
    title: '[edit] - Edit XML configuration for an inactive domain  --bug 902652'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17458
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-16986
  fields:
    type: testcase
    title: '[freecell] - List NUMA free memory'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16987
  fields:
    type: testcase
    title: '[help] - print help'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16984
  fields:
    type: testcase
    title: '[find-storage-pool-sources-as] - Find potential storage pool sources -
      Bug 509979'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16985
  fields:
    type: testcase
    title: '[find-storage-pool-sources] - Discover potential storage pool sources
      - Bug 509979'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16988
  fields:
    type: testcase
    title: '[hostname] - Print the hypervisor hostname'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16989
  fields:
    type: testcase
    title: '[iface-begin] create a snapshot of current interfaces settings, which
      can be later committed (iface-commit) or restored (iface-rollback)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17457
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17456
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17455
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17454
  fields:
    type: heading
    title: Libvirt Test Plan - Libvirtd
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-18908
  fields:
    type: heading
    title: Libvirt Test Plan - QE Consumption
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18909
  fields:
    type: heading
    title: 'libvirt part:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17736
  fields:
    type: heading
    title: virtual disk(type=block + device=disk + bus=usb), attach device to the
      controller(3 types)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17737
  fields:
    type: heading
    title: Controller
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17734
  fields:
    type: heading
    title: hostdev with bus/device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17735
  fields:
    type: heading
    title: redirdev
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17732
  fields:
    type: heading
    title: hostdev, redirdev, disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17733
  fields:
    type: heading
    title: hostdev with vendor/product id
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17730
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17731
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17738
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17739
  fields:
    type: heading
    title: Host device assignment
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18261
  fields:
    type: requirement
    title: Connect by ssh
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18260
  fields:
    type: heading
    title: Connect by ssh
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18263
  fields:
    type: testcase
    title: '[remote access] [ssh] [sasl] Connect to the hypervisor running on host
      over an SSH connection via ipv4 -bug 950855'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18262
  fields:
    type: testcase
    title: '[remote access] [ssh]  Check the ssh transportation with sasl gssapi authentication
      BZ#737176'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18265
  fields:
    type: testcase
    title: '[remote access] [ssh] [negative] libvirt should printed proper error while
      input invalid password  - bug 874897 822340'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18264
  fields:
    type: testcase
    title: '[remote access] [ssh] Remote access between different libvirt version
      -  bug 760436'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18267
  fields:
    type: testcase
    title: '[remote access] [ssh] [sasl] Connect to the hypervisor running on host
      over an SSH connection via ipv6 - bug 785164'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18266
  fields:
    type: testcase
    title: '[remote access] [ssh] libvirt should report proper error while connect
      the hyperv with the libssh2 transport -  bug 905513'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18269
  fields:
    type: requirement
    title: Connect by tls
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18268
  fields:
    type: heading
    title: Connect by tls
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-16678
  fields:
    type: heading
    title: Disk based storage pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16679
  fields:
    type: testcase
    title: '[Storage][disk pool] Disk based storage pool -- Bug 570286'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18063
  fields:
    type: testcase
    title: '[sanlock] Prevent starting 2 guests on 1 host pointing at a disk in non-shared
      modeBZ#578121'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18062
  fields:
    type: heading
    title: Single host testing Provision two virtual machines on a host with sanlock
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18061
  fields:
    type: heading
    title: sanlock
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18060
  fields:
    type: heading
    title: Test Scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-19640
  fields:
    type: heading
    title: Storage Pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19641
  fields:
    type: heading
    title: Storage Volume
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-34250
  fields:
    type: testcase
    title: Check spice/vnc password after save/restore circle - bug 1254164
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-19643
  fields:
    type: heading
    title: Virsh itself
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18069
  fields:
    type: testcase
    title: '[sanlock] Live snapshot and merge with sanlock enabled BZ#785736'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18068
  fields:
    type: heading
    title: Live snapshot and merge with sanlock
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-19648
  fields:
    type: heading
    title: host-inerface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19649
  fields:
    type: heading
    title: Domain virtual device hot-plug/unplug
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18289
  fields:
    type: testcase
    title: '[remote access] [tcp] [sasl] Connect to the hypervisor on host using TCP
      connection via ipv6'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18288
  fields:
    type: testcase
    title: '[remote access] [tcp] [sasl]Connect to the hypervisor on host using a
      plain TCP connection via ipv4'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18283
  fields:
    type: testcase
    title: '[remote Access] [tls] Check the memory leak on virNetTLSContextCheckCertificate
      and testTLSSessionInit BZ#735650'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18282
  fields:
    type: testcase
    title: '[remote access] [tls] [sasl] Check the tls, tcp, unix transportation with
      sasl gssapi authentication'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18281
  fields:
    type: testcase
    title: '[remote-access] [tls] Shouldn''t leave zombie processes while connect
      the hypervisor with the tls  - bug 1078590'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18280
  fields:
    type: testcase
    title: '[remote-access] [tls] [custom] tls_no_verify_certificate custom'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18287
  fields:
    type: requirement
    title: Connect by tcp
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18286
  fields:
    type: heading
    title: Connect by tcp
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18285
  fields:
    type: testcase
    title: '[remote access] [tls] [custom] TLS ports custom'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18284
  fields:
    type: testcase
    title: '[remote access] [tls] [custom] sasl_allowed_username_list custom for tls
      connection'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-16511
  fields:
    type: requirement
    title: Create External system checkpoint snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16510
  fields:
    type: heading
    title: External system checkpoint snapshot - RHEV only
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16513
  fields:
    type: testcase
    title: '[System checkpoint snapshot][External] Create external system checkpoint
      snapshot for guest with multiple disks'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16512
  fields:
    type: testcase
    title: '[System checkpoint snapshot][External] Delete external system checkpoint
      snapshot'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-13220
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-16514
  fields:
    type: testcase
    title: '[System checkpoint snapshot][External] Compress snapshot''s external memory
      state #BZ 1017227'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16517
  fields:
    type: requirement
    title: External Disk-only Snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16516
  fields:
    type: heading
    title: External Disk-only Snapshot - RHEV only
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16519
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk snapshot mixed with ''block''
      disk type and ''network'' disk type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16518
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk snapshot mixed with ''block''
      disk type and ''file'' disk type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17020
  fields:
    type: testcase
    title: '[net-dumpxml] - Get network XML information'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17021
  fields:
    type: testcase
    title: '[net-edit] - Edit network XML information'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17026
  fields:
    type: testcase
    title: '[net-undefine] - Undefine an inactive network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17027
  fields:
    type: testcase
    title: '[net-uuid] - Convert a network name to network UUID'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17024
  fields:
    type: testcase
    title: '[net-name] - Convert a network UUID to network name'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17025
  fields:
    type: testcase
    title: '[net-start] - Start a (previously defined) inactive network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38151
  fields:
    type: testcase
    title: '[Migration]Migration with <maxMemory> set should not report error.- bug1280419'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18606
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach a FC disk with
      readonly mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18605
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][block] Hot-plug/unplug a SAN disk with
      NPIV'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-38152
  fields:
    type: heading
    title: Domain monitoring
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18603
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Support scsi-generic device [Passthrough]
      [NPIV] - bug 721250'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18602
  fields:
    type: heading
    title: Virtual disk and hostdev passthrough
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18601
  fields:
    type: testcase
    title: '[NPIV] Each guest writes data into SAN storage via different vHBA at the
      same time.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-38156
  fields:
    type: heading
    title: Domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38158
  fields:
    type: heading
    title: Domain file system
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18609
  fields:
    type: testcase
    title: '[NPIV] RFE: Automatically generate unique WWN -bug 557935'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18608
  fields:
    type: testcase
    title: '[NPIV] Restart the libvirtd to see if the wwpn is same as before'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-37136
  fields:
    type: heading
    title: RHEL 7.3 Libvirt/KVM ppc64le plan
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [RHEL 7_3 Libvirt_KVM ppc64le plan]
- model: caselink.workitem
  pk: RHEL7-37138
  fields:
    type: heading
    title: Existing bugs
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [RHEL 7_3 Libvirt_KVM ppc64le plan]
- model: caselink.workitem
  pk: RHEL7-37139
  fields:
    type: heading
    title: Discussion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [RHEL 7_3 Libvirt_KVM ppc64le plan]
- model: caselink.workitem
  pk: RHEL7-12660
  fields:
    type: testcase
    title: '[guest agent] libvirt should reset rtc interrupt backlog after guest-set-time
      -bug 1103245 1062384'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-16465
  fields:
    type: testcase
    title: '[snapshot][ceph] External disk-only snapshot with rbd based disk --BZ1164528'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16464
  fields:
    type: testcase
    title: '[System checkpoint snapshot][Internal] Create internal system checkpoint
      snapshot with storage based on ceph BZ1179533'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16467
  fields:
    type: heading
    title: Do blockcopy when using rbd image as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16466
  fields:
    type: testcase
    title: '[snapshot][ceph] External system check point snapshot with a guest using
      rbd based image as disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16461
  fields:
    type: heading
    title: Hotplug/hotunplug a rbd image to/from guest
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16460
  fields:
    type: testcase
    title: '[virtual disks][network][ceph] Start domain with images based on ceph
      specifying <snapshot..> in xml'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17118
  fields:
    type: testcase
    title: '[start] - Start a (previous defined) inactive domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16462
  fields:
    type: testcase
    title: '[virtual disks][ceph] hotplug/hotunplug rbd based disk --BZ1045107'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17116
  fields:
    type: testcase
    title: '[snapshot-list] - list snapshots for a domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17117
  fields:
    type: testcase
    title: '[snapshot-parent]Get the name of the parent of a snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17114
  fields:
    type: testcase
    title: '[snapshot-edit]edit XML for a snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17115
  fields:
    type: testcase
    title: '[snapshot-info] Returns basic information about a snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17112
  fields:
    type: testcase
    title: '[snapshot-delete] - delete a domain snapshot - bug 956506'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16468
  fields:
    type: testcase
    title: '[blockcopy][ceph] Do blockcopy with a guest using rbd based image as disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17110
  fields:
    type: testcase
    title: '[snapshot-create] - create domain snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17111
  fields:
    type: testcase
    title: '[snapshot-current] - get the current snapshot'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18119
  fields:
    type: requirement
    title: Logs per hypervisor generated under different file dirs right
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18118
  fields:
    type: heading
    title: libvirtd.log
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18113
  fields:
    type: heading
    title: Libvirt Test Plan - Log and debugging
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18112
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18111
  fields:
    type: heading
    title: Known Issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18110
  fields:
    type: testcase
    title: '[virtlockd] Start 2 guests on 1 hosts pointing at the same scsi device
      in shareable mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18117
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18116
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18115
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18114
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-12779
  fields:
    type: testcase
    title: '[Managed save] Don''t start libvirt-guests on upgrade libvirt-client -
      bug 660706'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12778
  fields:
    type: testcase
    title: '[Managed save] libvirt-guests init script status returns right exit code  -bug
      957779'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12771
  fields:
    type: testcase
    title: '[Managed save] Domains are automatically start via initscript when host
      start'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12770
  fields:
    type: testcase
    title: '[Managed save] Domains are automatically restored via initscript when
      host boots up'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12773
  fields:
    type: testcase
    title: '[Managed save] Domains are automatically saved via initscript when host
      shuts down'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12772
  fields:
    type: testcase
    title: '[Managed save] Domains are *not* automatically restored via initscript
      when host boots up'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12775
  fields:
    type: testcase
    title: '[Managed save] Skip the URI during host shutdown when the URI cannot to
      be connectted to via initscript'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12774
  fields:
    type: testcase
    title: '[Managed save] Domains are *not* automatically restore via initscript
      with "ON_BOOT=ignore" when host boots up'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12777
  fields:
    type: testcase
    title: '[Managed save] Test matrix for libvirt-guests init script combinations
      of ON_BOOT and ON_SHUTDOWN'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12776
  fields:
    type: testcase
    title: '[Managed save] Autostart the managedsave guest with auto_start_bypass_cache=1
      in qemu.conf -bug963623'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-17202
  fields:
    type: heading
    title: New for 7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17203
  fields:
    type: testcase
    title: '[sVirt] RFE: the security drivers must remember original permissions/labels
      and restore them after - bug 547546'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17200
  fields:
    type: heading
    title: sVirt test while disable selinux for libvirt
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17201
  fields:
    type: heading
    title: Testing while disable selinux in host
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17206
  fields:
    type: testcase
    title: '[sVirt]start domain with nfs disk configured when virt_use_nfs SELinux
      boolean is off - bug 1029873, 731225'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17207
  fields:
    type: testcase
    title: '[sVirt]QEMU fd passing command line support - libvirt  -bug 1039117'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17204
  fields:
    type: testcase
    title: '[sVirt] qemu: could not load kernel -  bug 921135'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17205
  fields:
    type: testcase
    title: '[sVirt] SELinux Policy (KVM) NFS Image File Isolation  -bug 731147 1028324'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17208
  fields:
    type: testcase
    title: '[sVirt]Attaching tuntap queues and enable the multi-queue support in one
      network interface in guest OS -bug 1095636'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17209
  fields:
    type: testcase
    title: '[sVirt] [none] sVirt testing while enable/disable the security_driver
      in qemu.conf - bug 947387 1027096 1108590'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-18731
  fields:
    type: testcase
    title: '[virtual networks] libvirtd should not crash when destroy one guest with
      floor setting and remove bandwidth setting from network  --bug 975359'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-26556
  fields:
    type: heading
    title: others
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-34824
  fields:
    type: testcase
    title: Check  if the vnc port value is within a valid range - bug 1164966
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17938
  fields:
    type: testcase
    title: '[CPU Management] Check guest CPU requirements are properly updated with
      host CPU features'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17939
  fields:
    type: testcase
    title: '[CPU Management] Guest cpu topology check - bug 880017,965465'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17934
  fields:
    type: testcase
    title: '[CPU Management] When CPUs in host aren''t equal ,libvirt should report
      error-bug873926'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17935
  fields:
    type: testcase
    title: '[CPU Management] Check the  cpu model on host detected as what model on
      guest-bug865580'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17936
  fields:
    type: testcase
    title: '[CPU Management] cpu ''host-model'' should support features in force or
      disable mode - bug 870484, 956468, 1182448'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17937
  fields:
    type: testcase
    title: '[CPU Management] Check the information about host CPU model'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17930
  fields:
    type: testcase
    title: '[CPU Management] kvm state setting'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17931
  fields:
    type: heading
    title: model and topology
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17932
  fields:
    type: testcase
    title: '[CPU Management] Support host-model and host-passthrough modes - bug 700272'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17933
  fields:
    type: testcase
    title: '[CPU Management] configuring the guest CPU model-bug822148'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17516
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18459
  fields:
    type: heading
    title: PCI bridge attached to root controllers (pci-root) directly
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-23599
  fields:
    type: testcase
    title: '[configuration] Start a guest with clear_emulator_capabilities settings'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-23598
  fields:
    type: testcase
    title: '[configuration] Set qemu process name'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Configuration]
- model: caselink.workitem
  pk: RHEL7-23596
  fields:
    type: heading
    title: Libvirt Test Plan - Configuration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Configuration]
- model: caselink.workitem
  pk: RHEL7-21739
  fields:
    type: testcase
    title: '[resume]libvirt can''t resume a suspended vm on rhevm+vdsm env -bug 894723'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21738
  fields:
    type: testcase
    title: '[vol-resize] Resizes a storage volume --BUG 804516 1021802 1220213'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21733
  fields:
    type: testcase
    title: '[setmaxmem] - Change max memory allocation with --config --live --current
      and unit -- bug 790583'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21732
  fields:
    type: testcase
    title: '[pool-create-as] - Create a pool from args bug - 835782,1224088'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21731
  fields:
    type: testcase
    title: '[domcontrol]Returns state of a control interface to the domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21730
  fields:
    type: testcase
    title: '[domblkstat] - Get block status for a running domain- Bug 1142636'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21737
  fields:
    type: testcase
    title: '[vol-create-from] - Create a vol from an existing volume'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21736
  fields:
    type: testcase
    title: '[vol-clone] - Clone a volume'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21735
  fields:
    type: testcase
    title: '[start/destroy] start and shutdown test - memory leak'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21734
  fields:
    type: testcase
    title: '[snapshot-revert] - revert a domain to a snapshot -bug907809'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17598
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Check no deadlock occurs in nwfilter driver
      affecting parallel vm startup - bug1074003'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17599
  fields:
    type: testcase
    title: '[Scalability][One domain]Attach/detach maximum virtio virtual disks to
      one domain via attach-device (hotplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17592
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17593
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17590
  fields:
    type: heading
    title: LXC
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17591
  fields:
    type: heading
    title: Longevity test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17597
  fields:
    type: testcase
    title: '[Scalability][One domain]Check no deadlock occurs in nwfilter under heavy
      load -bug1034807'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17594
  fields:
    type: testcase
    title: '[Scalability]     256 autostarted storage pools reloading'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17595
  fields:
    type: testcase
    title: '[Scalability][Multiple domains]qemu-kvm process status monitoring kill
      -SIGSEGV/19/9 qemu pid'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-19091
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][boot order] Using update-device to change
      the content of an existing FLOPPY device on the fly - bug1007228'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19090
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][pre-operation] Attach/Detach a disk to
      an inactive domain with xml'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19093
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach a local disk with
      readonly mode --bug1003526'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19092
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][gluster] Attach/Detach an gluster volumn
      disk with type=network to/from guest --BZ1045107'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19095
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom] persistent option of virsh update-device
      command never work - bug 598792'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19094
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach a nfs disk with
      readonly mode'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19097
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach a qcow2 format
      disk device to guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19099
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach a raw format
      disk device from XML file to guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19098
  fields:
    type: testcase
    title: '[Migration] Migrate with nbd disk defined in xml --bug 1090713'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18515
  fields:
    type: testcase
    title: '[SR-IOV][VFIO] passthrough the VF with/without VFIO driver -- bug 1035490'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-19706
  fields:
    type: heading
    title: New for 7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-17558
  fields:
    type: testcase
    title: '[console and serial devices][controller] set too large max_sectors for
      controller --Bug 1173420'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18514
  fields:
    type: testcase
    title: '[SR-IOV] Assign VFs to specific vlans --bug 910167'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18478
  fields:
    type: testcase
    title: '[PCI bridge] Migrate a guest from 6.6 to 7.1'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18479
  fields:
    type: testcase
    title: '[PCI bridge] Migration a guest with 200+ devices behind PCI bridge'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18474
  fields:
    type: testcase
    title: '[PCI bridge] Attach devices to pci-bridge which attached to root controller
      directly.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18475
  fields:
    type: testcase
    title: '[PCI bridge] Attach devices to pci-bridge behind pci-bridge'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18476
  fields:
    type: testcase
    title: '[PCI bridge] Hot-plug a disk to guest without PCI bridge'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18477
  fields:
    type: testcase
    title: '[PCI bridge] Hot-plug a disk to guest with PCI bridge index=1'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18470
  fields:
    type: testcase
    title: '[PCI bridge] The max number of pci-bridge controller.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18471
  fields:
    type: testcase
    title: '[PCI bridge] pci-bridge - negative test'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18472
  fields:
    type: testcase
    title: '[PCI bridge] pci-bridge hot-plug support in libvirt. - bug 844000'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18473
  fields:
    type: testcase
    title: '[PCI bridge] auto add pci-bridge - bug 1132900'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-17448
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17440
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through TCP connection
      --p2p'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17441
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through TCP connection
      --tunnelled'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17442
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through TLS connection
      --live'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17443
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through TLS connection
      --p2p'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17444
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through TLS connection
      --tunnelled'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17445
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds with undefinesource
      and persistent option -- bug 757635'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17446
  fields:
    type: heading
    title: migration-precreation - (new for RHEL7.2, RHEV only)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17447
  fields:
    type: testcase
    title: '[migration]Pre-create storage on Live Migration - bug 1219541'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18512
  fields:
    type: testcase
    title: '[SR-IOV] Attach VFs with interface section - bug 889319, bug1040626, bug1046337'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-21992
  fields:
    type: requirement
    title: libvirt part
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-16649
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16648
  fields:
    type: heading
    title: Test Strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18511
  fields:
    type: testcase
    title: '[SR-IOV] Suspend and resume guest with assigned VF'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-16641
  fields:
    type: heading
    title: Know Issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16640
  fields:
    type: requirement
    title: Internal Disk-only Snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16643
  fields:
    type: heading
    title: 'Others bugs:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16644
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16647
  fields:
    type: heading
    title: Libvirt Test Plan - Storage
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18276
  fields:
    type: testcase
    title: '[remote access] [tls] [custom] tls_allowed_dn_list custom'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18277
  fields:
    type: testcase
    title: '[remote access] [tls] [custom] listen_addr custom for tls connection'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18274
  fields:
    type: testcase
    title: '[remote access] [tls] Prepare the tls env'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18275
  fields:
    type: testcase
    title: '[remote access] [tls] [custom] Customizable x509 certificate paths for
      client - tls'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18272
  fields:
    type: testcase
    title: '[remote access] [tls] [sasl] Connect to the hypervisor running on host
      using TLS via ipv6'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18273
  fields:
    type: testcase
    title: '[remote access] [tls] [sasl] Connect to the hypervisor running on host
      using TLS via ipv4 -bug 1039991'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18270
  fields:
    type: testcase
    title: '[remote access] [tls] [custom] Configuration TLS x509  server key file
      path'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18271
  fields:
    type: testcase
    title: Connect to the hypervisor running on host over an TLS connection with sasl
      plain authentication -Bug 1171521
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-31710
  fields:
    type: testcase
    title: '[keepalive] keepalive support for virsh - 1073506 - scenario 3'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17785
  fields:
    type: testcase
    title: '[USB][virtual device] test the virtual keyboard in the guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18278
  fields:
    type: testcase
    title: '[remote access] [tls] libvirtd can succeed to verify chained CA certs
      when the .pem file contains more than two certs  - bug 975201'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18279
  fields:
    type: testcase
    title: '[remote-access] [tls] [custom] tls_no_sanity_certificate custom and disables
      client checks of the server''s certificate'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18070
  fields:
    type: heading
    title: Sanlock locking for readonly devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18071
  fields:
    type: testcase
    title: '[sanlock] Sanlock locks for readonly devices - Bug 837659'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-19079
  fields:
    type: testcase
    title: '[virtual disks][network][nbd] Attach/Detach nbd network disk'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18073
  fields:
    type: testcase
    title: '[sanlock] Check lockfailure action - bug 832156 967494 967493'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18074
  fields:
    type: heading
    title: Check sanlock's configuration file
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18075
  fields:
    type: testcase
    title: '[sanlock] test conf files'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18076
  fields:
    type: heading
    title: Check lockspace directory length
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18077
  fields:
    type: testcase
    title: '[sanlock] Check sanlock lockspace limits directory name length BZ#735443'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18078
  fields:
    type: heading
    title: Check the dependency of libvirt-lock-sanlock package
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18079
  fields:
    type: testcase
    title: '[sanlock] Check the dependency of libvirt-lock-sanlock package BZ#738314'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-19071
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Attach disks with random target order
      in xml - bug 683005'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19070
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Attach virtual disks with multifunction
      = on'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19077
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][block] Attach/Detach a block device to/from
      guest - bug 867726'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19075
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Entry into S4 state after hotplug disks
      - bug 808463'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19074
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][negative] IDE  storage devices unsoupport
      hotplug'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-13219
  fields:
    type: heading
    title: known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13218
  fields:
    type: testcase
    title: 'VNC listen on both IPV6 and IPV4 by default #BZ1038965 - bug assigned,
      no patch'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17781
  fields:
    type: testcase
    title: '[USB][virtual device][usb-hub] Add usb-hub to the guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-13211
  fields:
    type: testcase
    title: '[graphical framebuffers] listen on both IPv6 and IPv4 localhost by default
      for VNC if QEMU supports it -- Bug: 1038965'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13210
  fields:
    type: testcase
    title: '[Graphical framebuffers] set the spice&vnc listening address and connect
      guest with them together -bug 895582'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13213
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13212
  fields:
    type: testcase
    title: 'Domdisplay should show all URI if config both vnc and spice in guest #BZ
      997802'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13215
  fields:
    type: testcase
    title: 'Vnc/spice domdisplay show the right IP address for network type listen
      address #BZ1191016'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13214
  fields:
    type: testcase
    title: 'Support IPV6 in listen type network #BZ1192318'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13217
  fields:
    type: testcase
    title: 'Start multiple guests with VNC monitor listening on same port #BZ1209959
      -bug assigned, no patch'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13216
  fields:
    type: testcase
    title: 'Vnc/spice passwd check after edit xml by save-image-edit #BZ1183890'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-16506
  fields:
    type: heading
    title: Test Strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16507
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16505
  fields:
    type: heading
    title: Libvirt Test Plan - Snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17059
  fields:
    type: testcase
    title: '[pool-dumpxml] - Get pool xml info'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17058
  fields:
    type: testcase
    title: '[pool-destroy] - Destroy an active pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17057
  fields:
    type: testcase
    title: '[pool-delete] - Delete a pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17056
  fields:
    type: testcase
    title: '[pool-define] - Define (but don''t start) a pool from an XML'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17055
  fields:
    type: testcase
    title: '[pool-define-as] - Define a pool from args BUG:1224088'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17054
  fields:
    type: testcase
    title: '[pool-create] - Create a pool from an XML file BZ#924058'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17053
  fields:
    type: testcase
    title: '[pool-build] - Build a pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17052
  fields:
    type: testcase
    title: '[pool-autostart] - Autostart a pool - Bug 1036603'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16508
  fields:
    type: heading
    title: Test Matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17050
  fields:
    type: testcase
    title: '[nwfilter-undefine] - undefine a network filter'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16818
  fields:
    type: testcase
    title: '[CPU Management] enable/disable kvmclock - bug 783921'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18337
  fields:
    type: testcase
    title: '[Network filter] allow ipv4'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18129
  fields:
    type: requirement
    title: Improve libvirt debug capability - BZ\#818467
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-17561
  fields:
    type: testcase
    title: '[console and serial devices][controller] Assign default SCSI controller
      model before checking its attribute validity  --Bug 1168849'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17560
  fields:
    type: testcase
    title: '[Console and serial devices][console]Select a available port automatically
      during hot-plug/unplug char device for live domain --Bug 1076708'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18614
  fields:
    type: testcase
    title: '[NPIV]Seamless VM migration with FC''s NPIV feature --Bug:726797'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18615
  fields:
    type: heading
    title: others
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18616
  fields:
    type: testcase
    title: '[NPIV]Nodedev-destroy commands both doc and error message when destroy
      HBA are not clear  --bug 1033398'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18617
  fields:
    type: testcase
    title: '[NPIV] Memory usage works fine in libvirtd udev backend - bug 595490'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18610
  fields:
    type: testcase
    title: '[NPIV]Automatically generate unique WWN'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18611
  fields:
    type: heading
    title: cross test with snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18612
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk-only snapshot with guest
      image based mpath  pool #BZ 1088901'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18613
  fields:
    type: heading
    title: cross test with migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18618
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18619
  fields:
    type: heading
    title: Libvirt Test Plan - LXC
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18578
  fields:
    type: testcase
    title: '[virtual disks][target bus][SCSI] virtio-scsi multi-queue support --bug
      911390'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16478
  fields:
    type: testcase
    title: '[virtual disks][ceph] Save/restore a guest using rbd based image as disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-23916
  fields:
    type: testcase
    title: '[virtual disks][iothread] take actions with IOThread , check IOThread
      ID in domain xml BZ1253108'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16472
  fields:
    type: testcase
    title: '[blockcommit][ceph] Do blockcommit with a guest using rbd based image
      as disk BZ1200726'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16473
  fields:
    type: heading
    title: Do migration when using rbd image as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16470
  fields:
    type: testcase
    title: '[blockpull][ceph] Do blockpull with a guest using rbd based image as disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16471
  fields:
    type: heading
    title: Do blockcommit when using rbd image as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16476
  fields:
    type: testcase
    title: '[virtual disks][ceph] Do s3/s4 to a guest using rbd based image as disk'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16477
  fields:
    type: heading
    title: Do save/restore when using rbd image as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16474
  fields:
    type: testcase
    title: '[virtual disks][ceph] Migrate guest using rbd based image as disk'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16475
  fields:
    type: heading
    title: Do s3/s4 when using rbd image as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-18108
  fields:
    type: testcase
    title: '[virtlockd] Start 2 guests pointing at  the same lvm in shareable mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18109
  fields:
    type: heading
    title: Check for virtlockd with a shareable disk pointing at scsi device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18100
  fields:
    type: heading
    title: Check lock still works after upgrading libvirt
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18101
  fields:
    type: testcase
    title: '[virtlockd] Check lock still works after upgrading libvirt'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18102
  fields:
    type: heading
    title: negative test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18103
  fields:
    type: heading
    title: Check for sanlock does not work for a shareable disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18104
  fields:
    type: testcase
    title: '[sanlock] Start 2 guests on 1 host pointing at a disk in shareable modeBZ#578121'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18105
  fields:
    type: heading
    title: Check for virtlockd with a shareable disk pointing at a disk resides on
      nfs
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18106
  fields:
    type: testcase
    title: '[virtlockd] Start 2 guests on 1 host pointing at the same disk in shareable
      mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18107
  fields:
    type: heading
    title: Check for virtlockd with a shareable disk pointing at lvm
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-16921
  fields:
    type: testcase
    title: '[blockpull]Populate a disk from its backing image - 727502 927156 927495'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12768
  fields:
    type: testcase
    title: '[Managed save] Domains that take too long to shutdown PARALLELLY via initscript
      are killed when host shuts down'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12769
  fields:
    type: testcase
    title: '[Managed save] Domains that take too long to shutdown SERIALLY via initscript
      are killed when host shuts down'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12766
  fields:
    type: testcase
    title: '[Managed save] Implement START_DELAY in libvirt-guests before starting
      next guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12767
  fields:
    type: testcase
    title: '[Managed save] Domains are automatically shutdown PARALLELLY via initscript
      when host shuts down'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12764
  fields:
    type: heading
    title: Relative with serivce libvirt-guests or autostart managedsave guest
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12765
  fields:
    type: requirement
    title: Start the guest or keep the guest shutoff on host boot up by libvirt-guests
      and...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12762
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12763
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12760
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12761
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-17277
  fields:
    type: heading
    title: For spice migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17276
  fields:
    type: heading
    title: For cross migration - updated in RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17275
  fields:
    type: heading
    title: Un-migratable configuration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17274
  fields:
    type: heading
    title: For live migration with discarded elements
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17273
  fields:
    type: heading
    title: For live/cross migration with all new elements - updated in RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17272
  fields:
    type: heading
    title: Connection protocol
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17271
  fields:
    type: heading
    title: Machine type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17270
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17279
  fields:
    type: heading
    title: For different virtual network migration - updated in RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17278
  fields:
    type: heading
    title: For specific migrateuri
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18310
  fields:
    type: testcase
    title: '[remote access] [other] libvirt connection shouldn''t be broken after
      connect a bad hyperv  BZ#829160'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-31956
  fields:
    type: testcase
    title: '[virtual disks][iothread] forbid iothreadID being zero BZ1251886'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-34459
  fields:
    type: testcase
    title: Save guests on RHEL7.1 host, then upgrade the host to RHEL7.2, restore
      the guest...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-17309
  fields:
    type: testcase
    title: '[Migration] Live migration with ipv6 iSCSI lun'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17308
  fields:
    type: testcase
    title: '[Migration] migration based on TLS connection with ipv6 address - Bug
      624626 846013'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17303
  fields:
    type: testcase
    title: '[Migration] migrate a guest with vcpu pinning on the same CPU model'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17302
  fields:
    type: testcase
    title: '[Migration] Live migration between non-similar processors - different
      vendor'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17301
  fields:
    type: testcase
    title: '[Migration] Live migration based on same cpu vendor - intel'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17300
  fields:
    type: testcase
    title: '[Migration] Live migration based on same cpu vendor - AMD'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17307
  fields:
    type: testcase
    title: '[Migration] migration based on tcp connection with ipv6 address - Bug
      624626 846013'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17306
  fields:
    type: testcase
    title: '[Migration] migration based on ssh connection with ipv6 address - Bug
      624626 846013'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17305
  fields:
    type: heading
    title: migration-IPv6
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17304
  fields:
    type: testcase
    title: '[migration]Migration with guest cpuset'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17901
  fields:
    type: testcase
    title: '[CPU Management] vCPU hotplug without <acpi> feature - bug 1000354'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17900
  fields:
    type: testcase
    title: '[CPU Management] vCPU hotunplug fail should not update count of vcpus
      - bug 895424'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17903
  fields:
    type: testcase
    title: '[CPU Management]Hotplug vcpus when guest do S4 -bug872419'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17902
  fields:
    type: testcase
    title: '[CPU Management]Hotplug vcpus when guest do S3 via qemu guest agent'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17905
  fields:
    type: testcase
    title: '[CPU Management] Hotplug vcpu using Illegal number of vCPUs'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17904
  fields:
    type: testcase
    title: '[CPU Management] libvirt loses track of hotplugged vcpus after daemon
      restart -- bug 1097677'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17907
  fields:
    type: testcase
    title: '[CPU Management] Control multi domain vcpu affinity'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17906
  fields:
    type: heading
    title: cpu tunning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17909
  fields:
    type: testcase
    title: '[CPU Management] support exclusive vcpu<->cpu pinning - bug 996758'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17908
  fields:
    type: testcase
    title: '[CPU Management] vcpu pin testing -- runtime'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17624
  fields:
    type: testcase
    title: '[Scalability][Migration]Migrate 514 guests through TCP connection --tunnelled
      with ipv6 - bug 807907,807910 - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17625
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Reloading 1024 running guests for looping
      100 times libvirtd lifecycle - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17626
  fields:
    type: testcase
    title: '[Scalability][RHEVM] Restart vdsmd service after start 200 guests with
      rhevm-bug723811'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17627
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Running guests with more than 512 disks
      with io=''native'' - Bug 740899'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17620
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Libvirt event handler investigation -
      scenario 1'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17621
  fields:
    type: testcase
    title: '[scalability][Multiple domains] Libvirt event handler investigation -
      scenario 2'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-21728
  fields:
    type: testcase
    title: '[change-media] Change media of CD or floppy drive --bug 923053 892289
      1219719'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21729
  fields:
    type: testcase
    title: '[cpu-baseline] - compute baseline CPU --Bug 997798'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17151
  fields:
    type: testcase
    title: '[vol-download] Download a volume from remote to a local file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21722
  fields:
    type: testcase
    title: '[attach-device] - Attach device from xml file on virtio guest --bug 598792
      963638'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21723
  fields:
    type: testcase
    title: '[attach-disk] - Attach disk from args  --bug 601135, 1049529'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21724
  fields:
    type: testcase
    title: '[schedinfo] Illegal cpu_shares value of schedinfo --Bug 1007698 1023366'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21725
  fields:
    type: testcase
    title: '[blockpull] support domain offline blockpull--Bug 816667'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21726
  fields:
    type: testcase
    title: '[blockresize] support offline blockresize BZ#817232'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19087
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][pre-operation] Attach/Detach a disk to
      an inactive domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19084
  fields:
    type: testcase
    title: '[virtual disks] Error occurs when adding the second virtio disk during
      using network intall guest BZ#968899'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19085
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom] Cannot insert CD (update device) to VM when
      LIVE constant is not used in updateDeviceFlags command - bug 716826'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19082
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][options] Attach/Detach a disk device to
      guest with optional argument'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19083
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom] Write & read floppy'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19080
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][options] Attach/Detach a disk device to
      guest with --config option'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19081
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][shareable] Start two domains with shareable
      floppy'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19088
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][boot order] Using update-device to change
      the content of an existing CDROM device on the fly - bug1007228'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19089
  fields:
    type: testcase
    title: '[Migration] Migration with gluster volume defined in disk xml with type=netowrk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16764
  fields:
    type: testcase
    title: '[memory management] Cgroups memory limit are causing the virt to be terminated
      unexpectedly - bug 891653, 1013758, 1001143'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16765
  fields:
    type: heading
    title: Memory Backing - hugepage
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-12887
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12886
  fields:
    type: testcase
    title: libvirt should use server-side filtering for event registration  -bug 1054437
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12885
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12884
  fields:
    type: testcase
    title: 'Provide example policykit rules for libvirt ACLs - #BZ 1115289'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12883
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12882
  fields:
    type: testcase
    title: '[ACL]user access control for storage-vol API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12881
  fields:
    type: heading
    title: Objects about virStorageVolPtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12880
  fields:
    type: testcase
    title: '[ACL]user access control for storage-pool API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-16768
  fields:
    type: testcase
    title: '[memory management] test ''unit'' of memory - bug 808522, 813972, 893933,
      893936'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-20292
  fields:
    type: heading
    title: virtual networks - vlan tag
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20291
  fields:
    type: heading
    title: virtual networks - virtual port
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20290
  fields:
    type: heading
    title: virtual networks - static routes
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-35126
  fields:
    type: testcase
    title: '[Guest kernel debugging] Libvirt could deliver human monitor commands
      to guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-35125
  fields:
    type: testcase
    title: '[Guest kernel debugging]Check libvirtd with poorly formatted human monitor
      command - 688723'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18441
  fields:
    type: testcase
    title: '[Hooks] daemon start - return zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18440
  fields:
    type: testcase
    title: '[Hooks] daemon start - return non-zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18443
  fields:
    type: testcase
    title: '[Hooks] daemon stop - return zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18442
  fields:
    type: testcase
    title: '[Hooks] daemon stop - return non-zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18445
  fields:
    type: testcase
    title: '[Hooks] kvm-guest failed to start; avoid double-close bug in libvirt -
      bug 827050'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18444
  fields:
    type: testcase
    title: '[Hooks] kill daemon with SIGHUP'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18447
  fields:
    type: testcase
    title: '[Hooks] lxc - return non-zero'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18446
  fields:
    type: testcase
    title: '[Hooks] libvirt qemu hooks - bug 825820'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18449
  fields:
    type: testcase
    title: '[Hooks] qemu - pre-migration hook on desination - bug 795127 822916'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18448
  fields:
    type: testcase
    title: '[Hooks] lxc - return zero'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-17479
  fields:
    type: heading
    title: '3.  Test non-root user permission:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17478
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Check the libvirtd status when qemu process
      are unresponsive-bug692663'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-19173
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach a iscsi network disk
      with chap authentication with secret usage'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17475
  fields:
    type: testcase
    title: '[libvirtd] Check /var/lib/libvirt/qemu belongs to qemu group'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17474
  fields:
    type: heading
    title: '2. Test for qemu related operation:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17477
  fields:
    type: testcase
    title: '[libvirtd]Qemu get hang will not lead libvirtd to hang'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17476
  fields:
    type: testcase
    title: '[libvirtd] QEMU attach a nonexistent PID'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17471
  fields:
    type: testcase
    title: '[libvirtd]  libvirtd does not close all fds opened by virt-install - bug
      766308'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-18072
  fields:
    type: heading
    title: Customizable actions when sanlock leases are lost
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-17473
  fields:
    type: testcase
    title: '[libvirtd] /var/run/libvirtd.pid will be lost after restarting libvirtd
      with vdsm installed - bug 726649'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17472
  fields:
    type: testcase
    title: '[libvirtd] Libvirt should never be double-closing an fd when failing connect
      to a remote hypervisior- bug 845893'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-19078
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][readonly] Start domian with readonly floppy'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18215
  fields:
    type: heading
    title: Test Scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-19175
  fields:
    type: testcase
    title: '[virtual disks] Start guest with copy_on_read disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19073
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][block] attach-disk should detect disk
      source file type when sourcetype is not specified - bug 803577'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16658
  fields:
    type: testcase
    title: '[Storage][netfs pool] netfs based storage pool with source format type=nfs'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16659
  fields:
    type: testcase
    title: '[storage][netfs pool] netfs based storage pool with glusterfs source format
      --BZ1072714'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16656
  fields:
    type: testcase
    title: '[storage] Volume operations in dir/fs/netfs pools  --BZ 1077068'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16657
  fields:
    type: heading
    title: NFS based storage pool/volume
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16654
  fields:
    type: testcase
    title: '[Storage][dir pool]Dir based storage pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16655
  fields:
    type: testcase
    title: '[Storage][dir pool] VMDK disk format in directory pool - Bug 836676, 1030795,
      1060905'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16652
  fields:
    type: heading
    title: Storage pool/volume lifecycle
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16653
  fields:
    type: heading
    title: Directory based storage pool/volume
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16650
  fields:
    type: heading
    title: Test Matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16651
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19179
  fields:
    type: testcase
    title: '[virtual disks][network][iSCSI] Create domain with ipv6 iSCSI passthrough
      lun'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19661
  fields:
    type: heading
    title: others
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19068
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][readonly] Attach iso from readonly nfs
      filesystem to VM - bug 702044'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18044
  fields:
    type: testcase
    title: '[Host network interface management] Get MAC address via interface name'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18047
  fields:
    type: testcase
    title: '[host network interface management] transaction-oriented API for handling
      host interfaces'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18046
  fields:
    type: testcase
    title: '[Host network interface management] Roll back host interfaces to last
      known good configuration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18041
  fields:
    type: testcase
    title: '[Host network interface management] edit interface''s xml'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18040
  fields:
    type: testcase
    title: '[Host network interface management] dump interface''s xml (--inactive)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18043
  fields:
    type: testcase
    title: '[Host network interface management] Get interface name via MAC address'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18042
  fields:
    type: testcase
    title: '[Host network interface management] Error handlING for invalid IP address'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-19060
  fields:
    type: testcase
    title: '[virtual disks] libvirt should places new added IDE disks after virtio/scsi
      disks - Bug 521053'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19062
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Attach disk with allow disk format probing'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19063
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][post-operation] Attach disk with restart
      libvirtd - bug 728428'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18049
  fields:
    type: testcase
    title: '[host network interface management] Bridge creation was failed by virsh
      iface-bridge when no "DEVICE=" line in ifcfg_* -- bug 1100588'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18048
  fields:
    type: testcase
    title: '[Host network interface management]Set "DELAY=0" by virsh iface-bridge
      command - bug 892403'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-17540
  fields:
    type: testcase
    title: '[console and serial devices][controller]virtio-serial controller functionality
      with MSI Enabled/Disabled'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18598
  fields:
    type: testcase
    title: '[NPIV] Discover SAN Storage'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18913
  fields:
    type: testcase
    title: '[RHEVM+NFS]vm should be working well after live storage migration NFS
      BZ#894085'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18298
  fields:
    type: testcase
    title: '[remote access] [unix] [custom] UNIX socket access controls'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18911
  fields:
    type: testcase
    title: '[RHEVM+NFS] suspend-->stop VM to NFS with dynamic_ownership=0 with RHEVM
      - bug 716478'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18910
  fields:
    type: heading
    title: 'RHEVM Part:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18917
  fields:
    type: testcase
    title: '[RHEVM+ISCSI] suspend-->stop VM to ISCSI with RHEVM - bug 716478'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18916
  fields:
    type: testcase
    title: '[RHEVM+NFS] live migrating of a vm with several snapshots BZ#903248'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-13208
  fields:
    type: testcase
    title: '[Graphical framebuffers] vnc/spice German keymap support'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13209
  fields:
    type: testcase
    title: '[Graphical framebuffers] vnc/spice English keymap support'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-38281
  fields:
    type: heading
    title: Create domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38280
  fields:
    type: heading
    title: Domain life cycle
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38283
  fields:
    type: heading
    title: Start domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-13205
  fields:
    type: testcase
    title: '[Graphical framebuffers] Console screenshot for vnc/spice'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13202
  fields:
    type: requirement
    title: Testing about the common check point for VNC and SPICE
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13203
  fields:
    type: testcase
    title: '[Graphical framebuffers] Check password in qemu.conf and guest''s xml
      for vnc/spice'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-38287
  fields:
    type: heading
    title: Suspend domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38286
  fields:
    type: heading
    title: Reboot domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17048
  fields:
    type: testcase
    title: '[nwfilter-edit] - edit XML configuration for a network filter'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17049
  fields:
    type: testcase
    title: '[nwfilter-list] - list network filters'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17044
  fields:
    type: testcase
    title: '[numatune] set domain numa node - bug 771562, 845968, 920406, 966341,
      997906'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17045
  fields:
    type: testcase
    title: '[numatune] set/get domain numa nodeset with flag (--config, --live, --current)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17046
  fields:
    type: testcase
    title: '[nwfilter-define] - Define a new network filter or update an existing
      one - bug 1029266'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17047
  fields:
    type: testcase
    title: '[nwfilter-dumpxml] - network filter information in XML'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17040
  fields:
    type: testcase
    title: '[nodeinfo] - Get node basic information-bug825095 949256'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17041
  fields:
    type: testcase
    title: '[nodememstats] Get cache/buffer memory of the host node'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17042
  fields:
    type: testcase
    title: '[nodesuspend] Suspend the host for a given time'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17043
  fields:
    type: testcase
    title: '[non-root user] Execute virsh commands with non-root user - bug 955470'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18629
  fields:
    type: testcase
    title: '[LXC] Preventative fix for possible future crash in LXC startup  --bug
      1018725'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18628
  fields:
    type: testcase
    title: '[LXC] start the container failed due to the source dir is missing - bug
      927072'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18351
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18623
  fields:
    type: testcase
    title: '[LXC][Host and Hypervisor] capabilities'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18622
  fields:
    type: testcase
    title: '[LXC][Host and Hypervisor] version, uri, sysinfo, hostname'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18625
  fields:
    type: testcase
    title: '[LXC] error message occur in libvirtd.log when destroy the lxc container
      - bug 903092'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18624
  fields:
    type: testcase
    title: '[LXC][LifeCycle] Container life cycle testing (Include list, create, dumpxml,
      edit, suspend, resume, reboot, shutdown, destroy, undefine, autostart)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18627
  fields:
    type: testcase
    title: '[LXC] start OS container with selinux disabled - bug 915485'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18626
  fields:
    type: testcase
    title: '[LXC][Host and Hypervisor] freecell, nodememstats, node-memory-tune, nodecpumap,
      nodecpustats, nodeinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18290
  fields:
    type: testcase
    title: '[remote access] [tcp] [custom] sasl_allowed_username_list custom for tcp
      connection'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18291
  fields:
    type: testcase
    title: '[remote access] [tcp] [custom] listen_addr custom for tcp connection'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18292
  fields:
    type: testcase
    title: '[remote access] [tcp] [custom] TCP ports custom'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18293
  fields:
    type: heading
    title: Connect by unix socket
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18294
  fields:
    type: requirement
    title: Connect by unix socket
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18295
  fields:
    type: testcase
    title: '[remote access] [unix] Check connect with UNIX sockets with polkit and
      acl control'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18296
  fields:
    type: testcase
    title: '[remote access] [unix] [custom] sasl_allowed_username_list custom for
      the unix socket connection'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-16409
  fields:
    type: heading
    title: 2. NUMA Node Tuning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16408
  fields:
    type: testcase
    title: '[NUMA] vcpupin fail with non-specific error msg when numad is running
      - bug 846620'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16407
  fields:
    type: testcase
    title: '[NUMA] guest numa topology - bug 832165'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16406
  fields:
    type: testcase
    title: '[NUMA] guest numa topology with node memory alignment - bug 832165, 974374,
      1076725'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16405
  fields:
    type: testcase
    title: '[NUMA] Check memAccess when parsing cpu -- bug 1146334.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16404
  fields:
    type: heading
    title: 1. Guest NUMA topology
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16403
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16402
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16401
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16400
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-17196
  fields:
    type: heading
    title: selinux testing with different device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17197
  fields:
    type: heading
    title: selinux testing with the dynamic seclabel type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-13190
  fields:
    type: testcase
    title: '[graphical framebuffers] Start guest with spice_tls and autoport settings
      - bug 953126 875729'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-38519
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] [kernel/initrd/dtb] Label "directed kernel
      boot" related files with dynamic seclabel'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-38518
  fields:
    type: testcase
    title: '[sVirt] [selinux] [dynamic] [nvram] Label OVMF_VARS file with dynamic
      seclabel'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17195
  fields:
    type: heading
    title: selinux testing with customs
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-18139
  fields:
    type: testcase
    title: '[log and debugging] libvirt should use QMP ''send-key'' instead of HMP
      ''sendkey'' -bug 949663'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18138
  fields:
    type: requirement
    title: Libvirt should use QMP 'sendkey' instead of HMP 'sendkey' - BZ\#949663
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18321
  fields:
    type: heading
    title: Available Variables
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18135
  fields:
    type: testcase
    title: '[Log and debugging]  Libvirt won''t parse dnsmasq capabilities when debug
      logs are enabled - bug 885727'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18134
  fields:
    type: requirement
    title: Libvirt should parse dnsmasq capabilities correctly whendebug logs are
      enabled -...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18137
  fields:
    type: testcase
    title: '[log and debugging] Ignore libvirt logs when reading QEMU error output
      - bug 954248'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18136
  fields:
    type: requirement
    title: Ignore libvirt logs when reading QEMU error output - BZ\#954248
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18131
  fields:
    type: requirement
    title: Null dereference while preparing libvirt logs - BZ\#728546&711206
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18133
  fields:
    type: testcase
    title: '[Log and debugging] null dereference while preparing libvirt logs - BZ#711206'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-17193
  fields:
    type: heading
    title: Testing while enable selinux in host
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-12793
  fields:
    type: testcase
    title: '[Managed save] Managesdsave and restore a normal guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12792
  fields:
    type: testcase
    title: '[Managed save] Stopped domain fails to be saved via virsh.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12791
  fields:
    type: testcase
    title: '[Managed save] Guest could be started up nornally instead of restored
      without managedsave file'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12790
  fields:
    type: testcase
    title: '[Managed save] A managed save file for a domain can be manually removed'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12797
  fields:
    type: testcase
    title: '[Managed save] Managedsave with security_driver = "none" -bug923946 947387'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12796
  fields:
    type: testcase
    title: '[Managed save] Survive from 20 iterations without failure - bug 727249'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12795
  fields:
    type: testcase
    title: '[Managed save] Invalid save file should not block the domain start - bug
      730750'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12794
  fields:
    type: testcase
    title: '[Managed save] Cann''t managed save a transient domain - bug 729714'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12799
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12798
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-18322
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-13199
  fields:
    type: testcase
    title: '[Graphical framebuffers] spice ssl connection'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17264
  fields:
    type: heading
    title: sandbox
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17265
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17267
  fields:
    type: heading
    title: Libvirt Test Plan - Migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17260
  fields:
    type: testcase
    title: '[virtio-rng] do hot plug/unplug for virtio-rng device-Bug 1121540 1012918'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17051
  fields:
    type: testcase
    title: '[nwfiter-edit] - edit XML configuration for a network filter'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17262
  fields:
    type: testcase
    title: '[virtiio-rng]Basice test on real rng device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17263
  fields:
    type: testcase
    title: '[virtio-rng] Don''t specify the backend or give invalid value for virtio-rng  -
      bug 919004'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-16509
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17268
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17269
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18324
  fields:
    type: requirement
    title: nwfilter test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-17754
  fields:
    type: testcase
    title: '[USB][redirdev] [redirfilter] Filter out certain devices from redirecion
      -bug 1177237, bug 1210650'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17755
  fields:
    type: testcase
    title: '[USB][redirdev] Test the usb device redirection with spice -bug 1035190
      819498'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16920
  fields:
    type: testcase
    title: '[blockpull]Improve virsh blockpull error message for a offline domain
      --Bug : 816662 816674'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17756
  fields:
    type: testcase
    title: '[USB][redirdev][tcp] usb device redirection with tcp. - bug 1177237 bug
      1210650'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18527
  fields:
    type: testcase
    title: '[SR-IOV]  Cold-plug VFs from sriov vfs pool to guest --bug 1002669'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17757
  fields:
    type: testcase
    title: '[USB][redirdev][spicevmc] usb device redirection with spcievmc'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-20842
  fields:
    type: testcase
    title: '[migration]Cross migration with hugepage setting'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18325
  fields:
    type: testcase
    title: '[Network filter] define or update a network filter from an XML file'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-17318
  fields:
    type: testcase
    title: '[Migration] migration with 1-16 VCPUs'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17319
  fields:
    type: testcase
    title: '[Migration] migration with SMP enabled'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17310
  fields:
    type: heading
    title: migration-intermediate-operation
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17311
  fields:
    type: testcase
    title: '[Migration] Block the storage domain connectivity on destination during
      migration - bug 705405'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17312
  fields:
    type: testcase
    title: '[Migration] Break migration with gdb help - bug 795305, 806206'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17313
  fields:
    type: testcase
    title: '[Migration] Do libvirt statistics command loop during migration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17314
  fields:
    type: testcase
    title: '[Migration] Do readonly command during qemu migration - bug 704124'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17315
  fields:
    type: testcase
    title: '[Migration] During migration reboot guest with virsh command - Bug 744967'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17316
  fields:
    type: testcase
    title: '[Migration]Abort migration job on destination during live migration --bug:580876
      760149'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17317
  fields:
    type: testcase
    title: '[Migration] Migrating the same guest again after terminating last migration
      with ctrl-c - bug 682953'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17916
  fields:
    type: testcase
    title: '[CPU Management]  Check CPU affinity setting on big machine using virDomainGetVcpuPinInfo-bug876415'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17917
  fields:
    type: testcase
    title: '[CPU Management] get right cpu share value via editing guest dumpxml and
      schedinfo -- 998431 1040784'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-17914
  fields:
    type: testcase
    title: '[CPU Management] start guest with vcpu number is different between <vcpu>
      and <cputune> BZ#853930'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17915
  fields:
    type: testcase
    title: '[CPU Management] Check KVM host/guest cpu pinning isolation-bug822064.bug871312,bug870099'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17912
  fields:
    type: testcase
    title: '[CPU Management] vcpupin after the status of physical cpu change from
      offline to online - bug 838070,947004'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17913
  fields:
    type: testcase
    title: '[CPU Management] Check KVM host/guest cpu capping isolation-bug822090'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17910
  fields:
    type: testcase
    title: '[CPU Management] vcpu pin testing -- offline'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17911
  fields:
    type: testcase
    title: '[CPU Management] Pin domain to non-exist cpu'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18521
  fields:
    type: testcase
    title: '[SR-IOV][VFIO]passthrough the PCIs of one iommu group to one guest without
      "managed=yes" --bug 979988'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17918
  fields:
    type: testcase
    title: '[CPU Management] Illegal cpu_shares value of schedinfo --Bug 1007698 1023366'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-17919
  fields:
    type: testcase
    title: '[CPU Management] Check iothread allocation and iothread pin'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-16928
  fields:
    type: testcase
    title: '[console] valgrind defects some use-after-free errors - virsh console
      - bug 828640'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-32101
  fields:
    type: testcase
    title: '[virtual disks][NPIV] hot/cold plug FC disk to vm via volume/lun virtual
      disk'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18207
  fields:
    type: testcase
    title: '[libvirt-snmp] Snmptrap of domain lifecycle event'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18206
  fields:
    type: testcase
    title: '[libvirt-snmp] Request information about domain status'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18205
  fields:
    type: testcase
    title: '[libvirt-snmp] Control domain lifecycle'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18204
  fields:
    type: heading
    title: Installation and configuration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18209
  fields:
    type: testcase
    title: '[libvirt-snmp]Use "ctrl+c" to close libvirtMib_subagent will not lead
      to memory leak - Bug 736258'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-12894
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12895
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12896
  fields:
    type: testcase
    title: '[bios]Boot a domain using UEFI firmware --bug 1026772 1112257'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12897
  fields:
    type: testcase
    title: '[bios] Enable a priority list of boot devices'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12891
  fields:
    type: heading
    title: Libvirt Test Plan - BIOS
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12892
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12893
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12898
  fields:
    type: testcase
    title: '[bios] Boot order elements in <devices> cannot be used together with os/boot
      elements - bug 751287'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12899
  fields:
    type: testcase
    title: '[bios][OVMF] Enable an interactive boot menu prompt on guest startup'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-20280
  fields:
    type: heading
    title: virtual interface - hotplug
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20281
  fields:
    type: heading
    title: virtual interface - driver
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20282
  fields:
    type: heading
    title: virtual interface - backend
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20283
  fields:
    type: heading
    title: virtual networks - QoS
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20284
  fields:
    type: heading
    title: virtual networks - address
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20285
  fields:
    type: heading
    title: virtual networks - forward mode
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20286
  fields:
    type: heading
    title: virtual networks - hostdev
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20287
  fields:
    type: heading
    title: virtual networks - lifecycle
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20288
  fields:
    type: heading
    title: virtual networks - macvtap
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-20289
  fields:
    type: heading
    title: virtual networks - portgroup
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16794
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16793
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16792
  fields:
    type: testcase
    title: '[Memory management] test memory deivce binding to host node and hugepages'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16791
  fields:
    type: testcase
    title: '[Memory management]  Negative test for memory device and memory hot-plug'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16790
  fields:
    type: testcase
    title: '[Memory management] relevance test for Max memory, initial memory, current
      memory - bug 1216046 1220702'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-18456
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18457
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-31734
  fields:
    type: testcase
    title: '[Migration] Migration with insufficient disk space for storage migration.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18455
  fields:
    type: heading
    title: Libvirt Test Plan - PCI bridge
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18452
  fields:
    type: testcase
    title: '[Hooks] qemu hook - restore - bug1142693'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18453
  fields:
    type: testcase
    title: '[Hooks] network hooks network start/destroy and plug/unplug interface
      -bug1064831'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-19189
  fields:
    type: testcase
    title: '[virtual disks][volume][iSCSI] Define/start/destroy/save/restore/snapshot
      a domain with iSCSI volume disk in iscsi source pool - bug1200206,1032363, 1032358,
      996520'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18451
  fields:
    type: testcase
    title: '[Hooks] qemu - return zero'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-19187
  fields:
    type: testcase
    title: '[virtual disks][network][iSCSI] Create a domain with iscsi network disk/lun
      with chap authentication with secret usage - bug1032358'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19186
  fields:
    type: testcase
    title: '[virtual disks][target bus] start guest with virtio disk after adding
      IDE disk newly in KVM -715401,704144'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19185
  fields:
    type: testcase
    title: '[Snapshot] External snapshot with gluster volume with disk type=network
      - bug 1032370'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-19184
  fields:
    type: testcase
    title: '[virtual disks][network][gluster] Start domain with glusterfs volume with
      disk type=network with transport=rdma -BZ 841218'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19183
  fields:
    type: testcase
    title: '[virtual disks][network][gluster] Start domain with glusterfs volume with
      disk type=network with transport=tcp -BZ841218'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19182
  fields:
    type: testcase
    title: '[virtual disks][network][gluster] Install domain with gluster volume'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19181
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach an ipv6 iscsi lun
      to/from guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19180
  fields:
    type: testcase
    title: '[virtual disks][volume][iSCSI] Create domain with an ipv6 iSCSI volume
      disk in iscsi source pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17462
  fields:
    type: testcase
    title: '[libvirtd] send signal "SIGTERM", "SIGQUIT", "SIGINT" to libvirtd'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17463
  fields:
    type: testcase
    title: '[libvirtd] Delete UNIX sockets upon libvirtd shutdown'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17460
  fields:
    type: testcase
    title: '[libvirtd] send "SIGABRT" and "SIGKILL" to libvirtd'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17461
  fields:
    type: testcase
    title: '[libvirtd] libvirt lost SIGHUP reloading behavior - bug 730428'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17466
  fields:
    type: testcase
    title: '[libvirtd] daemon convention testing to check the ppid, pgid, pid, sid,
      tpgid, and tty value'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17467
  fields:
    type: testcase
    title: '[libvirtd] Libvirtd daemon core dump'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17464
  fields:
    type: testcase
    title: '[libvirtd] overriding the default configuration file'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17465
  fields:
    type: testcase
    title: '[libvirtd] overriding the default pid file'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17468
  fields:
    type: testcase
    title: '[libvirtd] Restart libvirtd without killing guest - bug 816465'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17469
  fields:
    type: testcase
    title: '[libvirtd] check systemD unit file'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-12661
  fields:
    type: testcase
    title: '[guest agent] Domain time sync correctly after do some operation with
      guest -bug 1049038'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-16479
  fields:
    type: heading
    title: Authentication Credentials for virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-25344
  fields:
    type: heading
    title: Known issue
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18058
  fields:
    type: heading
    title: Test Strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18059
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-18052
  fields:
    type: testcase
    title: '[Host network interface management]iface-begin/iface-rollback/iface-commit
      actions'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18050
  fields:
    type: testcase
    title: Bridge starting by virsh iface-start fails when turning stp on -- bug1105012
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18051
  fields:
    type: testcase
    title: '[Host network interface management]Define/Undefine a bridge via iface-bridge/iface-unbridge'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18057
  fields:
    type: heading
    title: Libvirt Test Plan - Lock Manager
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-23918
  fields:
    type: testcase
    title: define and start with setting all *tune
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18584
  fields:
    type: heading
    title: Libvirt Test Plan - NPIV
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18585
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18586
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18587
  fields:
    type: heading
    title: TCMS Test cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-19059
  fields:
    type: testcase
    title: '[virtual disks] Install domain with virtio block device driver (only for
      Windows)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19058
  fields:
    type: heading
    title: case
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18582
  fields:
    type: heading
    title: What's new in RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18583
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-19054
  fields:
    type: heading
    title: Test scope from rhel7.1
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19057
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19056
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19051
  fields:
    type: requirement
    title: negative testing - 8
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19050
  fields:
    type: heading
    title: negative testing
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19053
  fields:
    type: heading
    title: data plane - rhev only
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19052
  fields:
    type: heading
    title: new for rhel7.3
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18901
  fields:
    type: heading
    title: PREPARATION
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-18902
  fields:
    type: heading
    title: SCENARIOS
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-18903
  fields:
    type: heading
    title: FYI
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-18904
  fields:
    type: heading
    title: Libvirt Test Plan - Compatibility
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-38298
  fields:
    type: heading
    title: Pool build
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38299
  fields:
    type: heading
    title: Pool start
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38296
  fields:
    type: heading
    title: Domain core dump
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38297
  fields:
    type: heading
    title: Pool define
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38294
  fields:
    type: heading
    title: life-cycle change
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38295
  fields:
    type: heading
    title: Domain autostart
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38292
  fields:
    type: heading
    title: Reset domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38293
  fields:
    type: heading
    title: Domain pm suspend/wakeup
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38290
  fields:
    type: heading
    title: Domain save
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38291
  fields:
    type: heading
    title: Domain restore
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17071
  fields:
    type: testcase
    title: '[qemu-attach]Attach an externally launched QEMU process to the libvirt
      QEMU driver - Bug 1010617 1063837 1141621'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17070
  fields:
    type: testcase
    title: '[qemu-agent-command] Run an arbitrary qemu guest agent command (use at
      your own risk) -  bug 1050843'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17073
  fields:
    type: testcase
    title: '[quiet] - Check quiet mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17072
  fields:
    type: testcase
    title: '[qemu-monitor-command] Deliver human monitor commands to guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17075
  fields:
    type: testcase
    title: '[readonly] - Check readonly mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17074
  fields:
    type: testcase
    title: '[quit] - Quit interactive terminal - bug 837466'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17077
  fields:
    type: testcase
    title: '[reset] Reset the target domain as if by power button - bug 953706'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17076
  fields:
    type: testcase
    title: '[reboot] - Reboot a domain - Bug 533338'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17079
  fields:
    type: testcase
    title: '[restore] restore domain from the non-exist file-bug 955500'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17078
  fields:
    type: testcase
    title: '[restore] - Restore a domain from a saved state in a file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18638
  fields:
    type: testcase
    title: '[LXC] shutdown/destroy container'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18639
  fields:
    type: testcase
    title: '[LXC] set memory --bug 1070695'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18636
  fields:
    type: testcase
    title: '[LXC]libvirt: vulnerability in virInitctlSetRunLevel --bug 1045643'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18637
  fields:
    type: testcase
    title: '[LXC] memtune - bug 1052062 1049137'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18634
  fields:
    type: testcase
    title: '[LXC] Get error when destroy suspended application container --bug 1046852'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18635
  fields:
    type: testcase
    title: '[LXC] Add flag to enable CAP_MKNOD  --bug 1057200'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18632
  fields:
    type: testcase
    title: '[LXC] libvirt does not mount multiple bind mounts if one target begins
      with the other target  --bug 1035403'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18633
  fields:
    type: testcase
    title: '[LXC]  libvirt_lxc consumes 100% cpu when console client is disconnected
      and guest writes data --bug 1032705'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18630
  fields:
    type: testcase
    title: '[lxc]Race condition allocating veth devices with parallel LXC container
      creation --bug 1014604'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-18631
  fields:
    type: testcase
    title: '[LXC]Guest failed to start when starting many containers  --bug 1043776'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-20247
  fields:
    type: testcase
    title: '[Migration] Tunnelled migration with listen-address&migrateuri'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-13169
  fields:
    type: heading
    title: VNC
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13168
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13167
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13166
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13165
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13164
  fields:
    type: heading
    title: Libvirt Test Plan - Graphical framebuffers
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-16418
  fields:
    type: testcase
    title: '[NUMA]virsh numatune doesn''t migrate memory in a running VM  - 1198497'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16419
  fields:
    type: testcase
    title: '[NUMA] report invalid Host nodeset for memnode - bug 1186175'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16414
  fields:
    type: testcase
    title: '[NUMA]memory tuning interleave mode'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16415
  fields:
    type: testcase
    title: '[NUMA]memory tuning preferred mode'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16416
  fields:
    type: testcase
    title: '[NUMA] memory tuning preferred mode with auto placement -- bug 1006722'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16417
  fields:
    type: testcase
    title: '[NUMA]numad testing - bug 769930, 810157, 820461, 949408'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16410
  fields:
    type: testcase
    title: '[NUMA]memory tuning strict mode -- bug 1010885'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16411
  fields:
    type: testcase
    title: '[NUMA] memory tuning for node out of range'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16412
  fields:
    type: testcase
    title: '[NUMA] VM CPU Runtime pinning'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16413
  fields:
    type: testcase
    title: '[NUMA] tune autonuma - bug 919431'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-18122
  fields:
    type: testcase
    title: '[Log and debugging] log testing - 1'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18123
  fields:
    type: testcase
    title: '[Log and debugging] log testing - 2'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18120
  fields:
    type: testcase
    title: '[Log and debugging] per log for per-hypervisor'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18121
  fields:
    type: requirement
    title: Log testing for different level
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18126
  fields:
    type: testcase
    title: '[log and debugging] Redirect the libvirtd''s log to the /var/log/libvirt/libvirtd.log'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18127
  fields:
    type: requirement
    title: Check the stack trace can be logged correctly
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18124
  fields:
    type: testcase
    title: '[Log and debugging] log testing - 3'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18125
  fields:
    type: requirement
    title: Redirected the Daemon to /var/log/libvirt/libvirtd.log
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18128
  fields:
    type: testcase
    title: '[Log and debugging] Enable stack traces in log messages'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-38505
  fields:
    type: heading
    title: 'info :'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17789
  fields:
    type: testcase
    title: '[USB] Dump/save/snapshot/migration with assigned devices. - bug 816519,
      bug 832458'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17788
  fields:
    type: testcase
    title: '[USB][Node devices] Dump usb device xml info'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-12780
  fields:
    type: testcase
    title: '[managed save] libvirt-client update should not causes suspend on all
      guests -- Bug:1033626'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12781
  fields:
    type: testcase
    title: '[Managed save] Checking the status of libvirt-guests service'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12782
  fields:
    type: heading
    title: Managedsave by manual (virsh command)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12783
  fields:
    type: requirement
    title: The guest could be managedsave and restored by virsh command correctly
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12784
  fields:
    type: testcase
    title: '[Managed save] bypass the file system cache when saving and restoring
      guests'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12785
  fields:
    type: testcase
    title: '[libvirtd] libvirtd should keep in running status when destroyed the linux
      guest which excuted a series of operations about S3 save and restore - bug 928672'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12786
  fields:
    type: testcase
    title: '[Managed save] Managed save should not crash libvirtd for <cpu mode=''host-model''>
      guest - bug 801160'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12787
  fields:
    type: testcase
    title: '[Managed save] Managedsave and resume the guest which was in pmsuspended
      status'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12788
  fields:
    type: testcase
    title: '[Managed save] The managed save image is removed when undefining the domain
      with "--manage-save"  flag'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-12789
  fields:
    type: testcase
    title: '[Managed save] List the domains with managed save state-bug810799'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-16463
  fields:
    type: heading
    title: Create snapshot for domain having rbd image
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-17619
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Kill SIGKILL/SIGSEGV qemu processes'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17509
  fields:
    type: testcase
    title: '[migration]  Libvirt shouldn''t crashes during migration - bug 1018267'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17508
  fields:
    type: testcase
    title: '[libvirtd]Restart libvirtd.service results in ''libvirtd was killed by
      signal 6 (SIGABRT) --bug 1028691'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17259
  fields:
    type: testcase
    title: '[virtio-rng]do S3/S4 for guest when configure different virtio rng devices-Bug
      917960'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17258
  fields:
    type: testcase
    title: '[virtio-rng]Snapshot of domain with UDP backend RNG device'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17251
  fields:
    type: testcase
    title: '[virtio-rng]Basic test for virtio-rng device - bug 852187'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17250
  fields:
    type: testcase
    title: '[virtiio-rng] virtio-rng entropy distribution and sharing among guests
      - bug 916194'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17253
  fields:
    type: testcase
    title: '[virtio-rng]Virtio-rng device limit rate consuming.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17252
  fields:
    type: testcase
    title: '[virtio-rng]More than one virtio-rng device are supported -Bug 915335
      1119206 1008860'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17255
  fields:
    type: testcase
    title: '[virtio-rng]Snapshot of domain with the random backend RNG device'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17254
  fields:
    type: testcase
    title: '[virtio-rng] Unsupported combination for backend type "unix"/"invalid"
      and source info for virtio-rng BG1012196'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17257
  fields:
    type: testcase
    title: '[virtio-rng]Snapshot of domain with TCP backend Bind mode RNG device'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17256
  fields:
    type: testcase
    title: '[virtio-rng]Snapshot of domain with TCP backend Connect mode RNG device'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17099
  fields:
    type: testcase
    title: '[secret-undefine] - undefine a secret'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17098
  fields:
    type: testcase
    title: '[secret-set-value] - Set a secret value'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17504
  fields:
    type: testcase
    title: '[libvirtd] race condition when destroying guests - bug 892901'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17093
  fields:
    type: testcase
    title: '[screenshot]screenshot of a current domain console - bug 770919  950416
      1018668'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17092
  fields:
    type: testcase
    title: '[screenshot]Check if screenshot leaks pipe fd - 746075'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17091
  fields:
    type: testcase
    title: '[schedinfo] - Show/set scheduler parameters - BUG 919375, 963592'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17090
  fields:
    type: testcase
    title: '[schedinfo] - Set guest with the boundary cap value - Bug 504914 810078'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17097
  fields:
    type: testcase
    title: '[secret-list] - list secrets -1000155'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17096
  fields:
    type: testcase
    title: '[secret-get-value] - Output a secret value --bug 855783'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17095
  fields:
    type: testcase
    title: '[secret-dumpxml] - secret attributes in XML'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17094
  fields:
    type: testcase
    title: '[secret-define] - Define or modify a secret --bug 929045'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17506
  fields:
    type: testcase
    title: '[libvirtd] qemu: job usage issue in several APIs leading to libvirtd crash
      - bug 1048643'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-20091
  fields:
    type: testcase
    title: '[Storage][negative] mpath pool should use /dev/mpath or /dev/mapper to
      decide if pool should be active bz 1230664'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17329
  fields:
    type: testcase
    title: '[migration]libvirt should  track statistics of Completed Live Migration
      -- bug:1063724'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17328
  fields:
    type: testcase
    title: '[Migration]Stop migration on the third machine while migration --bug 983350'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17325
  fields:
    type: testcase
    title: '[Migration]During live migration, fail gracefully on network error BZ
      822839 1073506 1256213'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17324
  fields:
    type: testcase
    title: '[Migration]DNS resolving fails during migration - bug 729567, 738915'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17327
  fields:
    type: testcase
    title: '[Migration] Reduced Live Migration Downtime - Post-Copy in libvirt BZ
      830971(not support now)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17326
  fields:
    type: testcase
    title: '[Migration]During live migration, restart source libvirtd - bug 690175,634065,728603'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17321
  fields:
    type: testcase
    title: '[Migration] Set max downtime during migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17320
  fields:
    type: testcase
    title: '[Migration] Reboot the host durning live migration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17323
  fields:
    type: testcase
    title: '[Migration]Break migration during migrating with using ''Ctrl+c'' - bug635353'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17322
  fields:
    type: testcase
    title: '[Migration] Stopping src libvirtd during migration - bug 728341'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-21760
  fields:
    type: testcase
    title: '[domfsinfo]run virsh domfsinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18336
  fields:
    type: testcase
    title: '[Network filter] no-arp-spoofing'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-22765
  fields:
    type: testcase
    title: '[seabios] Support for qemu-kvm''s "-boot splash_time" parameter --bug
      1021703'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-22767
  fields:
    type: testcase
    title: '[seabios]Set the delay time before rebooting via boot parameter-bug855237'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-22766
  fields:
    type: testcase
    title: '[seabios] Support rebootTimeout in domiam XML'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-22763
  fields:
    type: testcase
    title: '[seabios] don''t boot from un-selected devices - bug 1037593'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-34982
  fields:
    type: testcase
    title: Check QMP event for blockcopy/blockcommit
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-34980
  fields:
    type: testcase
    title: Check QMP event for QMP S3 and pm-wakeup
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-34981
  fields:
    type: testcase
    title: '[migration] Libvirt free priv->origname when migration failed. bug - 1181182'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-21761
  fields:
    type: testcase
    title: '[iothreadpin] Control domain IOThread pinning to host physical CPUs with
      --live --config --current Bug 1135491'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-26475
  fields:
    type: testcase
    title: Verify Haswell-noTSX/Broadwell-noTSX cpu model can be detected in a right
      way - bug 1199446
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17893
  fields:
    type: heading
    title: cpu hotplug
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17892
  fields:
    type: testcase
    title: '[CPU Management] Start guest after offline host''s cpu - bug 622515'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17891
  fields:
    type: testcase
    title: '[CPU Management] Check the range of setting maxvcpus in xml when start
      guest - bug 855296'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17890
  fields:
    type: testcase
    title: '[CPU Management] Check the range of cpuset - bug852688'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17897
  fields:
    type: testcase
    title: '[CPU Management] guest-agent based vCPU hot-unplug without guest agent
      configuration - bug 984821'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17896
  fields:
    type: testcase
    title: '[CPU Management] guest-agent based vCPU hot-unplug - bug 924400 1035108'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17895
  fields:
    type: testcase
    title: '[CPU Management] vCPU hotplug via hypervisor- bug562886,533138,857013,950268,726328'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17894
  fields:
    type: testcase
    title: '[CPU Management] vCPU hotunplug -bug816475 918283 562886'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17899
  fields:
    type: testcase
    title: '[CPU Management] Check vcpuinfo could show correct info after hotplug
      cpu - bug 855218'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17898
  fields:
    type: testcase
    title: '[CPU Management] Check error message when change VM''s processor count
      to 0-bug834365'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18430
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18339
  fields:
    type: testcase
    title: '[Network filter] allow-dhcp'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-17374
  fields:
    type: heading
    title: cross-migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18431
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-16788
  fields:
    type: testcase
    title: '[Memory management] Support for memory hot-plug BZ 790583'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16789
  fields:
    type: testcase
    title: '[Memory management] memory device hot-unplug and cold-unplug'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16784
  fields:
    type: testcase
    title: '[memory management] ivshmem configuration without ivshmem-server'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16785
  fields:
    type: heading
    title: Memory devices - memory hot-plug (new for RHEL7.2)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16786
  fields:
    type: testcase
    title: '[Memory management] basic check for maxmemory'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16787
  fields:
    type: testcase
    title: '[Memory management] basic check for pc-dimm memory device'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16780
  fields:
    type: testcase
    title: '[Memory management]setmem when guest do S4 operations - BZ 872419 975376'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16781
  fields:
    type: testcase
    title: '[Memory management]setmem when guest do S3 operations'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16782
  fields:
    type: testcase
    title: '[memory management] setmem without virtio balloon driver'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16783
  fields:
    type: heading
    title: Shared memory device - ivshmem - rhev only (new for rhel7.2)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-18338
  fields:
    type: testcase
    title: '[Network filter] allow incoming ipv4'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18026
  fields:
    type: testcase
    title: '[Host network interface management] define & undefine interface - bug
      956112'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-19198
  fields:
    type: testcase
    title: '[virtual disks] make sure the option error_policy is working as expected'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19199
  fields:
    type: testcase
    title: '[virtual disk]start a guest with a volume disk then restart libvirtd -
      bug 1177733'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19197
  fields:
    type: testcase
    title: '[Virtual disks][boot order] Check the boot order while starting domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19190
  fields:
    type: testcase
    title: '[virtual disks][network][iSCSI] Create domain with iSCSI network disk
      - bug 957295'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19191
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][target bus] q35: attach multiple sata
      devices  BG 1008903'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19192
  fields:
    type: testcase
    title: '[virtual disks][network][iSCSI] Create a domain with iscsi network disk
      with chap authentication with correct/wrong secret uuid - 1019023'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19193
  fields:
    type: testcase
    title: '[virtual disks][startupPolicy] Create an guest with startupPolicy options
      - Bug 910171, Bug1086121'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17417
  fields:
    type: testcase
    title: '[migration]migration will cause guest IO failure when DST sebool is virt_use_nfs=off
      BZ 822052, 895826'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17416
  fields:
    type: testcase
    title: '[Migration]Migration name collision check'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17415
  fields:
    type: testcase
    title: '[Migration]migrating domain to unreachable destination - bug 723912, 723881'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17414
  fields:
    type: testcase
    title: '[Migration]migrated VM not visible to non-root user on the target host
      BZ 847822'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17413
  fields:
    type: testcase
    title: '[migration]error messages may not be propagated properly during failed
      migration 844378'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17412
  fields:
    type: testcase
    title: '[Migration] Migration with not start libvirtd on target host - bug 736590'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17411
  fields:
    type: testcase
    title: '[Migration] Migration with non-existent xml - bug 773208'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17410
  fields:
    type: testcase
    title: '[migration] general error return on migrate after calling abortjob() -
      bug 760149'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17419
  fields:
    type: heading
    title: migration-devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17418
  fields:
    type: testcase
    title: '[Migration] Migration fails in migrating guests repetitively. BZ 869947'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16484
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16749
  fields:
    type: testcase
    title: '[storage][logical pool] use vol-create-as --backing-vol to take snapshot
      of an existing volume --Bug: 896398'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-13196
  fields:
    type: testcase
    title: '[Graphical framebuffers] Host firewall port listening for different Spice
      ports'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-18258
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18259
  fields:
    type: heading
    title: Transportations for remote-access
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-17529
  fields:
    type: testcase
    title: '[Console and serial devices][serial]file type serial port in domain'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17528
  fields:
    type: testcase
    title: '[console and serial devices][console]garbled console in interactive virsh
      session -- bug 731583'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18708
  fields:
    type: testcase
    title: '[virtual networks] openvswitch support - rhev only'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18029
  fields:
    type: testcase
    title: '[Host network interface management] define a bridge that uses an ethernet
      interface'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18028
  fields:
    type: testcase
    title: '[Host network interface management] Define a bridge interface contains
      a vlan which is using an Ethernet'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-17523
  fields:
    type: heading
    title: New cases/scenarios for rhel7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17522
  fields:
    type: heading
    title: Plug and Unplug for char devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17521
  fields:
    type: heading
    title: Controller
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17520
  fields:
    type: heading
    title: channel
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17527
  fields:
    type: testcase
    title: '[Console and serial devices][console]Connect to a guest console'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17526
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17525
  fields:
    type: heading
    title: 'Related new cases:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17524
  fields:
    type: heading
    title: 'Scenarios:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-19042
  fields:
    type: heading
    title: optional elements test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18706
  fields:
    type: testcase
    title: '[Virtual Networks] NAT virtual network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-19040
  fields:
    type: heading
    title: Boot up guest with different disk types (file, block, network, volume)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19041
  fields:
    type: requirement
    title: Boot up guest with different disk types - 27
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19046
  fields:
    type: heading
    title: Hot-plug/unplug/update disks
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19047
  fields:
    type: requirement
    title: Hot-plug/unplug/update disks - 51
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19044
  fields:
    type: heading
    title: Integration test with migration, snapshot
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18707
  fields:
    type: testcase
    title: '[Virtual Networks] network autostart set'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-19048
  fields:
    type: heading
    title: 'cdrom/floppy device:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19049
  fields:
    type: requirement
    title: cdrom/floppy device - 17
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18704
  fields:
    type: testcase
    title: '[virtual networks] Migrate with Bridged network, eth + macvtap + bridge'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18935
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18934
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18937
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18705
  fields:
    type: testcase
    title: '[virtual networks] Migrate with macvtap network (vepa mode) --bug 967389,
      bug1177194'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-38267
  fields:
    type: heading
    title: Domain virtual interface setting
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38266
  fields:
    type: heading
    title: Domain XML
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18933
  fields:
    type: heading
    title: Libvirt Test Plan - CPU Management(PPC64LE)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18939
  fields:
    type: heading
    title: cpu hotplug
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18938
  fields:
    type: heading
    title: cpu allocation
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17066
  fields:
    type: testcase
    title: '[pool-undefine] - Undefine an inactive pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17067
  fields:
    type: testcase
    title: '[pool-uuid] - Convert a pool name to pool UUID'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17064
  fields:
    type: testcase
    title: '[pool-refresh] - Refresh a pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17065
  fields:
    type: testcase
    title: '[pool-start] - Start a (previously defined) inactive pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17062
  fields:
    type: testcase
    title: '[pool-list] - List pools'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16669
  fields:
    type: testcase
    title: '[storage][logical pool] Check volume status after destroying logical pool
      on one of clustered hosts BZ#748248'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17060
  fields:
    type: testcase
    title: '[pool-edit] - Edit an inactive pool xml info'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17061
  fields:
    type: testcase
    title: '[pool-info] - Get pool basic information'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16668
  fields:
    type: testcase
    title: '[Storage][logical pool] Logical based storage pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17068
  fields:
    type: testcase
    title: '[pwd] - Print the current directory'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17069
  fields:
    type: testcase
    title: '[python binding] memory leaks on libvirt_virDomainBlockStatsFlags #BZ
      770942'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18315
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-35698
  fields:
    type: testcase
    title: Check the tunable events while set vcpupin,emulatorpin,blkdeviotune for
      guest
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-18333
  fields:
    type: testcase
    title: '[Network filter] no-ip-spoofing'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18332
  fields:
    type: testcase
    title: '[Network filter] disallow arp'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18331
  fields:
    type: testcase
    title: '[Network filter] allow arp'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18330
  fields:
    type: testcase
    title: '[Network filter] undefine a network filter'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18489
  fields:
    type: heading
    title: SR-IOV - <interface>
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18488
  fields:
    type: heading
    title: SR-IOV - VFIO
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18335
  fields:
    type: testcase
    title: '[Network filter] no-mac-broadcast'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18334
  fields:
    type: testcase
    title: '[Network filter] no-mac-spoofing'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-13174
  fields:
    type: testcase
    title: '[Graphical framebuffers] vnc tls connection'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13175
  fields:
    type: testcase
    title: '[Graphical framebuffers] vnc password ticketing and reset'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-18487
  fields:
    type: heading
    title: SR-IOV - Prepare
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18486
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-13170
  fields:
    type: requirement
    title: Testing about VNC type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13171
  fields:
    type: testcase
    title: '[graphical framebuffers] vnc autoport settings'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-18483
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-13173
  fields:
    type: testcase
    title: '[Update device flags] Update vnc password for live domain - Bug 524623,
      596100'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-19651
  fields:
    type: heading
    title: Domain memory
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-34246
  fields:
    type: testcase
    title: '[Managed save] Check libvirtd.service & libvirt-guests.service unit files
      start after ''systemd.mount'' unit - bug 1255228'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-18064
  fields:
    type: heading
    title: Dual host testing Provision two virtual machines on two hosts with sanlock
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Lock Manager]
- model: caselink.workitem
  pk: RHEL7-16421
  fields:
    type: testcase
    title: '[NUMA][NFV] Host to Guest NUMA memory binding - bug 997627'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-34249
  fields:
    type: testcase
    title: '[sVIrt] sVirt testing for the guest in session mode - bug 1124841'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-16423
  fields:
    type: testcase
    title: '[NUMA] creating vm to place the vcpu in certain cell'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16422
  fields:
    type: testcase
    title: '[NUMA] Per-node memory binding is not compatible with automatic NUMA placement
      - bug 1186199'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16425
  fields:
    type: testcase
    title: '[NUMA][NFV] strict NUMA policy on hugetlbfs backed guests with enough
      hugepages -- bug 1061470, 1076730, 1076989'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16424
  fields:
    type: testcase
    title: '[NUMA][NFV] guest numa topology with 2M-hugepages - bug 1076725'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16427
  fields:
    type: testcase
    title: '[NUMA][NFV] guest numa topology with 1G-hugepages - bug 1076725'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16426
  fields:
    type: testcase
    title: '[NUMA][NFV] strict NUMA policy on hugetlbfs backed guests without enough
      hugepages -- bug 1061470, 1076730, 1076989'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16429
  fields:
    type: testcase
    title: '[NUMA] show numa topology'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16428
  fields:
    type: heading
    title: 3. Host NUMA info
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-17794
  fields:
    type: testcase
    title: '[USB][migration]migration from RHEL7.X to RHEL7.Y which X > Y'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18156
  fields:
    type: requirement
    title: Logging of errors in the daemon should start early
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-17796
  fields:
    type: testcase
    title: '[USB][migration][spice] migrate with established spice session (spice
      client connected) --bug 1010861'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17119
  fields:
    type: testcase
    title: '[start] Start a guest when it can''t allocate memory - bug 765733'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18153
  fields:
    type: testcase
    title: '[log   and debugging] The  serial, parallel, channel, console and smartcard   devices
      in guest should be audited in audit.log while they are changed    -bug 921094'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-17792
  fields:
    type: testcase
    title: '[USB][snapshot]cannot restore VM with disabled usb support to snapshot
      with RAM BG 1008340'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17793
  fields:
    type: testcase
    title: '[USB][migration] Live migration between RHEL 6.y and RHEL7'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17798
  fields:
    type: testcase
    title: '[USB][virtual disks] dump/save/snapshot/migration with assigned virtual
      usb device - bug 1176772, bug 1176771'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17799
  fields:
    type: testcase
    title: '[USB][Hostdev] dump/save/snapshot/migration with assigned usb disk.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18159
  fields:
    type: testcase
    title: '[Log and debugging]Check the avc info in the audit.log  -bug 982154'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18158
  fields:
    type: requirement
    title: Check the avc info in the audit.log
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-38319
  fields:
    type: heading
    title: Volume Resize
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38318
  fields:
    type: heading
    title: Volume download
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38313
  fields:
    type: heading
    title: Volume list
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38312
  fields:
    type: heading
    title: Volume create
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38310
  fields:
    type: heading
    title: Find storage pool resource
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38317
  fields:
    type: heading
    title: Volume info
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38316
  fields:
    type: heading
    title: Volume dumpxml
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38315
  fields:
    type: heading
    title: Volume info
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38314
  fields:
    type: heading
    title: Volume delete
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17248
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17249
  fields:
    type: heading
    title: virtio-rng
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17246
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17247
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17244
  fields:
    type: heading
    title: Libvirt Test Plan - Security
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17245
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-17242
  fields:
    type: testcase
    title: '[sVirt] Dac testing while configure dac with security_driver, vm, per-disk
      -bug 1146886'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17243
  fields:
    type: testcase
    title: '[sVirt]per-image dac check while hotplug/hotunplug disks'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17240
  fields:
    type: testcase
    title: '[sVirt]Per-image dac negative testing -bug 1165485'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17241
  fields:
    type: testcase
    title: '[sVirt] per-img dac testing'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17088
  fields:
    type: testcase
    title: '[schedinfo] - live set scheduler parameters for running guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17089
  fields:
    type: testcase
    title: '[schedinfo] - persistently set scheduler parameters for guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17081
  fields:
    type: testcase
    title: '[save-image-define]Replace the domain XML associated with a saved state
      file - 740508'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17082
  fields:
    type: testcase
    title: '[save-image-dumpxml]Replace the domain XML associated with a saved state
      file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17083
  fields:
    type: testcase
    title: '[save-image-edit] Edit the domain XML associated with a saved state file
      - bug 844266'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17084
  fields:
    type: testcase
    title: '[save] - Save a domain state to a file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17085
  fields:
    type: testcase
    title: '[save] - Save a paused guest on kvm - 504910'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17086
  fields:
    type: testcase
    title: '[save] Run virsh save with option --xml to containing updated XML for
      the target - bug 955484'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17087
  fields:
    type: testcase
    title: '[save]Run virsh save with option --bypass-cache to avoid file system cache
      when saving'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-31907
  fields:
    type: testcase
    title: '[nwfilter-list][user mode]- list network filters in user mode - 1211436'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-31906
  fields:
    type: testcase
    title: '[domifaddr] Get network interfaces'' addresses for a running domain in
      quiet mode - 1209312'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-31908
  fields:
    type: testcase
    title: '[nwfilter-define][user mode] - define a network filter in user mode -
      1211436'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18542
  fields:
    type: heading
    title: SCSI device assignment matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-38508
  fields:
    type: heading
    title: New for RHEL7.3
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17332
  fields:
    type: heading
    title: migration-pre-operation
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17333
  fields:
    type: testcase
    title: '[Migration] Migrate a paused KVM guest - Bug 519204 981139'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17330
  fields:
    type: testcase
    title: '[Migration]Stop migration on the third machine while migration --bug 983348'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17331
  fields:
    type: testcase
    title: '[migration]Stopping DST libvirtd during migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17336
  fields:
    type: testcase
    title: '[Migration] Set bandwidth of migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17337
  fields:
    type: testcase
    title: '[migration]Migration without setting selinux'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17334
  fields:
    type: testcase
    title: '[Migration] migration during vm installation'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17335
  fields:
    type: testcase
    title: '[Migration] migration during vm reboot'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17338
  fields:
    type: testcase
    title: '[migration]Create migration test environment.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17339
  fields:
    type: testcase
    title: '[migration]Transient&Persistent domain migration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-38509
  fields:
    type: testcase
    title: '[storage][zfs pool] - zfs based storage pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18299
  fields:
    type: testcase
    title: '[remote access] [unix] [custom] UNIX socket dir custom'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-26283
  fields:
    type: testcase
    title: '[CPU Management] The count of vcpu with config flag should be compared
      with the maximum vcpus with config flag - bug 847198'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17808
  fields:
    type: testcase
    title: '[USB][Hostdev] usb pass-through can boot guest VM for a SECOND time -
      bug 808459'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-38504
  fields:
    type: heading
    title: 'bug :'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17809
  fields:
    type: testcase
    title: '[USB][Stable Guest ABI]Check domain hub ABI Stability'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-12698
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-18547
  fields:
    type: heading
    title: Hot-plug/unplug the SCSI disk to guest as hostdev
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-34887
  fields:
    type: testcase
    title: '[Migration] Migration with --dname and --persistent - bug 1076354'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-34886
  fields:
    type: testcase
    title: '[Migration] Tunnelled migration with migrateuri using migrateToURI2 api'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18508
  fields:
    type: testcase
    title: '[SR-IOV] Reboot guest with assigned VF'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18509
  fields:
    type: testcase
    title: '[SR-IOV] Released VF from guest can be used in host or the other guests'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-19128
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom] Using attach-disk/device to inject/eject
      a cdrom to/from guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17884
  fields:
    type: heading
    title: Libvirt Test Plan - CPU Management
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17885
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17886
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17887
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17888
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17889
  fields:
    type: heading
    title: cpu allocation
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-17559
  fields:
    type: testcase
    title: '[Console and serial devices][console] libvirt select a available port
      for the new char device wisely --Bug 1076708'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18504
  fields:
    type: testcase
    title: '[SR-IOV] Hotplug/Hotunplug VF for 500 times --bug 971313'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18505
  fields:
    type: testcase
    title: '[SR-IOV] Hotplug/unplug network device with managed=''yes'' - bug 844287,
      843016'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18506
  fields:
    type: testcase
    title: '[SR-IOV] Install guest through a attached VF - bug 781562 - only on 82576'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18507
  fields:
    type: testcase
    title: '[SR-IOV] Prepare: Intel 82599 network adapter'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17563
  fields:
    type: testcase
    title: '[console and serial devices][serial] Allows a pci-serial serial device
      to be attached to PCI bus --Bug 998813'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18500
  fields:
    type: testcase
    title: '[SR-IOV] Hot unplug VF'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17553
  fields:
    type: testcase
    title: '[console and serial devices][controller]Provide option to enable/disable
      64-bit PCI hole on pci-root -- bug990418'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17806
  fields:
    type: testcase
    title: '[USB][Hostdev]Dynamically switch a PCI/USB devices between different guests
      without shutdown'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18503
  fields:
    type: testcase
    title: '[SR-IOV] Hotplug/hotunplug MAX VFs to guest - bug 616415, 678368'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17562
  fields:
    type: testcase
    title: '[console and serial devices][controller] Set queues , cmd_per_lun and
      max_sectors options for scsi controller simultaneously  --Bug 1179684'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-16933
  fields:
    type: testcase
    title: '[create] - Create a guest with e1000 nic driver in physical shared mode
      on kvm'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16932
  fields:
    type: testcase
    title: '[create] - Create a guest with dir storage'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16931
  fields:
    type: testcase
    title: '[create] - Create a domain from xml'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16930
  fields:
    type: testcase
    title: '[cpu-stats] get physical cpu utilization per cpu - bug 737726,882831,
      902655, 907732,1043388'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16937
  fields:
    type: testcase
    title: '[debug] - Debug virsh command'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16936
  fields:
    type: testcase
    title: '[create] - Create a guest with virtio nicdriver on kvm'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16935
  fields:
    type: testcase
    title: '[create] - Create a guest with nfs storage'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16934
  fields:
    type: testcase
    title: '[create] - Create a guest with iscsi storage'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16939
  fields:
    type: testcase
    title: '[desc] show or set domain''s description or title'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16938
  fields:
    type: testcase
    title: '[define] - Define (but not start) a domain from xml'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17404
  fields:
    type: heading
    title: migration-rhevm
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17405
  fields:
    type: testcase
    title: '[Migration] Live migration with iscsi by rhevm - bug 910741'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17406
  fields:
    type: testcase
    title: '[Migration] Migration between three host with rhevm'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17400
  fields:
    type: testcase
    title: '[Migration] migration with multi guests'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17401
  fields:
    type: testcase
    title: '[Migration] migration with network load on both source and target host
      in high speed(1000Mb/s) network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17402
  fields:
    type: testcase
    title: '[Migration] migration with network load on both source and target host
      in slow(128Kb/s) network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17403
  fields:
    type: testcase
    title: '[Migration] Transfer big data from network during migration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17408
  fields:
    type: heading
    title: migration-negative
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17409
  fields:
    type: testcase
    title: '[migration] check the  host''s uuid before migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18422
  fields:
    type: testcase
    title: '[Guest kernel debugging] virsh dump: Support compression when --memory-only
      option is specified -bug 1035158'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-16677
  fields:
    type: testcase
    title: '[storage] create logical pool with wrong --target device --bug952973'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18421
  fields:
    type: testcase
    title: '[Guest kernel debugging] Compress guest core dump to xz'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-16685
  fields:
    type: heading
    title: Filesystem based storage pool/volume
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16684
  fields:
    type: testcase
    title: '[storage] Incorrect hardcoded sector size in disk storage pool --bug 735441'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16687
  fields:
    type: heading
    title: SCSI based storage pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16686
  fields:
    type: testcase
    title: '[Storage][fs pool] FileSystem based storage pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16681
  fields:
    type: testcase
    title: '[Storage][disk pool]Create 128 partition volume on disk pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16670
  fields:
    type: testcase
    title: '[Storage][logical pool]lvm volume groups that contains snapshot lvm'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16683
  fields:
    type: testcase
    title: '[storage][disk pool]volume operations in disk pool -bug 1138523'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16682
  fields:
    type: testcase
    title: '[Storage][disk pool]define and build the disk type of pool with all the
      supported format types   bg#1172468.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16689
  fields:
    type: testcase
    title: '[storage][scsi pool][SCSI] Stable SCSI based pool BZ#963817'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16688
  fields:
    type: testcase
    title: '[Storage][scsi pool] SCSI based storage pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17538
  fields:
    type: testcase
    title: '[console and serial devices][channel]Open multiple virtio pty channels
      at same time'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17539
  fields:
    type: testcase
    title: '[console and serial devices][channel]Migrate a guest with a virtio pty
      type channel'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-32791
  fields:
    type: testcase
    title: '[attach-device][negative] - libvirtd doesn''t crash when attaching an
      RNG device failed - 1220809'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-32790
  fields:
    type: testcase
    title: '[edit] - Edit guest XML with smbios /sysinfo /idmap /metadata and memory
      device - 1223631'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-32792
  fields:
    type: testcase
    title: '[negative] Reject negative values in some virsh commands. - 1159171'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18034
  fields:
    type: testcase
    title: '[Host network interface management] Define an ethernet with static IPv4
      address'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18035
  fields:
    type: testcase
    title: '[Host network interface management] Define an ethernet with static IPv6
      address'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18036
  fields:
    type: testcase
    title: '[Host network interface management] Define an ethernet wtih multi static
      ipv6 address'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18037
  fields:
    type: testcase
    title: '[Host network interface management] Define an interface with netmask >
      24 -- bug 848722'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18030
  fields:
    type: testcase
    title: '[Host network interface management] Define a bridge using a not existing
      Ethernet interface'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18031
  fields:
    type: testcase
    title: '[Host network interface management] Define a vlan'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18032
  fields:
    type: testcase
    title: '[Host network interface management] Define an ethernet with both static
      IPv4 and IPv6 address'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18033
  fields:
    type: testcase
    title: '[Host network interface management] Define an ethernet with dhcp ipv4'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-19037
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19524
  fields:
    type: testcase
    title: '[Storage][negative] when vol-create-as failed due to lack of disk space,
      volume file should not be created -bug 1241454'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19035
  fields:
    type: heading
    title: Libvirt Test Plan - Virtual disks
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16671
  fields:
    type: testcase
    title: '[Storage][logical pool] LVM volume created with allocation=0 -- Bug: 888118,912179,1166592'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19523
  fields:
    type: testcase
    title: '[configuration] Set seccomp sandbox when start a guest. Bug 807778'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-12909
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-35116
  fields:
    type: testcase
    title: '[libvirtd]libvirtd crashes if client quits unexpectedly - bug 727071'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-35114
  fields:
    type: testcase
    title: '[libvirtd] Stop/Kill qemu process'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-19038
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-38272
  fields:
    type: heading
    title: generic virtual device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38273
  fields:
    type: heading
    title: virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38274
  fields:
    type: heading
    title: virtual interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38275
  fields:
    type: heading
    title: virtual media
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38276
  fields:
    type: heading
    title: Domain save/restore
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38277
  fields:
    type: heading
    title: domain managedsave
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18427
  fields:
    type: heading
    title: Libvirt Test Plan - hooks
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-17655
  fields:
    type: testcase
    title: '[Longevity] Running Domains- bug 707155'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17654
  fields:
    type: testcase
    title: '[Longevity] libvirt python event handler catch domain events intermittently'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-16759
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16758
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-17651
  fields:
    type: testcase
    title: '[Longevity] Attach/detach disks on running domains intermittently(hotplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17650
  fields:
    type: testcase
    title: '[Longevity] Define-start/destroy-undefine 256 pools intermittently'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17653
  fields:
    type: testcase
    title: '[Longevity] Continuous migration on running domains'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17652
  fields:
    type: testcase
    title: '[Longevity] Attach/detach interfaces on running domains intermittently(hotplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18426
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-16751
  fields:
    type: heading
    title: New for RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16750
  fields:
    type: testcase
    title: '[Storage][backingStore] create volume specifying backingStore in xml'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16757
  fields:
    type: heading
    title: Libvirt Test Plan - Memory management
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16755
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16754
  fields:
    type: heading
    title: Known issue
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18320
  fields:
    type: heading
    title: Common configuration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18493
  fields:
    type: testcase
    title: '[SR-IOV] Assign seven VFs to the same guest.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-19149
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Attach/Detach virtio disk to guest for
      256 times via attach-device (hotplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18491
  fields:
    type: heading
    title: SR-IOV - VFs pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18496
  fields:
    type: testcase
    title: '[SR-IOV] Check nodedev-dumpxml show SR-IOV detail info correctly - bug665446'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18497
  fields:
    type: testcase
    title: '[SR-IOV] Confirm a VF that is assigned to guest cannot be used by the
      host or other guests - bug 559122'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18494
  fields:
    type: testcase
    title: '[SR-IOV] Assign VF to guest with non-ACS capability SR-IOV devices and
      enable relaxed_acs_check in qemu.conf'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18495
  fields:
    type: testcase
    title: '[SR-IOV] Assign VF to guest with non-ACS capability SR-IOV devices and
      use  qemu.conf default configuration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-19143
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][readonly] Attach/detach a virtual disk
      to/from guest on readonly nfs filesystem'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19142
  fields:
    type: testcase
    title: '[virtual disks][readonly] Start/create a domain with a virtual disk on
      readonly nfs filesystem'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19141
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][startupPolicy] Start domain with floppy
      disk with startupPolicy=''optional'''
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18499
  fields:
    type: testcase
    title: '[SR-IOV] Hot unplug PF'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-19147
  fields:
    type: testcase
    title: '[virtual disks][snapshot][readonly] Create snapshot for a domain with
      readonly disk with snapshot=''external'' in disk xml'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19146
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom] Using change-media to insert/eject media
      - bug 713932, 892289, 952499,1229592, 886456, 1271069'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19144
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][startupPolicy] Start domain with floppy
      disk with startupPolicy=''requisite'''
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18425
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-16436
  fields:
    type: testcase
    title: '[NUMA][NFV] configure guest NUMA node locality for guest PCI devices --
      bug 1103314'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16437
  fields:
    type: heading
    title: 4. KSM
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16434
  fields:
    type: testcase
    title: '[NUMA] Report the accurate CPU topology for the host which have multiple
      NUMA nodes per physical socket (AMD Bulldozer 62XX familly)  - bug 888503 -
      bug 888503'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16435
  fields:
    type: testcase
    title: '[Node Devices][NFV] nodedev-dumpxml reports NUMA node locality for PCI
      devices on NUMA machine--bug 1093127'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16432
  fields:
    type: testcase
    title: '[NUMA] CPU topology parsing bug on special NUMA platform - bug 828729,bug874050'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16433
  fields:
    type: testcase
    title: '[NUMA] libvirtd drops client connection when querying capabilities on
      NUMA machines with sparse topology'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16430
  fields:
    type: testcase
    title: '[NUMA] inspect host NUMA node distances -- bug 1086331'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-16431
  fields:
    type: testcase
    title: '[NUMA]Run virsh cpu-stats command on NUMA machine - bug 846629'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-34151
  fields:
    type: testcase
    title: Assign a PCI device to a PCIe bus - BZ1238338
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-16438
  fields:
    type: testcase
    title: '[NUMA] NUMA aware KSM support in libvirt - bug 840113'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-34152
  fields:
    type: testcase
    title: Assign a device into a bus that doesn't support hotplug - BZ1238338
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCIe]
- model: caselink.workitem
  pk: RHEL7-18424
  fields:
    type: testcase
    title: '[Guest kernel debugging] support save/dump/create-snapshot-as with pass-through
      device or clear the error message --bug 1023852 953062 1170122'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest kernel debugging]
- model: caselink.workitem
  pk: RHEL7-18144
  fields:
    type: testcase
    title: '[log and debugging] Check the audit log while the guest start -bug 922203
      922153 1227558'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18145
  fields:
    type: testcase
    title: '[log and debugging] libvirt Sanitized Host Logs for Guests - bug 822592'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18297
  fields:
    type: testcase
    title: '[remote access] [unix] Check connect with UNIX sockets without auth check'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18147
  fields:
    type: testcase
    title: '[log and debugging] Check cgroup audit events with valid path - bug 922203'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18140
  fields:
    type: heading
    title: audit.log
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18141
  fields:
    type: requirement
    title: 'Audit level testing: 0,1,2'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18142
  fields:
    type: testcase
    title: '[Log and debugging] Audit level testing'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18922
  fields:
    type: testcase
    title: '[RHEVM+ISCSI] live migrating of a vm with several snapshots BZ#903248'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18923
  fields:
    type: testcase
    title: '[Migration][RHEV] Seamless spice migration, Should no loss of data --
      Bug:920205 bug 920441 1035184'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18920
  fields:
    type: testcase
    title: '[RHEVM+ISCSI] Live snapshot create/merge with vm storage based on ISCSI
      #bug1206365'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18921
  fields:
    type: testcase
    title: '[RHEVM+ISCSI]vm should be working well after live storage migration ISCSI
      BZ#894085'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18148
  fields:
    type: requirement
    title: Libvirt spams audit log should have no unneeded failures - BZ\#922153
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18149
  fields:
    type: testcase
    title: '[log and debugging] libvirt spams audit log should have no unneeded failures
      - bug 922153'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-38308
  fields:
    type: heading
    title: Pool refresh
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38309
  fields:
    type: heading
    title: Pool autostart
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17108
  fields:
    type: testcase
    title: '[shutdown] - Gracefully shutdown a domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38300
  fields:
    type: heading
    title: Pool create
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38301
  fields:
    type: heading
    title: Pool delete
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38302
  fields:
    type: heading
    title: Pool destroy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38303
  fields:
    type: heading
    title: Pool edit
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38304
  fields:
    type: heading
    title: Pool dumpxml
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38305
  fields:
    type: heading
    title: Pool info
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38306
  fields:
    type: heading
    title: Pool list
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38307
  fields:
    type: heading
    title: Pool undefine
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-25070
  fields:
    type: testcase
    title: check iothread/vcpu/emulator bind information after set vcpu placement='static'
      and memory placement='auto' - bug 1162947
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-17101
  fields:
    type: testcase
    title: '[Send-key]Send magic SysRq keys to guest - bug 632499'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17100
  fields:
    type: testcase
    title: '[send-key]Send keycodes to the guest - bug 632499, 952938, 1044806'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-37948
  fields:
    type: testcase
    title: '[libvirtd] Rlibvirt monitor socket didn''t show up sometimes - bug 892273'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-18502
  fields:
    type: testcase
    title: '[SR-IOV] Hotplug VF to guest should fail when the same PF is assigned'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17347
  fields:
    type: testcase
    title: '[Migration] suspend migration with option --undefinesource'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17346
  fields:
    type: testcase
    title: '[Migration] Migration with xml and persistent - bug 835300'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17345
  fields:
    type: testcase
    title: '[Migration] Migration with different cache mode - bug 751631'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17344
  fields:
    type: testcase
    title: '[Migration] Migration with --persistent with changing the original xml
      of guest - bug 738148'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17343
  fields:
    type: testcase
    title: '[Migration] direct migration  - bug 832373'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17342
  fields:
    type: testcase
    title: '[Migration] Change domain xml and name together during migration - Bug
      744237, 741251'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17341
  fields:
    type: heading
    title: migration-options - updated in RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17340
  fields:
    type: testcase
    title: '[migration]Specifying migrateuri parameter by a configuration file of
      libvirt host'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17349
  fields:
    type: testcase
    title: '[Migration]Offline migration - bug 1265902'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17348
  fields:
    type: testcase
    title: '[Migration]Change domain name during migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-19129
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][startupPolicy] Start domain with cdrom disk
      with startupPolicy=''mandatory'''
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18764
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-37932
  fields:
    type: testcase
    title: libvirtd crashes on startup with udev_log="debug" - bug 971904
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18432
  fields:
    type: heading
    title: qemu
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18433
  fields:
    type: heading
    title: daemon
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18434
  fields:
    type: heading
    title: lxc
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18435
  fields:
    type: heading
    title: network
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18436
  fields:
    type: heading
    title: Negative test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - hooks]
- model: caselink.workitem
  pk: RHEL7-18437
  fields:
    type: testcase
    title: '[Log and debugging] Check audit log records kvm related operation'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-23603
  fields:
    type: testcase
    title: '[configuration] domain resume when nfs with hard option is not available
      permanently/temporarily - bug 707202'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Configuration]
- model: caselink.workitem
  pk: RHEL7-19121
  fields:
    type: testcase
    title: '[virtual disks][readonly] Start a domain with iso images on readonly nfs
      filesystem -bug996543'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19120
  fields:
    type: testcase
    title: '[virtual disks][volume]startupPolicy is working well with the volume type
      virtual disk'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18025
  fields:
    type: testcase
    title: '[host network interface management] correct work flow for undefine interface
      BZ 721232'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18024
  fields:
    type: testcase
    title: '[Host network interface management] ''XML error: bond interface misses
      the bond element'' when try to stop a bond through command - bug 786696'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18023
  fields:
    type: testcase
    title: '[Host network interface management]  Define a bond interface that contains
      two ethernets  --bug 878394'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18022
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-12872
  fields:
    type: testcase
    title: '[ACL]user access control for network API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-23548
  fields:
    type: testcase
    title: '[Guest resource control] get / set cputune '
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-19127
  fields:
    type: testcase
    title: '[PCI bridge][PCI bridges] pci-bridge hot-plug support in libvirt. - bug
      844000'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-12873
  fields:
    type: heading
    title: Objects about virNodeDevicePtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-23540
  fields:
    type: testcase
    title: '[blkdeviotune] - Get or set block device io parameters - bug 770683, 819014
      ,846265 , 828559 974010 , 1187012'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-19126
  fields:
    type: testcase
    title: '[virtual disks][network][gluster] dompmsuspend --target disk/mem with
      glusterfs volume with disk type=network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-12870
  fields:
    type: testcase
    title: '[ACL] user access control for interface API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12871
  fields:
    type: heading
    title: Objects about virNetworkPtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-19043
  fields:
    type: requirement
    title: optional elements test scenarios - 21
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-12876
  fields:
    type: testcase
    title: '[ACL]user access control for nwfilter API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12877
  fields:
    type: heading
    title: Objects about virSecretPtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-21764
  fields:
    type: testcase
    title: '[virsh command] Get/set numatune/memtune/domiftune in session mode. --
      bug 1126762'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21765
  fields:
    type: testcase
    title: '[iothreaddel]Delete an IOThread to the guest domain with --config --live
      --current'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21766
  fields:
    type: testcase
    title: '[iothreadadd]Add an IOThread to the guest domain with --config --live
      --current'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-34890
  fields:
    type: testcase
    title: '[migratoin] Check the memory balloon size after migration. bug - 1242940'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-34891
  fields:
    type: testcase
    title: '[Managed save] Check the memory balloon size after restoring a managed
      save guest. bug - 1242940'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-21762
  fields:
    type: testcase
    title: '[domifaddr] Get network interfaces'' addresses for a running domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21763
  fields:
    type: testcase
    title: '[allocpages] manipulate pages of NUMA CELL'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12875
  fields:
    type: heading
    title: Objects about virNWFilterPtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-19516
  fields:
    type: testcase
    title: '[Storage][fs pool][negative] FileSystem should forbid multiple sources   ---
      bg 1181087'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19045
  fields:
    type: requirement
    title: Integration test with migration, snapshot - 18
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17510
  fields:
    type: testcase
    title: '[libvirtd] Only open netcf once in libvirtd - bug 983026'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-19200
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Watch for an event to indicate guest stopped
      using a hotunplugged device - bug 813752'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18709
  fields:
    type: testcase
    title: '[virtual networks] Restart libvirtd after create networks - bug 819416'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-19202
  fields:
    type: testcase
    title: '[virtual disks][iothread] create or define guests with iothread optional
      setting'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-38157
  fields:
    type: heading
    title: Domain IOThread
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-34461
  fields:
    type: testcase
    title: Suspend the guests on RHEL7.1 host, then upgrade the host to RHEL7.2, resume
      the...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-34460
  fields:
    type: testcase
    title: Start guests on RHEL7.1 host, enable libvirt-guests service, then upgrade
      the ho...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-20410
  fields:
    type: requirement
    title: 'VIRT_RESCOURCE: Reports the usage of a host resource by a guest.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-34463
  fields:
    type: testcase
    title: Hotplug/hot-unplug some devices on the guests on RHEL7.1 host, the upgrade
      the h...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-17439
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through TCP connection
      --live'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17438
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through SSH connection
      --tunnelled'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16922
  fields:
    type: testcase
    title: '[blockresize] Resize block device of domain -- bug 769251'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16923
  fields:
    type: testcase
    title: '[capabilities] - Get hypervisor/driver capabilities'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16924
  fields:
    type: testcase
    title: '[cd] - Change the current directory'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16925
  fields:
    type: testcase
    title: '[change-media] valgrind defects some use-after-free errors - virsh change-media
      - bug 829107'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16926
  fields:
    type: testcase
    title: '[connect] - (Re)connect to hypervisor --bug 956956'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16927
  fields:
    type: testcase
    title: '[console] - connect to the guest console'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17431
  fields:
    type: heading
    title: migration-Scalability
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16929
  fields:
    type: testcase
    title: '[cpu-compare] - compare host CPU with a CPU described by an XML file'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17433
  fields:
    type: testcase
    title: '[Scalability][RHEVM] Do bidirection migration with rhevm - bug 722282,
      638285'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17432
  fields:
    type: testcase
    title: '[Scalability][Migration]Concurrent migrate 3 guests for 512 rounds through
      TLS connection --p2p'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17434
  fields:
    type: testcase
    title: '[Scalability][RHEVM] Do concurrent migration with rhevm - bug 722282,
      638285'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17437
  fields:
    type: testcase
    title: '[Scalability][Migration] migrate a guest for 1024 rounds through SSH connection
      --live'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-19333
  fields:
    type: testcase
    title: '[CPU Management] Support host-model and host-passthrough modes - bug 700272'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-38265
  fields:
    type: heading
    title: Virsh options
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19188
  fields:
    type: testcase
    title: '[virtual disks][network][iSCSI] Define/start/destroy/save/restore/snapshot
      a domain with iscsi network disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18559
  fields:
    type: testcase
    title: '[virtual disks][target-bus][SCSI] Support scsi-cd disk - bug 782034, 801772,
      721250'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16698
  fields:
    type: heading
    title: Negative test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16699
  fields:
    type: testcase
    title: '[Storage][negative] correct work flow for pool management'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16692
  fields:
    type: testcase
    title: '[Storage][mpath pool] mpath based storage pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16693
  fields:
    type: testcase
    title: '[storage][mpath pool]-volume operations in mpath pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16690
  fields:
    type: testcase
    title: '[storage][scsi pool]-volume operations in scsi pool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16691
  fields:
    type: heading
    title: Mpath based storage pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16696
  fields:
    type: testcase
    title: '[storage][gluster pool] - volume operations in gluster pool --bug1075299'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16697
  fields:
    type: testcase
    title: '[Storage][gluster pool] gluster pool with symlink volume point to a raw/qcow2
      image'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16694
  fields:
    type: heading
    title: Glusterfs based storage pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16695
  fields:
    type: testcase
    title: '[storage][gluster pool] - gluster based storage pool -bug1072141'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18553
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Support for FC tape passthrough - bug 1103739,
      bug 1072736'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18552
  fields:
    type: testcase
    title: '[Host device assignment] [SCSI] Support the readonly attribute for SCSI
      passthrough devices -- bug 1051350, 995415'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18551
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Support scsi-generic device [no NPIV] -
      bug 721250'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18550
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] hot-plug multiple SCSI devices to the guest
      - bug 1031062'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18557
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][driver type][SCSI] Hotplug/unplug virtio-scsi
      VHDX disk -BZ 1006662, 961854'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18556
  fields:
    type: testcase
    title: '[Virtual disks][SCSI] Hotplug/unplug Hotplug/unplug disk with scsi bus
      type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18555
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][target bus][SCSI] hot-plug/unplug a virtual
      CD through the virtio-scsi controller'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18554
  fields:
    type: heading
    title: Hot-plug/unplug disk to guest as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-17505
  fields:
    type: testcase
    title: '[libvirtd] Libvirtd crashes if firewalld is restarted while libvirtd is
      starting up -bug 1015108'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-19533
  fields:
    type: testcase
    title: '[configuration] save/restore the guest to pre-created file on root_squashing
      export nfs with dynamic_ownership=0'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Managed save]
- model: caselink.workitem
  pk: RHEL7-19530
  fields:
    type: testcase
    title: '[configuration]unix socket modification'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18558
  fields:
    type: testcase
    title: '[virtual disks][target bus][SCSI] Support scsi-hd disk - bug 782034, 801772,
      721250'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19536
  fields:
    type: testcase
    title: '[configuration] customize the libvirtd.conf'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17500
  fields:
    type: testcase
    title: '[libvirtd] virsh crashes at remoteStreamEventTimer when libvirtd restarts
      - BZ#716781'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17503
  fields:
    type: testcase
    title: '- vdsm: cannot run a vm with several snapshots BZ#903248'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17502
  fields:
    type: testcase
    title: '[libvirtd]libvirtd should not crash after running virsh cpu-compare with
      unexpected input - Bug 630618'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-19644
  fields:
    type: heading
    title: Domain Block
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17063
  fields:
    type: testcase
    title: '[pool-name] - Convert a pool UUID to pool name'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17351
  fields:
    type: testcase
    title: '[migrate-compcache] Get/set size of the cache (in bytes) used for compressing
      repeatedly transferred memory pages during live migration - BZ 857578'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-38249
  fields:
    type: heading
    title: Domain Display connection
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17648
  fields:
    type: testcase
    title: '[scalability][One domain]Libvirt should deal with starting process of
      domain rapidly when setting a small value on max_files in qemu.conf --bug 1121544'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17649
  fields:
    type: testcase
    title: '[Scalability][One domain]Start domain with 24 SATA disks(coldplug)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-22941
  fields:
    type: testcase
    title: virsh numatune --nodeset does not get respected by a running qemu process
      - bug 1206625
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-19645
  fields:
    type: heading
    title: cpu
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17646
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] List 16384 domains'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17647
  fields:
    type: testcase
    title: '[Scalability][Storage] List 4096 pools and 16384 volumes'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-16748
  fields:
    type: heading
    title: Create vol using backingstore in dir/fs/netfs/logical/disk pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16828
  fields:
    type: testcase
    title: '[Video devices] qxl---For Windows'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16740
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(sparse file) in directory pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16741
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(sparse file) in directory pool by
      pool uuid'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16742
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(sparse file) in filesystem pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16743
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(sparse file) in network filesystem
      pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16744
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(VMDK) in directory  pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16745
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(VMDK) in filesystem  pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16746
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume(VMDK) in network filesystem  pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16747
  fields:
    type: testcase
    title: '[Storage][Volume wiping] wipe volume by passing algorithm'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19158
  fields:
    type: testcase
    title: '[Virtual disks][floppy/cdrom] Save/restore/migration/destroy/restart a
      domain with ejected CDROM  - bug 575160'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18314
  fields:
    type: heading
    title: Libvirt Test Plan - network filter
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18317
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18316
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18311
  fields:
    type: testcase
    title: '[remote access] [other] using polkit with virsh for non-root access should
      work via ssh or locally - bug 986365'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-31782
  fields:
    type: testcase
    title: '[virtual disks] Negtive - attach disk with target ccw addr and libvirt
      should not crash - bz 1258361'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18313
  fields:
    type: testcase
    title: Connect to the hypervisor running on host over an SSH connection with sasl
      plain authentication -Bug 1171521.
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18312
  fields:
    type: testcase
    title: '[remote access] [other] Connect to various hypervisor under the session
      mode'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-19151
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][target bus] Hot-plug/unplug a virtio disk'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19153
  fields:
    type: testcase
    title: '[virtual disks][target bus] Replace a domain''s existing SCSI/IDE block
      device driver to virtio'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18319
  fields:
    type: heading
    title: Default priority and valid range
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18318
  fields:
    type: heading
    title: Supported interface type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-19156
  fields:
    type: testcase
    title: '[virtual disks][SCSI] Create domain with ide/scsi disks with wwn,serial,vendor,product
      - bug 831099, 952497'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19157
  fields:
    type: testcase
    title: '[virtual disks][ceph] Cross migrate guest using rbd based image as disk
      from rhel6 latest version to rhel7 latest version'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-23947
  fields:
    type: testcase
    title: '[CPU Management] Improve ppc64 CPU driver -bug 1250977'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18762
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18701
  fields:
    type: testcase
    title: '[Virtual networks] libvirtd in guest collides with default host virtual
      network routing - bug 594494'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16971
  fields:
    type: testcase
    title: '[domstate] - Get domain state'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19647
  fields:
    type: heading
    title: Other domain commands
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17359
  fields:
    type: testcase
    title: '[Migration] Seamless spice migration with graphic guest and windows spice
      client- bug 783968'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18232
  fields:
    type: testcase
    title: '[guest resource control]check whether libvirt default device appear in
      device.list'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18955
  fields:
    type: testcase
    title: '[migration]resume the migrating guest in the target host'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-23839
  fields:
    type: testcase
    title: '[set-user-password]'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18236
  fields:
    type: heading
    title: scheduler tuning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-12689
  fields:
    type: testcase
    title: '[guest agent] Check guest agent state''s lifecycle event in libvirt side
      - bug 1146944'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12688
  fields:
    type: testcase
    title: '[guest agent] libvirt could check the qemu-ga status correctly  - bug
      1122151,1160930'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-22838
  fields:
    type: heading
    title: Known Issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-36909
  fields:
    type: testcase
    title: Check tray-change event  for insert/eject a iso to the cdrom of guest
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12681
  fields:
    type: testcase
    title: '[CPU Management] guest-agent based vCPU hot-unplug without guest agent
      configuration - bug 984821'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12680
  fields:
    type: testcase
    title: '[CPU Management] guest-agent based vCPU hot-unplug - bug 924400 1035108'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12683
  fields:
    type: heading
    title: Set the password for the user account in the domain (set-user-password)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12682
  fields:
    type: testcase
    title: '[CPU Management] agent lifecycle checking before vcpu hot-plug -- bz 1146944'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12685
  fields:
    type: testcase
    title: Setting root/administrator account password via QEMU guest agent -BZ\#
      1174177
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12684
  fields:
    type: requirement
    title: Set the password for the user account in the domain (set-user-password)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12687
  fields:
    type: requirement
    title: Testing about the qemu agent service
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12686
  fields:
    type: heading
    title: Testing about the qemu agent service
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-16599
  fields:
    type: heading
    title: Snapshot operations
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16598
  fields:
    type: testcase
    title: '[virtual disks][snapshot] Create snapshot for a domian with snapshot=''no''
      in disk xml bug 1106416'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16597
  fields:
    type: testcase
    title: '[virtual disks][snapshot] Create snapshot for a domian with snapshot=''external''
      in disk xml'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18621
  fields:
    type: testcase
    title: '[LXC] undefine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - LXC]
- model: caselink.workitem
  pk: RHEL7-13178
  fields:
    type: testcase
    title: '[graphical framebuffers] libvirt should pass "-enable-fips" to QEMU --
      Bug: 1035474'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13179
  fields:
    type: testcase
    title: '[Update device flags] "persistent" update VNC password'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-18485
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-18484
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-13176
  fields:
    type: testcase
    title: '[Graphical framebuffers] support for vnc unix sockets'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13177
  fields:
    type: testcase
    title: '[Graphical framebuffers] Host firewall port listening for different vnc
      ports'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-18480
  fields:
    type: testcase
    title: '[PCI bridge] A pci-bridge support 31 devices.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-17354
  fields:
    type: testcase
    title: '[migration]Throttle-down guest to help with live migration convergence
      -- Bug:990319'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17355
  fields:
    type: testcase
    title: '[migration]List the domjobinfo while migrate the guest with the --compressed
      option-- Bug: 1012818'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17356
  fields:
    type: testcase
    title: '[migration]Specify a listen address for incoming migration connections
      -- Bug:1015215,1018267,1049338'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17357
  fields:
    type: testcase
    title: '[migration][timeout]Setting timeout in live migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17350
  fields:
    type: testcase
    title: '[Migration]Use an alternate migration URI to do the migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-13172
  fields:
    type: testcase
    title: '[Graphical framebuffers] vnc Sharepolicy setting'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17352
  fields:
    type: testcase
    title: '[Migration] Page Delta Compression (xbzrle) for Live Migration Feature
      Request - support in libvirt BZ 842857'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17353
  fields:
    type: testcase
    title: '[Migration]add optional [--clienturi] [<clienturi>] option to the migrate
      command  Bug: 980131'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18482
  fields:
    type: heading
    title: Libvirt Test Plan - SRIOV
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-17358
  fields:
    type: heading
    title: spice-migration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17807
  fields:
    type: testcase
    title: '[USB][Hostdev] PCI/USB device cannot be reassigned to another VM'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16713
  fields:
    type: testcase
    title: '[storage][netfs pool] Destroy domain with disks on an unreachable NFS
      storage. BZ#746666'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-17261
  fields:
    type: testcase
    title: '[virtio-rng] test virtio-rng device with random backend model /dev/hwrng-Bug
      1177713'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-12928
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12929
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-16712
  fields:
    type: heading
    title: Use storage pool/volume with domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-12924
  fields:
    type: testcase
    title: '[Domain async job handling] Pause a domain while being migrated - bug
      726650'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12925
  fields:
    type: testcase
    title: '[Domain async job handling] loop to cancel a stuck migration job do not
      cause libvirtd hang - 821468 725373'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12926
  fields:
    type: testcase
    title: '[domain async job handling] Do the domjobinfo and domjobabort with the
      shutoff guest -- Bug 727047'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12927
  fields:
    type: requirement
    title: use domjobinfo --completed to check guest finished job
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12920
  fields:
    type: testcase
    title: '[Domain async job handling] managedsave & domjobinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12921
  fields:
    type: testcase
    title: '[Domain async job handling] snapshot & domjobinfo domjobabort'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12922
  fields:
    type: testcase
    title: '[Domain async job handling] migrate & domjobabort'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-23530
  fields:
    type: testcase
    title: '[blkiotune] - Get or set blkio parameters -- bug 1165580, bug 1159206'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-21759
  fields:
    type: testcase
    title: '[iothreadinfo] Get domian IOThreads information'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21758
  fields:
    type: testcase
    title: '[event]List event types, or wait for domain events to occur'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16420
  fields:
    type: testcase
    title: '[NUMA] Check libvirt build right qemu command line when vm have numa/hugepage/memnode
      settings - bug 1182467'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-21751
  fields:
    type: testcase
    title: '[domfsfreeze] Freeze domain''s mounted filesystems'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21750
  fields:
    type: testcase
    title: '[cpu-models]Get the CPU models for an arch - bug 1254420'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21753
  fields:
    type: testcase
    title: '[net-event]List event types, or wait for network events to occur'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21752
  fields:
    type: testcase
    title: '[domfsthaw]Thaw domain''s mounted filesystems.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21755
  fields:
    type: testcase
    title: '[qemu-monitor-event] Listen for QEMU Monitor Events'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21754
  fields:
    type: testcase
    title: '[net-dhcp-leases]Print lease info for a given network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21757
  fields:
    type: testcase
    title: '[domcapabilities]Returns capabilities of emulator with respect to host
      and libvirt - 1076959'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21756
  fields:
    type: testcase
    title: '[freepages]display available free pages for the NUMA cell'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18936
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-12853
  fields:
    type: heading
    title: Libvirt Test Plan - ACL
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12854
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12855
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12856
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12857
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12858
  fields:
    type: heading
    title: Objects about virConnectPtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12859
  fields:
    type: testcase
    title: '[ACL]Discover potential storage pool sources with the detect-storage-pools
      permission'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-21625
  fields:
    type: testcase
    title: 'Test libvirt should check invalid value of vgamem vram ram and heads for
      qxl video device #BZ1190956'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-20408
  fields:
    type: requirement
    title: 'VIRT_CONTROL: Reports change in the lifecycle state of a virtual machine.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-20409
  fields:
    type: requirement
    title: VIRT_MACHINE_ID:Reports the association of a security context with a guest.
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-16915
  fields:
    type: testcase
    title: '[blkdeviotune] - Get or set block device io parameters - bug 770683, 819014
      ,846265 , 828559 974010 , 1187012'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16914
  fields:
    type: testcase
    title: '[autostart] - Autostart a domain'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16917
  fields:
    type: testcase
    title: '[blockcopy] blockcopy with full options --bug 837583  837787 845448 923125
      927156 927495'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18492
  fields:
    type: testcase
    title: '[SR-IOV] Assign one PF to one guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-16911
  fields:
    type: testcase
    title: '[attach-device] - Add support to libvirt for KVM PCI device assignment
      hotplug. -  Bug 517465 735909'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16910
  fields:
    type: testcase
    title: memory leaks/dangling pointers caused by virDomainDetachDeviceConfig (virsh
      detach-*) BZ#802851
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16913
  fields:
    type: testcase
    title: '[attach-interface] - Attach interface from args'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16912
  fields:
    type: testcase
    title: '[attach-device] - Attach disk-type device from xml file on kvm guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17426
  fields:
    type: testcase
    title: '[migration] Migrate a guest with hotplugged virtio NICs and hotplugged
      disks'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17424
  fields:
    type: testcase
    title: '[migration]Add live migration support for USB - bug 836670,843560'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17425
  fields:
    type: testcase
    title: '[Migration]Support migration with pci passthrough network device -- bug:896716(not
      support now)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16919
  fields:
    type: testcase
    title: '[blockjob]Relabel and configure cgroups for the backing files on VIR_DOMAIN_BLOCK_JOB_ABORT_PIVOT
      -- Bug 856247 1139567'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16918
  fields:
    type: testcase
    title: '[blockjob]Libvirt deal with qemu block-job-set-speed - 815791 927156'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17420
  fields:
    type: testcase
    title: '[Migration] Migration after eject cdrom in guest - bug 725673'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17421
  fields:
    type: testcase
    title: '[Migration] Migration with non-shared floppy and cdrom with startupPolicy'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16801
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16800
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16809
  fields:
    type: heading
    title: watchdog device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18016
  fields:
    type: heading
    title: Common configuration
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18541
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18014
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18015
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18012
  fields:
    type: heading
    title: Libvirt Test Plan - host network interface management
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18545
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18546
  fields:
    type: heading
    title: SCSI virtual disk and hostdev hotplug/unplug
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-17795
  fields:
    type: testcase
    title: '[USB][migration]Add live migration support for USB - bug 836670,843560'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18548
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Hot-plug/hot-unplug a virtual hard drive
      through the virtio-scsi controller [NPIV]'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18549
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Hot-plug/hot-unplug a SCSI device with
      managed=''yes/no'' to guest.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-17518
  fields:
    type: heading
    title: serial
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17928
  fields:
    type: testcase
    title: '[CPU management][NFV]disabling/enabling the PMU in the xml file - bug
      1178853'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-18155
  fields:
    type: testcase
    title: '[Log and debugging] Check the vm-pid in VIRT_CONTROL'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18018
  fields:
    type: heading
    title: vlan type device characteristic
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18019
  fields:
    type: heading
    title: bridge type device characteristic
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-17797
  fields:
    type: testcase
    title: '[USB] [migration] Add live migration support for usb [xhci] - bug 838170'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18712
  fields:
    type: testcase
    title: '[Virtual Networks] the number of guests exceeds the maximum IP number
      of DHCP'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18151
  fields:
    type: testcase
    title: '[log and debugging] Check the audit log about  rng device  -bug 919162'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-17922
  fields:
    type: testcase
    title: '[CPU management][NFV] support for setting RT priority of vCPU threads
      - bug 1178986 1210545'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-17636
  fields:
    type: testcase
    title: '[Scalability][Migration] Migrate 514 guests through TLS connection --live
      --undefinesource  with ipv4 --large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17635
  fields:
    type: testcase
    title: '[Scalability][Migration] Migrate 514 guests through TLS connection --live
      --persistent  with ipv4  --large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17632
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Check libvirtd status when executing vm
      operations parallely -bug1052156'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17631
  fields:
    type: testcase
    title: '[Scalability][RHEVM] Start/Stop 100 guests for 10 times in rhevm, check
      the libvirtd status-bug670848'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17630
  fields:
    type: testcase
    title: '[Scalability][One domain] Start/Destroy one guest with the minimum memory
      for looping 500 times'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18308
  fields:
    type: testcase
    title: '[remote access] [other] Connect to the local ''default'' hypervisor running
      on host'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18309
  fields:
    type: testcase
    title: '[remote access] mDSN custom'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-16779
  fields:
    type: testcase
    title: '[Memory management] change memory/currentMemory by virsh then do operations
      BZ 873134'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16778
  fields:
    type: testcase
    title: '[Memory management] Present memballoon statistic period in live xml -
      bug 1140960'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-18302
  fields:
    type: requirement
    title: Connect to various hypervisor
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18303
  fields:
    type: testcase
    title: '[configuration]keepalive protocol'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18300
  fields:
    type: testcase
    title: '[remote access] [unix] Connect the unix socket with auth.conf under the
      /etc/libvirt path - bug 859320'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18301
  fields:
    type: heading
    title: Connect to various hypervisor
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18306
  fields:
    type: testcase
    title: '[remote access] [other] access test driver - bug 684848'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18307
  fields:
    type: testcase
    title: '[remote access] [other] Connect to a non-kvm  hypervisor'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18304
  fields:
    type: testcase
    title: '[remote access] [other] uri aliases and uri default'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-18305
  fields:
    type: testcase
    title: '[remote access] [other] libvirtd shouldn''t crash while connect to hypervisor
      with unconfigured tls/tcp connection BZ#723442'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Remote access]
- model: caselink.workitem
  pk: RHEL7-19169
  fields:
    type: testcase
    title: '[virtual disks][floppy/cdrom][shareable] Start a guest with shareable
      block cdrom/floppy - bug 908073'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19168
  fields:
    type: testcase
    title: '[virtual disks][shareable] Start two domains with shareable block disks-
      bug 914677 1086704'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19165
  fields:
    type: testcase
    title: '[virtual disks] Attach disk with --cache - bug 829562'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19164
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][negative] Attach file type disk to shutoff/running
      guest as LUN device --BZ 1078126, 1201143'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19167
  fields:
    type: testcase
    title: '[virtual disks][negative]virt-xml-validate command can report error if
      while guest with file type disk as LUN device -- bug 1210669'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-38105
  fields:
    type: testcase
    title: VM with attached VFIO device is powered off when trying to hotplug increase
      memory of VM - bug 1280420
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-19161
  fields:
    type: testcase
    title: '[virtual disks][target bus] Split ide-drive into ide-cd and ide-hd - BZ
      801772 #c6'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17470
  fields:
    type: testcase
    title: '[libvirtd] run libvirtd foreground BZ#831044&966449'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-17181
  fields:
    type: testcase
    title: '[virsh command]virsh handle inactive configuration on device hot(un)plug
      commands- Bug 1049529'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17180
  fields:
    type: testcase
    title: '[suspend/resume/save/restore]  Time sync after resuming from suspend -
      BZ1049038'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17183
  fields:
    type: testcase
    title: '[keepalive] keepalive support for virsh - 1073506 - scenario 1'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17182
  fields:
    type: testcase
    title: '[metadata] get or set domain''s metadata - bug 1115039'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-13189
  fields:
    type: testcase
    title: '[Graphical framebuffers] libvirt generate right xml for smartcard -- bug
      677308'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17184
  fields:
    type: testcase
    title: '[keepalive] Negative test against keepalive support for virsh - 1073506'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17187
  fields:
    type: testcase
    title: '[setmaxmem] - Change maximum memory limit of active guest - Bug 790583'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17186
  fields:
    type: testcase
    title: '[blockjob] blockjob with full options'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-13185
  fields:
    type: testcase
    title: '[Graphical framebuffers] spice video streaming support'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13184
  fields:
    type: testcase
    title: '[Update device flags] Update spice password for live domain - bug 731685'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13187
  fields:
    type: testcase
    title: '[Graphical framebuffers] Specify spice mouse mode'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13186
  fields:
    type: testcase
    title: '[Graphical framebuffers] Test the usb device redirection with spice -bug
      1035190 819498'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13181
  fields:
    type: heading
    title: SPICE
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13180
  fields:
    type: testcase
    title: 'VNC WebSocket support for QEMU guests #BZ950425'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13183
  fields:
    type: testcase
    title: '[Graphical framebuffers] Check filetransfer via spice'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13182
  fields:
    type: requirement
    title: Testing about SPICE type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17743
  fields:
    type: testcase
    title: '[USB][Hostdev][hot-plug/unplug] Hot-plug/Hot-unplug multi usb devices.
      - bug 815755'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17742
  fields:
    type: testcase
    title: '[USB][Hostdev][hot-plug/unplug] Hot-plug/Hot-unplug a usb device with
      bus + device.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17741
  fields:
    type: testcase
    title: '[USB][Hostdev] usb device should not be reassigned to another VM - bug743671'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17740
  fields:
    type: testcase
    title: '[USB] [Hostdev] Boot VM from usb device.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17747
  fields:
    type: testcase
    title: '[USB][Hostdev] Cold-plug a usb device to guest with product + vendor -
      bug798838'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17746
  fields:
    type: testcase
    title: '[USB][Hostdev] Cold-plug a usb device to guest with bus + device.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17745
  fields:
    type: testcase
    title: '[USB][Hostdev][hot-plug/unplug] Check owner and selinux label after hot-unplugging
      a USB device from guest with managed mode-bug825068'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17744
  fields:
    type: testcase
    title: '[USB][Hostdev][hot-plug/unplug] Hot-plug/Hot-unplug a usb device with
      product + vendor-bug798838, bug 1025108'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18166
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18164
  fields:
    type: testcase
    title: '[Log and debugging] Check the install.log for all libvirt related pkgs'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18165
  fields:
    type: heading
    title: Known issue
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18162
  fields:
    type: heading
    title: Other related logs for libvirt
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18163
  fields:
    type: requirement
    title: Check the log for package on install/upgrade/downgrade/dependence/remove/
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18160
  fields:
    type: testcase
    title: '[Log and debugging]Audit log for the RNG device for both random and egd'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-18161
  fields:
    type: testcase
    title: '[Log and debugging] error message when disabled SELinux - 1135155'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-17507
  fields:
    type: testcase
    title: '[libvirtd]Race condition while create&destroy a transient VM on a host
      from 2 clients  -bug 1022924 1029632'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-18944
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18945
  fields:
    type: testcase
    title: '[migration]Cross migration with ram&vgamem for QXL device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18946
  fields:
    type: testcase
    title: '[migration]Cross migration with cpu featune invtsc'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18947
  fields:
    type: testcase
    title: '[configuration] domain resume when nfs with soft option is not available
      permanently/temporarily - bug 707202'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-18940
  fields:
    type: heading
    title: cpu tunning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-18941
  fields:
    type: heading
    title: hypervisor features
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-38254
  fields:
    type: heading
    title: Domain Qemu monitor
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38255
  fields:
    type: heading
    title: Deleted
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38322
  fields:
    type: heading
    title: Volume clone
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38323
  fields:
    type: heading
    title: Volume upload
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38320
  fields:
    type: heading
    title: Domain vcpu
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38321
  fields:
    type: heading
    title: Volume wipe
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-33021
  fields:
    type: testcase
    title: '[migration] [test with qemu-kvm-rhev] Libvirtd listens QMP events for
      migration status changes - 1212077'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-33022
  fields:
    type: testcase
    title: '[migratin] [test with qemu-kvm] Libvirtd polls for migration status.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-33023
  fields:
    type: testcase
    title: '[RHEVM]Check the ''metadata not found'' log is debug level- 1220474'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-33024
  fields:
    type: testcase
    title: The live changes in xml doesn't disappear after restarting libvirtd - 1211548
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-33025
  fields:
    type: testcase
    title: '[life-cycle][-no-reboot] - Change the life cycle flow via on_xxx element
      in XML - 1201760'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-33026
  fields:
    type: testcase
    title: '[life-cycle][-no-shutdown] - Change the life cycle flow via on_xxx element
      in XML - 1201760'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12699
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12696
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12697
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12695
  fields:
    type: heading
    title: Libvirt Test Plan - Libvirt domain event handler
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12692
  fields:
    type: testcase
    title: '[ACL]user access control for the operations about guest-agent the same
      case is duplicated with ACL'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12693
  fields:
    type: testcase
    title: '[Guest agent] hotplug/hot-unplug guest agent char device from guest -
      bug 1168530,1181408'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12690
  fields:
    type: testcase
    title: '[guest-agent] Guest agent (unix type) channel with automatic path of source
      -bug 888325'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12691
  fields:
    type: testcase
    title: '[guest agent] Should report appropriate error message when guest crashes
      while connecting to agent monitor --bug 1054785'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-17295
  fields:
    type: testcase
    title: '[Migration]Tunnelled migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17294
  fields:
    type: testcase
    title: '[Migration] Bi-directional tunnelled migration between 2 hosts.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17297
  fields:
    type: testcase
    title: '[Migration] Tunnelled migration using a TLS enabled URI'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17296
  fields:
    type: testcase
    title: '[Migration] Migration with unknown tcp socket - bug 720269'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17291
  fields:
    type: testcase
    title: '[Migration] P2P migration with keepalive protocol - scenario 3'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17290
  fields:
    type: testcase
    title: '[Migration] P2P migration with keepalive protocol - scenario 2'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17293
  fields:
    type: heading
    title: migration-Tunnelled
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17292
  fields:
    type: testcase
    title: '[Migration] P2P migration with keepalive protocol - scenario 4'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16586
  fields:
    type: testcase
    title: '[RHEVM+NFS] Live snapshot create/merge with vm storage based on NFS #bug1206365'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16584
  fields:
    type: requirement
    title: Intergration Testing
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16585
  fields:
    type: testcase
    title: '[RHEVM+ISCSI] Live snapshot create/merge with vm storage based on ISCSI
      #bug1206365'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17299
  fields:
    type: heading
    title: migration-cpu
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17298
  fields:
    type: testcase
    title: '[Migration] Tunnelled migration using TCP enabled URI without sasl'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16580
  fields:
    type: testcase
    title: '[blockcopy] Do blockcopy with snapshot or not for all disk type --BZ1195461'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16581
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcopy after create external disk-only
      snapshot with "network" disk type(gluster) #BZ1069787'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17501
  fields:
    type: testcase
    title: '[libvirtd] virt-manager causes iowait, due to rewriting XML files repeatable
      - bug 831149'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-37141
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [RHEL 7_3 Libvirt_KVM ppc64le plan]
- model: caselink.workitem
  pk: RHEL7-37140
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [RHEL 7_3 Libvirt_KVM ppc64le plan]
- model: caselink.workitem
  pk: RHEL7-17369
  fields:
    type: testcase
    title: '[Migration] migrate a guest based on iscsi storage'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17368
  fields:
    type: testcase
    title: '[Migration] Live migration with non-shared storage for kvm with --copy-storage-all
      (with pre-created images manually) - bug 677220, 913363'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16583
  fields:
    type: heading
    title: Integration testing with other features
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17361
  fields:
    type: testcase
    title: '[Migration] SSL connected spice migration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17360
  fields:
    type: testcase
    title: '[Migration] seamless SPICE migration - Bug 589989'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17363
  fields:
    type: testcase
    title: '[Migration] Check the spice password after migration  -bug 953720'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17362
  fields:
    type: testcase
    title: '[Migration] Tunnelled spice migration - bug 591974'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17365
  fields:
    type: testcase
    title: '[migration]migrate with established spice session (spice client connected)  --bug
      1010861'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17364
  fields:
    type: testcase
    title: '[migration]spice/libvirt migration with different network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17367
  fields:
    type: testcase
    title: '[Migration] Live migration of storage using blockpull  (without moving
      VM) - bug 638506'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17366
  fields:
    type: heading
    title: storage-migration (non-shared storage)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17169
  fields:
    type: testcase
    title: '[virsh command]Issues about virsh with incorrect argument -bug 949373'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17168
  fields:
    type: testcase
    title: '[vol-create-as] Libvirt detection of vdi file format is broken-bug 921452'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17163
  fields:
    type: testcase
    title: '[storage]check  --prealloc-metadata flag for vol related cmd - bug 969982'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17162
  fields:
    type: testcase
    title: '[net-update] update parts of an existing network''s configuration -- BZ
      879473 988718 1001094 1001078 1035336'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17161
  fields:
    type: testcase
    title: '[migrate-compcache] Get/set size of the cache (in bytes) used for compressing
      repeatedly transferred memory pages during live migration - BZ 857578'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17160
  fields:
    type: testcase
    title: '[vol-wipe] - Wipe a vol'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17167
  fields:
    type: testcase
    title: '[nodecpumap] node cpu map'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17166
  fields:
    type: testcase
    title: '[blockcommit] Commit changes from a snapshot down to its backing image
      --Bug 1008350'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17165
  fields:
    type: testcase
    title: '[vol-create-as]create a logical volume -- Bug 955879'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17164
  fields:
    type: testcase
    title: '[domfstrim] Invoke fstri on domain''s mounted filesystems - bug 928197
      831159'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-34946
  fields:
    type: testcase
    title: '[System checkpoint snapshot][External] Create external system checkpoint
      snapshot with guest imges based Dir pool'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17613
  fields:
    type: testcase
    title: '[Scalability][RHEVM]Check virDomainCreateXML status after start multi
      guests with vdsm-bug691514'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-25062
  fields:
    type: testcase
    title: '[configuration] Start a guest with clear_emulator_capabilities settings'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Security]
- model: caselink.workitem
  pk: RHEL7-18698
  fields:
    type: testcase
    title: '[Virtual Networks] IPv6 support in NAT virtual network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18699
  fields:
    type: testcase
    title: '[Virtual Networks] IPv6 support in Shared physical network'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18517
  fields:
    type: testcase
    title: '[SR-IOV][VFIO] passthrough the PCIs of one iommu group to one guest --bug
      979988'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-12911
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12910
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12913
  fields:
    type: testcase
    title: '[Domain async job handling] save & domjobabort - bug 1131755'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12912
  fields:
    type: requirement
    title: Check domjobinfo and domjobabort while save/managedsave/migrate/dump/snapshot-cr...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12915
  fields:
    type: testcase
    title: '[Domain async job handling] live coredump & domjobabort'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12914
  fields:
    type: testcase
    title: '[Domain async job handling] save & domjobinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12917
  fields:
    type: testcase
    title: '[Domain async job handling] crash coredump & domjobabort'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12916
  fields:
    type: testcase
    title: '[Domain async job handling] live coredump & domjobinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12919
  fields:
    type: testcase
    title: '[Domain async job handling] managedsave & domjobabort'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12918
  fields:
    type: testcase
    title: '[Domain async job handling] crash coredump & domjobinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-21748
  fields:
    type: testcase
    title: '[capabilities] Expose huge pages information through libvirt API -- bug
      1076957'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21749
  fields:
    type: testcase
    title: '[domstats] domstats - get statistics about one or multiple domains'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21746
  fields:
    type: testcase
    title: '[domtime] Gets or sets the domain''s system time'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21747
  fields:
    type: testcase
    title: '[freepages] Expose huge pages information through libvirt API -- bug 1076957'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21744
  fields:
    type: testcase
    title: '[blockcommit]blockcommit with full options'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21745
  fields:
    type: testcase
    title: '[blockpull]blockpull with full options'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21742
  fields:
    type: testcase
    title: '[net-update]modify the name attribute of ipv6 dhcp host --Bug 991290'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21743
  fields:
    type: testcase
    title: '[vol-create-from] Support simultaneous volume operations - bug 1069552'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21740
  fields:
    type: testcase
    title: '[lxc-enter-namespace] LXC Guest Enter Namespace bug - 1070186'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-21741
  fields:
    type: testcase
    title: '[send-process-signal] Send signals to processes'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17989
  fields:
    type: testcase
    title: '[Node devices] Dettach node device from host when iommu is disabled --
      bug 1046919'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17988
  fields:
    type: testcase
    title: '[Node devices] Reset node device from host'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17981
  fields:
    type: heading
    title: nodedev-list/dumpxml
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17980
  fields:
    type: testcase
    title: '[Node devices] Create node device which is not a fibre channel HBA- bug
      510426'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17983
  fields:
    type: testcase
    title: '[Node Devices][NFV] Expose interface speed and link information via API
      -bug 1076960'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17982
  fields:
    type: testcase
    title: '[Node devices] List all node devices on host'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17985
  fields:
    type: testcase
    title: '[Node devices] Virtio Net/Disk block devices get correct parent in node
      device info - bug 570130'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17987
  fields:
    type: heading
    title: nodedev-attach/detach/reset
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17986
  fields:
    type: testcase
    title: '[Node devices] Dump network device xml info'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-12865
  fields:
    type: testcase
    title: '[ACL] permissons about domain migration'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12864
  fields:
    type: testcase
    title: '[ACL] permissions about domain -2'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12867
  fields:
    type: testcase
    title: '[remote access] [unix] Check connect with UNIX sockets with polkit and
      acl control'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12866
  fields:
    type: testcase
    title: '[ACL] libvirt event registration violates domain:getattr ACL - bug 1047964'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12861
  fields:
    type: testcase
    title: '[libvirtd]libvirtd shouldn''t be crashed while destroy the guest which
      has been connected by virt-viewer and enable the access-driver --bug 1011429
      980428'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12860
  fields:
    type: testcase
    title: '[ACL]Normal user can do the following operation without requiring authorization'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12863
  fields:
    type: testcase
    title: '[ACL] permissions about domain -1'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12862
  fields:
    type: heading
    title: Objects about virDomainPt
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12869
  fields:
    type: heading
    title: Objects about virInterfacePtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12868
  fields:
    type: testcase
    title: '[ACL] user access control for the operations about guest-agent'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-21632
  fields:
    type: heading
    title: RHEV ONLY
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-16908
  fields:
    type: testcase
    title: backward migration ability should be requested to qemu-kvm when needed
      - Bug 542665
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16909
  fields:
    type: testcase
    title: '[domxml-to-native] memory leak when run ''virsh domxml-to-native'' BZ#769224'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16902
  fields:
    type: heading
    title: Libvirt Test Plan - Virsh cmd - Confirmed
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16903
  fields:
    type: testcase
    title: '[save] Compress guest save file to lzop/gzip/bzip2/xz'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16906
  fields:
    type: testcase
    title: '[save]Run virsh save with option --bypass-cache to avoid file system cache
      when saving'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16907
  fields:
    type: testcase
    title: '[snapshot]virsh heap corruption due to bad memmove BZ 819636'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16904
  fields:
    type: testcase
    title: '[save] Compress guest save to invalid format'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16905
  fields:
    type: testcase
    title: '[save] Run virsh save with option --xml to containing updated XML for
      the target'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16719
  fields:
    type: testcase
    title: '[Storage][encryption] - support username/password for iSCSI pools BZ#957294'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18516
  fields:
    type: testcase
    title: '[SR-IOV][VFIO]hot-plug/hot-unplug VF with/without vfio driver'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-16718
  fields:
    type: testcase
    title: '[Storage][encryption] Encrypt a volume at the time of volume creation'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19317
  fields:
    type: heading
    title: RHEV ONLY
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18045
  fields:
    type: testcase
    title: '[Host network interface management] list interfaces'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-18596
  fields:
    type: testcase
    title: '[NPIV]Destroy 1 vHBA won''t affect another vHBA.  - bug 557935'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-38252
  fields:
    type: heading
    title: Domain generic info
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18595
  fields:
    type: testcase
    title: '[NPIV] Destroy a virtual HBA with NPIV'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18594
  fields:
    type: testcase
    title: '[NPIV] Create up to 127 vport'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18593
  fields:
    type: testcase
    title: '[NPIV] Create more than 2 vports and destroy one to see if others can
      still work'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18592
  fields:
    type: testcase
    title: '[NPIV] Create and destroy vport frequently - bug595490'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18591
  fields:
    type: testcase
    title: '[NPIV] fc type pool lifecycle  -bug 1027680'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18590
  fields:
    type: testcase
    title: '[NPIV] Create a virtual HBA with NPIV --bug 952105'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-18575
  fields:
    type: heading
    title: SCSI virual disk specific scenarios to cover existing fixed bugs
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18574
  fields:
    type: testcase
    title: '[Host device assignment] [SCSI] Support the shareable attribute for SCSI
      passthrough devices -- bug 1082521'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18577
  fields:
    type: testcase
    title: '[virtual  disks][target bus][SCSI] Duplicate ID set for virtio scsi controller  when
      adding the second virtio scsi disk - bug 1036715'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18576
  fields:
    type: testcase
    title: '[virtual disks][target bus][SCSI] Duplicate ID set for scsi controller
      when adding the second scsi disk-bug 949810'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18571
  fields:
    type: heading
    title: SCSI hostdev specific scenarios to cover existing fixed bugs
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18570
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Boot VM from scsi device.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18573
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Support libiscsi for SCSI passthrough devices-
      bug957293'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18572
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] passthrough the SCSI device with incorrect
      adapter name to guest. -- bug 1031079'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-19064
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug] Attach a disk with specific name - bug
      829246'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18579
  fields:
    type: testcase
    title: '[virtual disks][network][iSCSI][SCSI] Create domain with iSCSI network
      lun - bug1000159'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19003
  fields:
    type: testcase
    title: '[Migration]Storage migration with sparse disk image'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-19552
  fields:
    type: testcase
    title: '[Storage][negative] dir pool should always be active when libvirtd restart,
      no matter if setting "autostart" -- bz 1238610'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-19065
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][negative] Attach disk with unsupported
      driver'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-31564
  fields:
    type: testcase
    title: '[migration]Kill the qemu-kvm process(or restart libvirtd) on target host
      during migration - 1242904'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18599
  fields:
    type: testcase
    title: '[NPIV] Install a guest on the storage which connect to the vport of host1
      and reconnect it to host2 with the same vport'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NPIV]
- model: caselink.workitem
  pk: RHEL7-16769
  fields:
    type: heading
    title: mlock
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-19067
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][negative] Attach disk with wrong xml'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-38289
  fields:
    type: heading
    title: Undefine domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-19066
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][block] Attach/Detach a logical volume
      to/from guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-34236
  fields:
    type: testcase
    title: Max memory combined with PCI devices assigned - bug 12734808
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-38288
  fields:
    type: heading
    title: Resume domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18700
  fields:
    type: testcase
    title: '[Virtual Networks] Isolated virtual network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-17179
  fields:
    type: testcase
    title: '[numatune] virsh command numatune accept integer as mode type - BZ1047234'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17628
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Start/Destroy 1024 guests including 16
      kinds of os - bug 769500, 769503,806752 - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17629
  fields:
    type: testcase
    title: '[Scalability][One domain] Start/Destroy one guest with 1TB mem/240 vCPUs
      for looping 10 times - bug 748946 - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18689
  fields:
    type: testcase
    title: '[virtual networks] Bridged network, eth + macvtap + bridge'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18688
  fields:
    type: testcase
    title: '[Virtual Networks] activate network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18687
  fields:
    type: testcase
    title: '[virtual networks] - VM creation failure should not leave behind stale
      macvtap interfaces - bug 754621'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18686
  fields:
    type: testcase
    title: '[Virtio] Support for virtio-net tuning option-- Bug 1066209,1071888'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18685
  fields:
    type: testcase
    title: '[virtual disks][target bus] Save/restore a guest with virtio NICs and
      disks'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18684
  fields:
    type: testcase
    title: '[Virtio] Replace a domain''s existing e1000/RTL8139 network driver to
      virtio'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18683
  fields:
    type: testcase
    title: '[Update device flags] control link up/down state of guest NICs via XML
      & domif-setlink - bug 643373'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18682
  fields:
    type: testcase
    title: '[Virtual networks] Detach non-existent network device.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18681
  fields:
    type: testcase
    title: '[libvirtd]libvirtd crash when start a net with special MAC address Bug#817234
      , 823765'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18680
  fields:
    type: testcase
    title: '[libvirtd] network interface <target> after libvirtd restart - Bug 588046'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16762
  fields:
    type: heading
    title: Memory Alocation
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16763
  fields:
    type: testcase
    title: '[Memory management] start guest will fail with different errors when can''t
      allocate memory BZ 765733'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16760
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16761
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16766
  fields:
    type: heading
    title: hugepage
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16767
  fields:
    type: testcase
    title: '[Memory management] huge pages - bug 1175449'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-18379
  fields:
    type: testcase
    title: Need to limit names of new interfaces to IFNAMSIZ   --Bug 1090011
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18378
  fields:
    type: testcase
    title: Quit interactive terminal when last command returns false - 681078
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18377
  fields:
    type: testcase
    title: Quit ncftool interactive command
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18376
  fields:
    type: testcase
    title: Undefine an interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18375
  fields:
    type: testcase
    title: change-begin/commit/rollback test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18374
  fields:
    type: testcase
    title: Bring down an interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18373
  fields:
    type: testcase
    title: Bring up an interface --bug  1165966
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18372
  fields:
    type: testcase
    title: Starting interface without cable plugin - bug 844578
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18371
  fields:
    type: testcase
    title: define an interface with netmask > 24 and  all-ones netmask -- bug 848722,
      bug 1116314
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18370
  fields:
    type: testcase
    title: Define an interface when the same name interface exists - bug 681082
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-19172
  fields:
    type: testcase
    title: '[virtual disks][volume][iSCSI] Create domain with an iSCSI volume disk
      in iscsi source pool -  bug 957295'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-13206
  fields:
    type: testcase
    title: '[Graphical framebuffers] vnc and spice testing while set listen type=network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-19170
  fields:
    type: testcase
    title: '[virtual disks][block][sgio] lun device with sgio element tests - bug
      878578, 877527'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19177
  fields:
    type: testcase
    title: '[virtual disks][target bus] Start a guest with sata bus type disks'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19174
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][volume] Attach/detach disk with volume
      type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-13207
  fields:
    type: testcase
    title: '[graphical framebuffers] Start guests with conflicted ports for vnc/spice.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17564
  fields:
    type: testcase
    title: '[console and serial devices][console]forced console connection--Bug811497'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-13204
  fields:
    type: testcase
    title: '[Graphical framebuffers] vnc/spice support connected parameter while set
      password in guest''s xml-- Bug 707212, 852675'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-38282
  fields:
    type: heading
    title: Define domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-25939
  fields:
    type: testcase
    title: '[NFV] configure guest NUMA node locality for guest PCI devices -- bug
      1103314'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-25938
  fields:
    type: testcase
    title: '[NFV]Expose PCIe BW and lane information via nodedev-dumpxml -- bug1076962'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-38285
  fields:
    type: heading
    title: Shutdown domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-25937
  fields:
    type: testcase
    title: '[NFV] Expose interface speed and link information via API -bug 1076960'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NFV]
- model: caselink.workitem
  pk: RHEL7-38284
  fields:
    type: heading
    title: Destroy domain
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-13192
  fields:
    type: testcase
    title: '[Graphical framebuffers] spice migration with passwdValidTo  -bug 818041'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13193
  fields:
    type: testcase
    title: '[Graphical framebuffers] Check clipboard copypaste via spice'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17194
  fields:
    type: heading
    title: sVirt test for selinux
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-13191
  fields:
    type: testcase
    title: '[Graphical framebuffers] spice password ticketing and reset'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17192
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-13200
  fields:
    type: testcase
    title: 'Spice support to disable SPICE file transfer #BZ 1174859'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13195
  fields:
    type: testcase
    title: '[Migration] Seamless spice migration with graphic guest and windows spice
      client- bug 783968'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-13198
  fields:
    type: testcase
    title: '[Graphical framebuffers] Various spice channel testing - bug 819499 1143832'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-13201
  fields:
    type: heading
    title: VNC&SPICE
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Graphical framebuffers]
- model: caselink.workitem
  pk: RHEL7-17198
  fields:
    type: heading
    title: selinux testing with the static seclabel type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17199
  fields:
    type: heading
    title: sVirt test for dac
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17750
  fields:
    type: testcase
    title: '[USB][Hostdev][bootorder] Assign bootindex to usb-host and usb-redir devices
      -bug805414'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17751
  fields:
    type: testcase
    title: '[USB][Hostdev][startupPolicy] Support usb device with different policy
      - bug843560'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17752
  fields:
    type: testcase
    title: '[USB] [Hostdev] hotplug usb while disable virt_use_usb--bug 1111450'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17753
  fields:
    type: heading
    title: Redirected device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18197
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18196
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18195
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18194
  fields:
    type: heading
    title: Libvirt Test Plan - snmp
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-17758
  fields:
    type: heading
    title: USB Controller
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17759
  fields:
    type: testcase
    title: '[USB] [USB Controller]Pass multi usb contorllers unordered - bug 822159'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18199
  fields:
    type: heading
    title: 1. Capability of libvirt-snmp
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18198
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18203
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18202
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18201
  fields:
    type: heading
    title: 3.  Functional checkpoint list
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18200
  fields:
    type: heading
    title: 2.  Scenario table
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18759
  fields:
    type: testcase
    title: '[Virtual networks] Support bridging VMs without flood.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18758
  fields:
    type: testcase
    title: '[Virtual networks] Start autostarted virtual networks in background.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-38229
  fields:
    type: heading
    title: Valid/Invalid Arguments value testing
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38228
  fields:
    type: testcase
    title: '[guest agent] Execute the command via guest agent after logged into the
      graphical desktop of the guest - 1236924'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-18755
  fields:
    type: testcase
    title: '[Scalability][Virtual networks] Active-inactive virtual network loop for
      1000 times'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18754
  fields:
    type: testcase
    title: '[Virtual Networks] Attach interface with offloads.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18757
  fields:
    type: testcase
    title: '[Virtual networks] support TCP tunnel'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18208
  fields:
    type: testcase
    title: '[libvirt-snmp]libvirtMib_subagent will stop when request information after
      libvirtd restarted  - bug 736596'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18751
  fields:
    type: testcase
    title: '[virtual networks] Check the ''bridge'' mode for direct interface'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18750
  fields:
    type: testcase
    title: '[Virtual networks] Disable/enable offloads per virtio interface --bug1139364'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18753
  fields:
    type: testcase
    title: '[Virtual Networks] Forbid NIC offloads change on the fly using update-device'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18752
  fields:
    type: testcase
    title: '[Interface hotplug] attach interface, and then detach device. -- bug 872028'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-23850
  fields:
    type: testcase
    title: '[CPU management] Cope with more guest threads than host threads on POWER8  (bug
      1213713)'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-12663
  fields:
    type: testcase
    title: '[guest agent] The options of virsh domtime are checked properly'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12662
  fields:
    type: testcase
    title: '[guest agent] Check the domain time while the qemu-guest-agent service
      was unavaliable -bug 1147847'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-17288
  fields:
    type: testcase
    title: '[Migration]Bi-directional p2p migration between 2 hosts.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17289
  fields:
    type: testcase
    title: '[Migration] P2P migration with keepalive protocol - scenario 1'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-12667
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk-only snapshot with quiesce
      option with guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-12666
  fields:
    type: requirement
    title: Free and unfree domain's mounted file system with with qemu agent service
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12665
  fields:
    type: heading
    title: Freeze and unfreeze domain's mounted file system with qemu agent service
      (snapshot-create --quiesce, domfsfreeze, domfsthaw)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12664
  fields:
    type: testcase
    title: Use libvirt-guests service to  execute commands to sync guest time  -BZ\#
      1191227
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-17282
  fields:
    type: heading
    title: common checkpoints for all migration test
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17283
  fields:
    type: heading
    title: migration-P2P
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17280
  fields:
    type: heading
    title: For different virtual disk migration - updated in RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-12668
  fields:
    type: testcase
    title: '[guest agent] Freeze and thaw the domain''s mounted filesystems'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-17286
  fields:
    type: testcase
    title: '[Migration] P2P migration using TCP enabled URI without sasl'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17287
  fields:
    type: testcase
    title: '[Migration] P2P reverse migration with TLS enabled URI - bug 722738 970936'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17284
  fields:
    type: testcase
    title: '[Migration] Bi-directional live migration between 2 hosts.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17285
  fields:
    type: testcase
    title: '[Migration] P2P migration using a TLS enabled URI - Bug 721411'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16572
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit mixed with ''block'' disk type,
      ''network'' disk type  and ''file'' disk type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16571
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to base after creating
      external disk-snapshot with "file" disk type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17532
  fields:
    type: testcase
    title: '[console and serial devices][console]use non-root user to connect guest
      console - bug 700443'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-16577
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcopy after create external disk-only
      snapshot with guest source file based on NFS'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16576
  fields:
    type: requirement
    title: Blockcopy and Blockjob
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16575
  fields:
    type: heading
    title: Blockcopy and Blockjob - RHEV only
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16579
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcopy after create external disk-only
      snapshot with "file" disk type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16578
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcopy after create external disk-only
      snapshot with "block" disk type'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-18157
  fields:
    type: testcase
    title: '[Log and debugging] Starting libvirtd with libvirtd.conf containing an
      unterminated string - bug 728654'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Log and debugging]
- model: caselink.workitem
  pk: RHEL7-16629
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create external disk-only snapshot with quiesce
      option when guest agent is unreachable #BZ 808527'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16628
  fields:
    type: testcase
    title: '[Disk snapshot][External] Create disk-only snapshot for autodestroy domains
      #BZ 733806'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17534
  fields:
    type: testcase
    title: '[console and serial devices][serial]connection and operation to a serial
      via minicom tool'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-17378
  fields:
    type: testcase
    title: '[migration]Cross migration with I/O throttling'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17379
  fields:
    type: testcase
    title: '[migration]Cross migration with different CPU model'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17376
  fields:
    type: testcase
    title: '[migration]migration from RHEL7.X to RHEL7.Y which X > Y'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17377
  fields:
    type: testcase
    title: '[migration] Live migration between RHEL 6.y and RHEL7 - bug 1191567 1185167
      1252685'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-23988
  fields:
    type: testcase
    title: " Boot up guests on RHEL7.1 host\uFF0C then upgrade the host OS to RHEL7.2"
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-17375
  fields:
    type: testcase
    title: '[Migration]  Do live migration from rhel7.0 to rhel7.1 or later with pci
      0:0:2.0 not assign to video - bug 771603'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17372
  fields:
    type: testcase
    title: '[Migration]Negative testing for storage live migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17373
  fields:
    type: testcase
    title: '[migration]Live storage migration'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17370
  fields:
    type: testcase
    title: '[Migration] Migration with copy-storage-inc'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-17371
  fields:
    type: testcase
    title: '[storage] bandwidth limit for block copy/pull will fail if the value reach
      to max value - bug 927156'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16487
  fields:
    type: heading
    title: RBD-based storage volume
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16486
  fields:
    type: testcase
    title: '[storage][rbd pool] - rbd based storage pool -bug 1187533'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16485
  fields:
    type: heading
    title: RBD-based storage pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16916
  fields:
    type: testcase
    title: '[blkiotune] - Get or set blkio parameters'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16483
  fields:
    type: testcase
    title: '[virtual disks][authentication][ceph] hotplug/hotunplug rbd based disk
      with authentication enabled --BZ1045107'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16482
  fields:
    type: testcase
    title: '[virtual disks][authentication][ceph] Migrate vm with enabled authentication'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-16481
  fields:
    type: testcase
    title: '[snapshot][ceph] External snapshot with enabled authentication -BZ1171569'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16480
  fields:
    type: testcase
    title: '[virtual disks][authentication][ceph] Start vm with enabled authentication'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17170
  fields:
    type: testcase
    title: '[blkdeviotune] Get or set blkio parameters when the guest in shutoff status
      --bug 965016 969362'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17171
  fields:
    type: testcase
    title: '[blockjob]Options handle problem for blockjob command - bug 977678'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17172
  fields:
    type: testcase
    title: '[Storage] specify the disk during the rhel7 guest installation --Bug 980676'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17173
  fields:
    type: testcase
    title: '[create/start]create/start lxc container with fds'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17174
  fields:
    type: testcase
    title: '[domjobinfo] - Get information about jobs running on a domain  - Bug 1006864'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-17175
  fields:
    type: testcase
    title: '[attach-device] - libvirt should forbid to attach a device with boot order
      for the first time if the os/boot element exists - Bug 1007759'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16489
  fields:
    type: heading
    title: Authentication credentials for pool
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Ceph]
- model: caselink.workitem
  pk: RHEL7-16488
  fields:
    type: testcase
    title: '[storage][rbd pool] - volume operations in rbd pool -bug 1187533'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16627
  fields:
    type: testcase
    title: '[snapshot] libvirt should not leave stale snapshot metadata behind after
      domain disappears --bug 735457'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16626
  fields:
    type: testcase
    title: '[snapshot] libvirt should check for ABI compatibility of snapshots --bug
      738676'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-12719
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12718
  fields:
    type: testcase
    title: libvirt should use server-side filtering for event registration - BZ\#1054437
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-16625
  fields:
    type: testcase
    title: '[snapshot]  - libvirt should not attempt QMP commands that have not been
      documented in qemu.git BZ#872292'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-12713
  fields:
    type: testcase
    title: '[Libvirt domain event handler] Deliberately leading to domain I/O errors'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12712
  fields:
    type: testcase
    title: '[Libvirt domain event handler] Change the hwclock in the guest to check
      the rtc-change events'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12711
  fields:
    type: testcase
    title: '[libvirt  event domain handler] Setmem for guest to check balloon-change
      events - bug 822094'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12710
  fields:
    type: testcase
    title: '[Libvirt domain event handler] Running various watchdog action such as
      pause action to check watchdog events'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12717
  fields:
    type: testcase
    title: . Add support for QMP event notification when migration finishes - BZ\#1212077
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12716
  fields:
    type: testcase
    title: Attach/detach a device with xml to check device-add/device-remove events
      - BZ\#1206114
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12715
  fields:
    type: testcase
    title: '[libvirt domain event handler] Track issue in  event deregistration -
      bug 1020376'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-12714
  fields:
    type: testcase
    title: '[libvirt domain event handler] Bug 839661 - libvirt: support QMP event
      for S4'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirt domain event handler]
- model: caselink.workitem
  pk: RHEL7-18210
  fields:
    type: testcase
    title: '[libvirt-snmp]libvirt-snmp can use both -DTOKEN and -D TOKEN, man doc
      and libvirtMib_subagent help page are wrong. - bug 825623'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - snmp]
- model: caselink.workitem
  pk: RHEL7-18211
  fields:
    type: heading
    title: Libvirt Test Plan - Guest resource control
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-17422
  fields:
    type: testcase
    title: '[console and serial devices][channel]Migrate a guest with a virtio pty
      type channel'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-18212
  fields:
    type: heading
    title: Test Strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-17423
  fields:
    type: testcase
    title: '[virtual networks] Migrate with Bridged network, eth + macvtap + vepa
      --Bug 967389'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-16399
  fields:
    type: heading
    title: Libvirt Test Plan - NUMA
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - NUMA]
- model: caselink.workitem
  pk: RHEL7-18741
  fields:
    type: testcase
    title: '[virtual networks]Using a ipv6 DUID in <dhcp> in virual networks'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18214
  fields:
    type: heading
    title: Test Matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18747
  fields:
    type: testcase
    title: '[virtual networks] Check DNS server config for a virtual network.'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18216
  fields:
    type: heading
    title: Boot up guest with host device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest resource controll]
- model: caselink.workitem
  pk: RHEL7-18352
  fields:
    type: testcase
    title: '[network filter] Error messages produced in libvirtd.log when destroy
      the domain which has network filter --bug 903480'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-12907
  fields:
    type: heading
    title: Libvirt Test Plan - Domain async job handling
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-12904
  fields:
    type: heading
    title: Reference
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12902
  fields:
    type: testcase
    title: '[bios]Pass splash time for boot menu before going into grub or OS  --Bug
      1021703'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12903
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12900
  fields:
    type: testcase
    title: '[bios][OVMF] Use a pseudo-bootloader to boot a domain -- bug 1176050'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-12901
  fields:
    type: testcase
    title: '[bios]add new smbios information - bug 671326'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - BIOS]
- model: caselink.workitem
  pk: RHEL7-18513
  fields:
    type: testcase
    title: '[SR-IOV] Attach pci device with interface section without up PF - bug
      893738'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SRIOV]
- model: caselink.workitem
  pk: RHEL7-32052
  fields:
    type: testcase
    title: '[Migration] FC & NPIV'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Migration]
- model: caselink.workitem
  pk: RHEL7-12908
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.workitem
  pk: RHEL7-32051
  fields:
    type: testcase
    title: Check libvirt won't hot-unplug vcpu0  - bug 1202208
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-19617
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16981
  fields:
    type: testcase
    title: '[emulatorpin] control or query domain emulator affinity'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12878
  fields:
    type: testcase
    title: '[ACL]user access control for Secret API'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-12879
  fields:
    type: heading
    title: Objects about virStoragePoolPtr
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - ACL]
- model: caselink.workitem
  pk: RHEL7-17998
  fields:
    type: heading
    title: Known issues
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17999
  fields:
    type: testcase
    title: '[Node devices] Support for wireless NIC node device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17996
  fields:
    type: testcase
    title: '[node devices] the vfs should be clear up while there isn''t any vfs on
      the host  --bug 981546'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17997
  fields:
    type: testcase
    title: '[Node devices] Dump usb device xml info'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17994
  fields:
    type: testcase
    title: '[Node devices] Reattach a pci device which is using by guest to host -
      bug 603039'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17995
  fields:
    type: testcase
    title: '[Node devices] node driver should be back after reattach node device -
      bug 713697'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17992
  fields:
    type: heading
    title: nodedev-reattach
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17993
  fields:
    type: testcase
    title: '[Node devices] Reattach node device on host'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17990
  fields:
    type: testcase
    title: '[Node devices] Dettach node device from host -- bug 1019387 1035188'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-17991
  fields:
    type: testcase
    title: '[Host device assignment][PCI]  attach-detach-reattach node device for
      1000 rounds'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Node devices]
- model: caselink.workitem
  pk: RHEL7-18912
  fields:
    type: testcase
    title: '[RHEVM+NFS] Install a new guest with spice via Runonce in RHEVM'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-16979
  fields:
    type: testcase
    title: '[echo]echo arguments --bug 947789'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16978
  fields:
    type: testcase
    title: '[dump] virsh dump succeed with a directory which is not searchable by
      qemu - bug 738146'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16977
  fields:
    type: testcase
    title: '[dump] dump guest with physical device'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16976
  fields:
    type: testcase
    title: '[dump] - Dump the core of a domain to a file -bug 916061 924600'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16975
  fields:
    type: testcase
    title: '[dumpxml] - Get domain xml information'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16974
  fields:
    type: testcase
    title: '[domxml-to-native] - Convert domain XML to native config --bug 957077'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16973
  fields:
    type: testcase
    title: '[domxml-from-native] - Convert native guest configuration format to domain
      XML format - bug 783314'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16972
  fields:
    type: testcase
    title: '[domuuid] - Convert a domain name or id to domain UUID --bug 963161'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-20178
  fields:
    type: testcase
    title: a new option for not include features that block migration when get baseline
      via cpu-baseline - bug 1171484
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management]
- model: caselink.workitem
  pk: RHEL7-16970
  fields:
    type: testcase
    title: '[domstate --reason]domain state - watchdog bug 785623'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-16948
  fields:
    type: testcase
    title: '[domdisplay] - provides a URI for spice with ssl and password - bug 842272'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-12673
  fields:
    type: requirement
    title: show a list of mount filesystems within the running domain domfsinfo
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-16565
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from base to top after creating
      external disk-only snapshot with "network" disk type(iscsi) #BZ1144922'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16803
  fields:
    type: heading
    title: For sound devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16802
  fields:
    type: heading
    title: For general Input Output devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18568
  fields:
    type: testcase
    title: '[virtual disks][target bus][SCSI] Support scsi-block disk - bug 782034,
      801772, 721250'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18569
  fields:
    type: heading
    title: Boot VM from SCSI device as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-16807
  fields:
    type: heading
    title: video device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16806
  fields:
    type: heading
    title: Input type
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16805
  fields:
    type: heading
    title: Test scenarion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-16804
  fields:
    type: heading
    title: For Watchdog device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18562
  fields:
    type: heading
    title: SCSI virtual disk and hostdev cold plug/unplug
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18563
  fields:
    type: heading
    title: Cold-plug/unplug  SCSI disk to guest as hostdev
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18560
  fields:
    type: heading
    title: Attach 1024 scsi type virtual disks on one domain via attach-device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-16808
  fields:
    type: heading
    title: Sound devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual devices]
- model: caselink.workitem
  pk: RHEL7-18566
  fields:
    type: heading
    title: Cold-plug/unplug disk to guest as virtual disk
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18567
  fields:
    type: testcase
    title: '[virtual disk][target bus][SCSI]virtio-scsi support three optional elements
      --bug 1179684,bug 1173420'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18564
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Cold-plug iscsi device. - bug 1174053'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18565
  fields:
    type: testcase
    title: '[Host device assignment][SCSI] Support scsi-generic device [Passthrough]
      [NPIV] - bug 721250'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-17191
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-17578
  fields:
    type: heading
    title: Libvirt Test Plan - Scalability and Longevity
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17579
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18915
  fields:
    type: testcase
    title: '[RHEVM+NFS] Live snapshot create/merge with vm storage based on NFS #bug1206365'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17787
  fields:
    type: heading
    title: Integration testing
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-19072
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][post-operation] Migration after attach
      disk device to guest'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19583
  fields:
    type: testcase
    title: '[virtual disks] worldwide name (WWN) for storage need to be uniquely --bug
      1208009'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19582
  fields:
    type: testcase
    title: '[virtual disks] ensure virtual disk''s logical device name uniqueness
      --bug 1142631'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17611
  fields:
    type: testcase
    title: '[Scalability][Multiple domains] Check performance when ''cpu'' controller
      with many sub-groups created on large SMP systems -bug623712 - large machine'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-17610
  fields:
    type: testcase
    title: '[Scalability][Migration]Bi-directional migration 10 guests per side for
      looping 500 times  through TLS connection --tunnelled -bug807996'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-31711
  fields:
    type: testcase
    title: '[keepalive] keepalive support for virsh - 1073506 - scenario 4'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18914
  fields:
    type: testcase
    title: '[RHEVM+NFS]  vm should be working well with several snapshots BZ#903248'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17786
  fields:
    type: testcase
    title: '[USB][audio][controller]Support ich9-intel-hda audio device and ehci+uhci
      controllers - bug1003983,  Bug 1069590'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17617
  fields:
    type: testcase
    title: '[Scalability][Virtual networks] Define-undefine single virtual network
      loop for 1000 times'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-17616
  fields:
    type: testcase
    title: '[Scalability][One domain]Domain with maximum 37 usb disks per usb controller
      (coldplug)-bug807145, 808980'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Scalability and Longevity]
- model: caselink.workitem
  pk: RHEL7-18694
  fields:
    type: testcase
    title: '[Virtual Networks] deactivate network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18695
  fields:
    type: testcase
    title: '[Virtual Networks]define network - bug 1004627'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18696
  fields:
    type: testcase
    title: '[Virtual Networks] destroy network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18697
  fields:
    type: testcase
    title: '[Virtual Networks] IPv6 support in Isolated network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18690
  fields:
    type: testcase
    title: '[virtual networks] Bridged network, eth + macvtap + passthrough'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18691
  fields:
    type: testcase
    title: '[virtual networks] Bridged network, eth + macvtap + vepa'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18692
  fields:
    type: testcase
    title: '[Virtual Networks] Virtual networks can be started even if the network
      definition without ip section - Bug 532834'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18693
  fields:
    type: testcase
    title: '[Virtual Networks] create network -bug949915 949915 921777'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-16717
  fields:
    type: heading
    title: Secret and storage pool/volume encrytion
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16716
  fields:
    type: testcase
    title: '[Storage] Create a domain with volume in all type pools'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16715
  fields:
    type: testcase
    title: '[Storage][disk pool]check if the guest can be work well in disk pool with
      all supported format types'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16714
  fields:
    type: testcase
    title: '[Storage][negative] check guest status when overcommit the disk'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18368
  fields:
    type: testcase
    title: Get interface dumpxml
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18369
  fields:
    type: testcase
    title: Define an interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-16711
  fields:
    type: testcase
    title: '[Storage][negative] create volume in fs pool when no enough space left'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-16710
  fields:
    type: testcase
    title: '[storage][negative]Refresh pool after creating a storage file backed by
      network protocol lacking path --BZ1195156'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Storage]
- model: caselink.workitem
  pk: RHEL7-18364
  fields:
    type: heading
    title: Test matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18365
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18366
  fields:
    type: testcase
    title: Prompt ncftool help
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18367
  fields:
    type: testcase
    title: List interface
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18360
  fields:
    type: testcase
    title: '[Network filter]Clear error message when parsing invalid value of CTRL_IP_LEARNING
      in nwfilter --Bug 1071095'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - network filter]
- model: caselink.workitem
  pk: RHEL7-18361
  fields:
    type: heading
    title: Libvirt Test Plan - netcf
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18362
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-18363
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - netcf]
- model: caselink.workitem
  pk: RHEL7-19107
  fields:
    type: testcase
    title: '[virtual disks][discard] Enable discard support(write same/unmap mode)
      -- bug  821045'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19106
  fields:
    type: testcase
    title: '[virtual disks][discard] Enable discard support - bug 821045'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19105
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach an iscsi disk to/from
      guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19104
  fields:
    type: testcase
    title: '[virtual disks] Support disk file name with comma - bug 801970'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19103
  fields:
    type: testcase
    title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach a raw format
      disk device to guest'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19102
  fields:
    type: testcase
    title: '[virtual disks][driver type] Disk with qed format can not be added to
      guest BG 1024156'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19101
  fields:
    type: testcase
    title: '[virtual disks][target bus] scsi=on/off check for virtio lun and disk  -
      bug 756678'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19100
  fields:
    type: testcase
    title: '[virtual disks][network][nbd] Define/start/destroy/save/restore/snapshot
      a domain with nbd network disk'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-19109
  fields:
    type: testcase
    title: '[virtual disks] Create a domain with optional driver elements - bug 725448'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-31709
  fields:
    type: testcase
    title: '[keepalive] keepalive support for virsh - 1073506 - scenario 2'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-34449
  fields:
    type: testcase
    title: Define and start various storage pools on RHEL7.1 host, then upgrade the
      host OS...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-34448
  fields:
    type: testcase
    title: Define and start various virtual networks on RHEL7.1 host, then upgrade
      the host  OS to RHEL7.1.z, and then to RHEL7.2
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-34447
  fields:
    type: testcase
    title: '[libvirtd]Process will not fail when Race staring multiple libvirtd user
      sessions at the same time.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-34446
  fields:
    type: testcase
    title: '[libvirtd]Check libvirtd will not crash after reload it'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Libvirtd]
- model: caselink.workitem
  pk: RHEL7-34441
  fields:
    type: testcase
    title: Check machine types in virsh capabilities - bug 1229666
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Compatibility]
- model: caselink.workitem
  pk: RHEL7-17784
  fields:
    type: testcase
    title: '[USB][virtual device][usb-bot] Support usb-bot device -bug917702'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17765
  fields:
    type: testcase
    title: '[USB] [Hostdev] Attach usb disk to a guest with different usb controller.
      - bug 1175668'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17764
  fields:
    type: testcase
    title: '[USB] [USB Controller] Add usb controller to PCI bridge, attach usb disk
      to usb controller.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17767
  fields:
    type: testcase
    title: '[USB][virtual disks][target bus] USB 2.0 support in usb storage - bug
      836670, bug 861344, bug 1043436'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-17766
  fields:
    type: heading
    title: Virtual USB device
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17761
  fields:
    type: testcase
    title: '[USB] [USB Controller] support for usb controller (1.x/2.0/3.0) - bug
      836670, bug 877330, bug1259423 '
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17760
  fields:
    type: testcase
    title: '[USB] [USB Controller] USB companion controllers - bug820869, bug 1069590'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17763
  fields:
    type: testcase
    title: '[USB] [USB Controller] Attach the usb 2.0 device to usb 3.0 controller.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17762
  fields:
    type: testcase
    title: '[USB] [USB Controller] Cannot only using ich9-uhci1/2/3 model as usb controller
      model - BZ#877330'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-16623
  fields:
    type: testcase
    title: '[Disk snapshot][External][Negative Test]  Do save/snapshot  during block
      job is in mirror phase'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16622
  fields:
    type: testcase
    title: '[Disk snapshot][External][Negative Test] Libvirt can''t acquire state
      change lock after do blockjob --pivot before block copy job is finished BZ1134294'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16621
  fields:
    type: testcase
    title: '[Disk snapshot][External][Negative Test] Blockcopy job was cancel by "CTRL+C"
      while it show there still be one block job in background #BZ1135169'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16620
  fields:
    type: testcase
    title: '[Disk snapshot][External][Negative Test] Active commit will be cancelled
      by another commit #BZ1135339'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17769
  fields:
    type: testcase
    title: '[USB][virtual disks][target bus] Libvirt can not assign particular USB
      controller to USB disk in Domain. -bug 1046267, bug 1060390'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-17768
  fields:
    type: testcase
    title: '[USB][virtual disks][target bus][hotplug/unplug] Attach/Detach disks with
      usb bus type'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual disks]
- model: caselink.workitem
  pk: RHEL7-18919
  fields:
    type: testcase
    title: '[RHEVM+ISCSI] vm should be working well with several snapshots BZ#903248'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17783
  fields:
    type: testcase
    title: '[USB][virtual device][smartcard] Start a guest with smartcard and remove
      usb controller - bug 870003'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-18742
  fields:
    type: testcase
    title: '[virtual networks] Bridged network, eth + bridge'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18743
  fields:
    type: testcase
    title: '[virtual networks] Check macvtap private network'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18740
  fields:
    type: testcase
    title: '[virtual networks] Static Routes in virtual networks'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-19618
  fields:
    type: heading
    title: Test scenario
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18746
  fields:
    type: testcase
    title: '[virtual networks] Check guest''s network which interface type is ethernet.'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18461
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - PCI bridge]
- model: caselink.workitem
  pk: RHEL7-18744
  fields:
    type: testcase
    title: '[virtual networks] Check multicast messages'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18745
  fields:
    type: testcase
    title: '[virtual networks] check guest''s ip when interface type is ''user''.
      -  bug 1147238'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-19612
  fields:
    type: heading
    title: 'Related packages:'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-18748
  fields:
    type: testcase
    title: '[Virtual Networks]NAT virtual network doesn''t exclude multicast/broadcast
      networks --bug1033020'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-18749
  fields:
    type: testcase
    title: '[Virtual networks]Supply way to change path to tun/vhost devices per NIC
      --bug 1139362'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virtual networks]
- model: caselink.workitem
  pk: RHEL7-38230
  fields:
    type: heading
    title: Permission And Mode
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38231
  fields:
    type: heading
    title: Domain console
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-38232
  fields:
    type: heading
    title: Memory leak/error
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Virsh cmd - Confirmed]
- model: caselink.workitem
  pk: RHEL7-18969
  fields:
    type: testcase
    title: '[Memory management] forbid to set memory to ZERO - bug 1161461'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-16773
  fields:
    type: heading
    title: Memory Tuning
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Memory management]
- model: caselink.workitem
  pk: RHEL7-18027
  fields:
    type: testcase
    title: '[Host network interface management] Define a bridge interface contains
      a bond which contains two Ethernet'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - host network interface management]
- model: caselink.workitem
  pk: RHEL7-17513
  fields:
    type: heading
    title: Libvirt Test Plan - console and serial devices
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-18918
  fields:
    type: testcase
    title: '[RHEVM+ISCSI]Install a new guest in ISCSI with vnc in RHEVM'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - QE Consumption]
- model: caselink.workitem
  pk: RHEL7-17782
  fields:
    type: testcase
    title: '[USB][network/audio] add support for more usb devices - bug 861345'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - USB]
- model: caselink.workitem
  pk: RHEL7-12670
  fields:
    type: requirement
    title: Discard blocked which are not in use by the filesystem by virsh domfstrim
      comman...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12671
  fields:
    type: testcase
    title: '[guest agent] start FITRIM in the guest (via qemu-ga)  -bug 831159'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12672
  fields:
    type: heading
    title: Show a list of mounted filesystems within the running domain (domfsinfo)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-18543
  fields:
    type: heading
    title: SCSI controller support matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-12674
  fields:
    type: testcase
    title: Check the mount file system inside the guest with domfsinfo command - bug
      1222839
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12675
  fields:
    type: heading
    title: Get interface of a running domain along with IP and MAC addresses (domifaddr)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12676
  fields:
    type: requirement
    title: Get interface of a running domain along with ip and mac address with virsh
      domif...
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12677
  fields:
    type: testcase
    title: List all the ip address within the running guest with the domifaddr command
      via guest agent
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-12678
  fields:
    type: heading
    title: Report and set the count of cpus in the guest instead of the hypervisor
      (setvcpus/vcpucount --guest)
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Guest agent]
- model: caselink.workitem
  pk: RHEL7-18544
  fields:
    type: heading
    title: Virtual disk matrix
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - SCSI device]
- model: caselink.workitem
  pk: RHEL7-18983
  fields:
    type: testcase
    title: '[CPU Management] timebase is supported as default'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - CPU Management_PPC64LE_]
- model: caselink.workitem
  pk: RHEL7-17517
  fields:
    type: heading
    title: Test scenarios
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-16560
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from middle to top after creating
      external disk-only snapshot with "network" disk type(gluster)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16561
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from middle to base after creating
      external disk-only snapshot with "network" disk type(iscsi)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16562
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to base after creating
      external disk-only snapshot with "network" disk type(iscsi)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16563
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to middle after creating
      external disk-only snapshot with "network" disk type(iscsi)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16564
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockpull from middle to top after creating
      external disk-only snapshot with "network" disk type(iscsi)'
    automation: automated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17514
  fields:
    type: heading
    title: Test strategy
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-16566
  fields:
    type: testcase
    title: '[Disk snapshot][External] Returning the allocation watermark for all the
      images opened for writing during block-commit with iSCSI storage backend BZ1041569'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16567
  fields:
    type: testcase
    title: '[Disk snapshot][External] Returning the allocation watermark for all the
      images opened for writing during block-commit with NFS storage backend BZ1041569'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16568
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to baes after creating
      external disk-only snapshot with "block" disk type #BZ 1062142'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-16569
  fields:
    type: testcase
    title: '[Disk snapshot][External] Do blockcommit from top to base after creating
      external disk-only snapshot with "file" disk type #BZ 1062142'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Snapshot]
- model: caselink.workitem
  pk: RHEL7-17515
  fields:
    type: heading
    title: Proposed Cases
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - console and serial devices]
- model: caselink.workitem
  pk: RHEL7-38517
  fields:
    type: heading
    title: Selinux testing with various OS attributes
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - sVirt]
- model: caselink.workitem
  pk: RHEL7-12923
  fields:
    type: testcase
    title: '[Domain async job handling] migrate & domjobinfo'
    automation: notautomated
    commit: ''
    project: RHEL7
    maitai_id: ''
    archs: []
    documents: [Libvirt Test Plan - Domain async job handling]
- model: caselink.autocase
  pk: virtual_network.iface_ovs.net_ovs.default_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_ovs.net_ovs.ovs_portgroup.portgroup_42
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_ovs.net_ovs.ovs_portgroup.portgroup_4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_ovs.net_ovs.ovs_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.non_acl.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.non_acl.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.non_acl.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.non_acl.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.acl_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.acl_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.acl_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.normal_test.acl_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.shutdown_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.suspend.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.capabilities.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.capabilities.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.capabilities.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.pause_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.reboot_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.listen_address
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.diff_cpu_vendor
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.cpuset
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.timeout
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.track_statistics
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.default_cache_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.set_cache_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.with_hugepages
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.bi_directional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.iscsi.ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.iscsi.ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.stress.vm.iozone_with_set_max_downtime
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.stress.vm.memhog_memory_without_swap
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.stress.host.stress_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.stress.host.stress_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_migration.stress.host.netperf_network
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.basic.with_ssh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.basic.with_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.basic.with_tls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.bi_directional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.listen_address.with_ssh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.listen_address.with_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.listen_address.with_tls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.p2p_migration.with_keepalive_protocol.default_conf_less_than_keepalive_time
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.tunnelled_migration.basic.with_ssh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.tunnelled_migration.basic.with_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.tunnelled_migration.basic.with_tls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.tunnelled_migration.bi_directional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_nbd.nbd_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_gluster.gluster
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_gluster.rdma
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_ipv6.with_ssh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_ipv6.with_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_ipv6.with_tls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.eject_cdrom_in_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom.requisite_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom.optional_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom.mandatory_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_floppy.requisite_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_floppy.optional_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_floppy.mandatory_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom_and_floppy.requisite_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom_and_floppy.optional_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom_and_floppy.mandatory_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.attach_virtual_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.migration_with_devices.attach_virtual_nic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.vm_without_video
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.write_bytes_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.read_bytes_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.total_bytes_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.total_iops_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_watchdog.ib700
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_watchdog.i6300esb
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_smartcard.ccid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.SandyBridge
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Hasswell
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Westmere_no_xsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Nehalem_no_xsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Penryn_no_xsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Conroe_no_xsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G3_no_xsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G2_no_xsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G1_no_xsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_s3_s4.between_source_and_remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_storage_migration.simple
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_storage_migration.basic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_storage_migration.writethrough_driver_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_storage_migration.raw_to_qcow2_target_image_format.copy_storage_all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_storage_migration.raw_to_qcow2_target_image_format.copy_storage_inc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.positive_testing.live_storage_migration.backing_file_with_copy_storage_inc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.stop_libvirtd_remotely
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.disable_virt_use_nfs_remotely
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.noexist_xml
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.unprivileged_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.same_host_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.invalid_listen_address
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.abort_job
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.cancel_migration
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.restart_local_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.no_config_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.source_hugemem_less_than_vm_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.target_hugemem_less_than_vm_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.no_restart_target_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.p2p_migration.unreachable_destenation.with_ssh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.p2p_migration.unreachable_destenation.with_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.p2p_migration.unreachable_destenation.with_tls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.p2p_migration.invalid_listen_address.with_ssh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.p2p_migration.invalid_listen_address.with_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.p2p_migration.invalid_listen_address.with_tls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.tunnelled_migration.restart_local_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_storage_migration.no_create_target_image.simple
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_storage_migration.no_create_target_image.basic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_storage_migration.qcow2_to_raw_target_image_format.copy_storage_all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_storage_migration.qcow2_to_raw_target_image_format.copy_storage_inc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_storage_migration.mutually_exclusive_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_storage_migration.cancel_migration.copy_storage_all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.live_storage_migration.cancel_migration.copy_storage_inc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.rdma_migration.no_memory_hard_limit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.rdma_migration.no_rdma_env
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.rdma_migration.no_rdma_env_rdma_pin_all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.rdma_migration.no_rdma_env_turn_off_rdma_pin_all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.cross_rhel_platform_migration.with_disabled_device.sound_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_vm.negative_testing.cross_rhel_platform_migration.with_disabled_device.with_host_cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.half_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.half_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.half_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.half_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.same_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.same_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.same_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.running.same_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.half_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.half_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.half_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.half_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.same_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.same_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.same_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.config.shutoff.same_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.half_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.half_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.half_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.half_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.same_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.same_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.same_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.running.same_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.half_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.half_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.half_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.half_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.same_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.same_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.same_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.current.shutoff.same_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.half_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.half_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.half_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.half_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.same_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.same_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.same_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live.same_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.half_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.half_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.half_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.half_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.same_mem.domname.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.same_mem.domname.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.same_mem.domuuid.dom_arg_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.normal_test.live_and_config.same_mem.domuuid.dom_opt_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.empty_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.empty_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.empty_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.empty_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.empty_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.zero_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.zero_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.zero_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.zero_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.zero_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.small_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.small_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.small_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.small_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.small_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.big_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.big_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.big_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.big_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.big_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.double_mem.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.double_mem.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.double_mem.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.double_mem.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.double_mem.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.missing_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.missing_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.missing_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.missing_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.running.missing_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.empty_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.empty_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.empty_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.empty_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.empty_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.zero_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.zero_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.zero_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.zero_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.zero_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.small_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.small_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.small_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.small_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.small_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.big_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.big_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.big_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.big_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.big_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.double_mem.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.double_mem.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.double_mem.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.double_mem.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.double_mem.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.missing_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.missing_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.missing_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.missing_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmaxmem.error_test.addtional_args.missing_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.normal_test.save_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.normal_test.managedsave_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.normal_test.migrate_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.shut_off_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.no_job_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobabort.error_test.restore_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.no_mem_backend.topology.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.no_mem_backend.no_topo.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.topology.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.topology.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.topology.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.topology.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.topology.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.topology.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.topology.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.no_topo.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.no_topo.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.no_topo.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.no_topo.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.no_topo.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.no_topo.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.no_hugepage.mem_backend.no_topo.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.topology.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.2M.no_topo.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.topology.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.1G.no_topo.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.topology.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.per_node.16M.no_topo.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.topology.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.no_numatune_memnode.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.no_numatune_memnode.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.numatune_memnode.m_strict.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.numatune_memnode.m_strict.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.numatune_memnode.m_preferred.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.numatune_memnode.m_preferred.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.numatune_memnode.m_interleave.numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.possitive_test.hugepage.host_total.no_topo.numatune_memnode.m_interleave.no_numatune_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_numa.negative_test.strict_memnode_insufficent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_table.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_table.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_table.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_name.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_name.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_name.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_uuid.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_uuid.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_uuid.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_none.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_none.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_title.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_title.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_valid_options.list_title.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_invalid_options.invalid_string
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_invalid_options.vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_invalid_options.vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.normal_test.with_invalid_options.vm_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_table.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_table.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_table.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_name.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_name.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_name.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_uuid.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_uuid.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_uuid.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_none.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_none.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_title.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_title.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_transient_domains.with_valid_options.list_title.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_table.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_table.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_table.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_name.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_name.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_name.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_uuid.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_uuid.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_uuid.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_none.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_none.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_title.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_title.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.list_persistent_domains.with_valid_options.list_title.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_managed_save.with_valid_options.list_table.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_table.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_table.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_table.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_name.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_name.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_name.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_uuid.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_uuid.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_uuid.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_none.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_none.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_title.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_title.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.remote.with_valid_options.list_title.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_table.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_table.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_table.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_name.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_name.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_name.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_uuid.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_uuid.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_uuid.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_none.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_none.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_title.inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_title.all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.list.special_test.with_libvirt_off.with_valid_options.list_title.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.under_stress.stress_in_vm.memory.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.under_stress.stress_in_vm.vcpu.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.under_stress.stress_on_host.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.under_stress.vm_operations.inject_nmi.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.under_stress.vm_operations.dump.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.under_stress.vm_operations.suspend_resume.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.under_stress.vm_operations.save_restore.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_utc.no_stress.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_timezone.no_stress.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_variable.no_stress.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.no_timer.offset_localtime.no_stress.test_timers_in_vm.linux_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.kvmclock.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.hpet.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.pit.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.rtc.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_mix.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_mix.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_mix.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.pit_rtc.present_mix.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_mix.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_mix.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_mix.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.multi_timers.hpet_tsc.present_mix.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.tsc.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_no.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_no.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_no.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_no.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_yes.offset_utc.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_yes.offset_timezone.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_yes.offset_variable.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: timer_management.specific_timer.platform.present_yes.offset_localtime.no_stress.test_specific_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_source_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_txmode_iothread
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_txmode_timer
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_queues_positive.modify_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_queues_positive.attach_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_queues_negative
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_vhost.error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_vhost.with_vhost_net
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_driver.driver_vhost.without_vhost_net
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_offloads.attach_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_offloads.update_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_type.type_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_type.type_mcast
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_unprivileged_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_vhost.mode_bridge
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_vhost.mode_vepa
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_vhost.mode_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_vhost.mode_passthrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_qemu.mode_bridge
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_qemu.mode_vepa
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_qemu.mode_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_macvtap.driver_qemu.mode_passthrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_backend.default_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_backend.specific_backend
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_options.iface_backend.error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.non_acl.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.non_acl.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.acl_test.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.acl_test.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.download.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.upload.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.upload.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.upload.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.upload.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.upload.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.dir_pool.upload.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.non_acl.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.non_acl.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.acl_test.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.acl_test.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.download.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.upload.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.upload.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.upload.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.upload.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.upload.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.fs_pool.upload.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.non_acl.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.non_acl.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.acl_test.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.acl_test.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.download.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.upload.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.upload.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.upload.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.upload.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.upload.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.disk_pool.upload.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.non_acl.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.non_acl.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.acl_test.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.acl_test.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.download.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.upload.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.upload.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.upload.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.upload.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.upload.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.logical_pool.upload.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.non_acl.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.non_acl.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.acl_test.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.acl_test.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.download.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.upload.non_acl.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.upload.non_acl.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.upload.non_acl.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.upload.acl_test.0-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.upload.acl_test.1024-end
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.download_upload.netfs_pool.upload.acl_test.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.only_download.iscsi_pool.0-1024
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.only_download.iscsi_pool.1024-4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_download_upload.only_download.iscsi_pool.no_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.bridge_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.dnsmasq_test.net_dns_forward
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.dnsmasq_test.net_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.dnsmasq_test.net_host_ip
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.dnsmasq_test.net_dhcp_range
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.dnsmasq_test.net_dns_host
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.qos_test.qos_option_bandwidth.positive_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.qos_test.qos_option_bandwidth.negtive_start_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.qos_test.qos_option_bandwidth.negtive_remove_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_forward.net_isolated
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_forward.net_nat
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_forward.net_route
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_forward.route_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_pxe
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_macvtap.error_test.start_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_macvtap.error_test.define_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_macvtap.net_bridge.default_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_macvtap.net_bridge.multi_guests
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_macvtap.net_passthrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_macvtap.net_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_portgroup.default_portgroup
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_portgroup.specific_portgroup
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_network.net_portgroup.overwriting_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.offline.positive_test.cpu_list.cpu_list_x
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.offline.positive_test.cpu_list.cpu_list_x-y
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.offline.positive_test.cpu_list.cpu_list_comma
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.offline.positive_test.cpu_list.cpu_list_exclude
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.offline.positive_test.multi_dom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.cpu_list.cpu_list_x
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.cpu_list.cpu_list_x-y
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.cpu_list.cpu_list_comma
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.cpu_list.cpu_list_exclude
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.cpu_list.cpu_list_r
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.dom_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.positive_test.multi_dom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.no_dom_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.dom_name_space
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.dom_not_exists
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.live_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.config_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.live_when_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.out_of_cpu_maxmum
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpupin.online.negative_test.negative_cpu_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: macvtap.VEPA
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: macvtap.Bridge
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: macvtap.Private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: macvtap.Passthrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_preferred_undefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.get_emulatorpin_parameter.running_guest.emulatorpin_options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.get_emulatorpin_parameter.running_guest.emulatorpin_options.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.get_emulatorpin_parameter.running_guest.emulatorpin_options.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.get_emulatorpin_parameter.shutoff_guest.emulatorpin_options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.get_emulatorpin_parameter.shutoff_guest.emulatorpin_options.config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.get_emulatorpin_parameter.shutoff_guest.emulatorpin_options.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.config.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.config.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.config.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.config.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.config.auto_placement
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.shutoff_guest.cpulist.emulatorpin_options.current.auto_placement
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.live.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.live.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.live.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.live.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.positive_testing.set_emulatorpin_parameter.running_guest.cpulist.emulatorpin_options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.get_emulatorpin_parameter.running_guest.emulatorpin_options.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.get_emulatorpin_parameter.shutoff_guest.emulatorpin_options.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.get_emulatorpin_parameter.shutoff_guest.emulatorpin_options.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.live.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.live.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.live.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.live.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.live.noexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.config.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.config.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.config.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.config.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.config.noexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.running_guest.change_emulatorpin.emulatorpin_options.current.noexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.live.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.live.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.live.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.live.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.live.noexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.config.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.config.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.config.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.config.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.config.noexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.emulatorpin.negative_testing.set_emulatorpin_parameter.shutoff_guest.change_emulatorpin.emulatorpin_options.current.noexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.get_compcache.positive_test.live_vm.min_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.get_compcache.positive_test.paused_vm.min_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.get_compcache.negative_test.invalid_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.get_compcache.negative_test.shutoff_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.positive_test.live_vm.min_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.positive_test.live_vm.max_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.positive_test.paused_vm.min_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.positive_test.paused_vm.max_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.invalid_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.shutoff_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.invalid_size.nondigit_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.invalid_size.empty_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.invalid_size.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.invalid_size.small_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.invalid_size.large_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_compcache.set_compcache.negative_test.invalid_size.huge_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create_lxc.with_passfds.with_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create_lxc.with_passfds.with_console
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create_lxc.with_passfds.with_autodestroy_console
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_uuid.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_uuid.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_uuid.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_uuid.error_test.no_exist_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_uuid.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_uuid.error_test.extra_args_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.active.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.inactive.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.persistent.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.transient.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.running.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.paused.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.shutoff.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.no_option.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state_block.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state_block.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state_block.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.state_block.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total_vcpu.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total_vcpu.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total_vcpu.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.cpu_total_vcpu.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface_block_balloon.default_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface_block_balloon.default_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface_block_balloon.raw_print.not_enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.normal_test.domain_state.other.option.interface_block_balloon.raw_print.enforce.specific_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.error_test.invalid_name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstats.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_scsi.disk_type_img
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_scsi.disk_type_partition
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_scsi.disk_type_cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_scsi.multi_disk_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.normal_test.vm_running.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.normal_test.vm_running.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.normal_test.vm_running.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.normal_test.vm_paused.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.normal_test.vm_paused.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.normal_test.vm_paused.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.error_test.invalid_option.none_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.error_test.invalid_option.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.error_test.invalid_option.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.error_test.invalid_option.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.error_test.invalid_option.extra_parameter
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.ttyconsole.error_test.special_operation.vm_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.model_only.default_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.model_only.enable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.model_only.disable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.address_only.default_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.address_only.enable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.address_only.disable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.model_with_addr.default_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.model_with_addr.enable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.isa_model.model_with_addr.disable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.pseries_model.default_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.pseries_model.enable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.auto_dump.pseries_model.disable_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_update_vm_running.update_arp_rule
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sysinfo.normal_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sysinfo.normal_test.readonly_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sysinfo.error_test.without_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sysinfo.error_test.with_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.default_tls_port_and_auth_tls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.no_verify_certificate
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.no_sanity_checks_and_no_verify
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.customized_tls_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.allow_one_sasl_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.allow_sasl_users
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.allowed_dn_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.customized_ipv4_listen_address
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.customized_ipv4_listen_address_with_sasl_auth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.customized_ipv6_listen_address
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.customized_ipv6_tls_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.customized_ipv6_listen_address_with_sasl_auth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.positive_testing.customized_x509_cert_path
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.only_simpy_connect_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.invalid_tls_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.tls_port_in_use
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.tls_listen_addr_in_use
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.ipv4_with_allowed_sasl_user_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.no_sanity_checks_without_no_verify
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.allowed_dn_disorder_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.allowed_dn_list_with_invalid_organization
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.allowed_dn_list_with_invalid_CN
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.verify_certificate
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.incorrect_ipv4_listen_address
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.ipv6_with_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tls.negative_testing.ipv6_address_unreachable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.local.vm_t_dynamic.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.local.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.local.vm_t_static.s_qemu_group_user.per_img_relabel_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.local.vm_t_static.s_qemu_group_user.per_img_relabel_yes.per_img_qemu_grp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.nfs.vm_t_dynamic.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.nfs.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.nfs.vm_t_static.s_qemu_group_user.per_img_relabel_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.nfs.vm_t_static.s_qemu_group_user.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.file_disk.nfs.vm_t_static.s_qemu_group_user.per_img_relabel_yes.per_img_qemu_grp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.network_disk.iscsi.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.network_disk.gluster.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu_grp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.block_disk.lun.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_default.block_disk.disk.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.positive_test.model_none.file_disk.local.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.local.vm_t_dynamic.per_img_relabel_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.local.vm_t_dynamic.per_img_relabel_yes.per_img_qemu_grp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.local.vm_t_static.s_qemu.per_img_relabel_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.local.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu_grp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.local.vm_t_static.s_qemu.per_img_relabel_yes.invalid_per_img_label
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.local.vm_t_static.s_qemu_group_user.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.nfs.vm_t_dynamic.per_img_relabel_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.nfs.vm_t_dynamic.per_img_relabel_yes.per_img_qemu_grp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.nfs.vm_t_static.s_qemu.per_img_relabel_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_default.file_disk.nfs.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu_grp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_vm_per_image_start.negative_test.model_invalid.file_disk.local.vm_t_static.s_qemu.per_img_relabel_yes.per_img_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.portgroup.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.portgroup.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.portgroup.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.portgroup.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.bridge_t.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.bridge_t.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.bridge_t.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.bridge_t.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward_interface.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward_interface.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward_interface.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.forward_interface.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_range.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_range.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_range.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_range.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_host.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_host.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_host.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.modify.ip_dhcp_host.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.portgroup.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.portgroup.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.portgroup.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.portgroup.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.bridge_t.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.bridge_t.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.bridge_t.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.bridge_t.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward_interface.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward_interface.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward_interface.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.forward_interface.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_range.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_range.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_range.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_range.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_host.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_host.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_host.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.delete.ip_dhcp_host.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.portgroup.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.portgroup.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.portgroup.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.portgroup.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.bridge_t.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.bridge_t.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.bridge_t.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.bridge_t.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward_interface.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward_interface.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward_interface.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.forward_interface.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_range.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_range.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_range.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_range.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_host.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_host.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_host.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-last.ip_dhcp_host.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.portgroup.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.portgroup.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.portgroup.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.portgroup.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.bridge_t.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.bridge_t.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.bridge_t.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.bridge_t.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward_interface.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward_interface.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward_interface.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.forward_interface.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_range.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_range.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_range.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_range.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_host.net_active.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_host.net_active.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_host.net_inactive.options_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_update.add-first.ip_dhcp_host.net_inactive.options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.notimeout.nobase.no_async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.notimeout.base_snap_one.with_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.timeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.timeout.nobase.no_async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.timeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.timeout.base_snap_one.with_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.local.timeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.nfs.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.nfs.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.file_disk.nfs.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.iscsi.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.iscsi.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.iscsi.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_default.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_default.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_default.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_rdma.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_rdma.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_rdma.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_tcp.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_tcp.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_qcow2.transport_tcp.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_default.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_default.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_default.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_rdma.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_rdma.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_rdma.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_tcp.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_tcp.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.gluster.disk_raw.transport_tcp.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.ceph.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.ceph.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.network_disk.ceph.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.block_disk.notimeout.nobase.async
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.block_disk.notimeout.shallow
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.normal_test.block_disk.notimeout.base_snap_one.no_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.error_test.top_base
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.error_test.null_base_keep_relative
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockpull.error_test.snap_in_mirror
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.no_timeout.no_loop.list_all_events
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.no_timeout.no_loop.lifecycle_event
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.no_timeout.loop.list_all_events
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.no_timeout.loop.lifecycle_event
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.timeout.no_loop.list_all_events
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.timeout.no_loop.lifecycle_event
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.timeout.loop.list_all_events
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.positive_test.timeout.loop.lifecycle_event
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.negative_test.invalid_event
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_event.negative_test.invalid_timeout
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_edit.positive_test.use_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_edit.positive_test.use_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_edit.negative_test.invalid_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_edit.negative_test.invalid_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.negative_tests.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.mem_snap.show_secure_info.with_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.mem_snap.show_secure_info.without_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.mem_snap.without_secure_info.with_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.mem_snap.without_secure_info.without_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.disk_only_snap.show_secure_info.with_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.disk_only_snap.show_secure_info.without_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.disk_only_snap.without_secure_info.with_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.disk_only_snap.without_secure_info.without_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.shutoff_snap.show_secure_info.with_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.shutoff_snap.show_secure_info.without_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.shutoff_snap.without_secure_info.with_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_dumpxml.positive_tests.shutoff_snap.without_secure_info.without_passwd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.show_schedinfo.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.show_schedinfo.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.show_schedinfo.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_minimum.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_minimum.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_minimum.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_normal.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_normal.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_normal.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_maximum.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_maximum.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.normal_test.set_weight.value_maximum.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.invalid_options.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.invalid_options.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.invalid_options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.invalid_options.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.additional_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_weight.value_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_weight.value_invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_weight.value_negative
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_weight.value_zero
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_weight.value_exceed
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_xyz.value_valid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_xyz.value_invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_xen_credit.error_test.set_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.hostname.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.hostname.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.hostname.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_in_loop.shutdown_start_pause_resume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_in_loop.shutdown_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_in_loop.destroy_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_in_loop.pause_resume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.shutoff_test.wrong_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.shutoff_test.guest_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.shutoff_test.config_guest_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.shutoff_test.active_maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.shutoff_test.live_active_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.shutoff_test.live_maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.shutoff_test.live_guest_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.running_test.wrong_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.running_test.config_guest_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.negative_tests.running_test.active_maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.shutoff_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.shutoff_test.active_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.shutoff_test.maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.shutoff_test.current_active_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.shutoff_test.current_maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.active_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.current_active_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.current_maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.live_active_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.live_maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpucount.positive_tests.running_test.guest_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_virt_content.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_virt_content.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_virt_content.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_svirt_image_s0.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_svirt_image_MCS1.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_virt_clone.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.memtune
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.no_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.no_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.no_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_live_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_live_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_live_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_current_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_current_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.force_current_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.live_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.live_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.live_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.current_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.current_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.current_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.config_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.config_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.config_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.diff_iso_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.diff_iso_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.diff_iso_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.shareable_disk.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.shareable_disk.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.id_option.shareable_disk.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.name_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.name_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.name_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.pause_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.pause_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.pause_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.uuid_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.uuid_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.uuid_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.name_live_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.name_live_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.name_live_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.config_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.config_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.config_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.shut_off_option.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.shut_off_option.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.shut_off_option.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.offline_persistent.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.offline_persistent.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.offline_persistent.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.online_persistent.ide_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.online_persistent.scsi_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.normal_test.online_persistent.floppy_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device.error_test.shut_off_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirtd_start.with_iptables
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirtd_start.with_firewalld
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirtd_start.no_firewall
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.positive_test.no_hugepage.all_freepages
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.positive_test.no_hugepage.all_cells_each_page
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.positive_test.no_hugepage.each_cell_page
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.positive_test.default_hugepage.all_freepages
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.positive_test.default_hugepage.all_cells_each_page
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.positive_test.default_hugepage.each_cell_page
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.negative_test.mutually_exclusive_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.negative_test.out_of_range_cellno
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.negative_test.invalid_cellno
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freepages.negative_test.invalid_page_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.positive_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.positive_test.min_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.positive_test.max_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.positive_test.abort_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.positive_test.async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.positive_test.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.positive_test.info_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.negative_test.invalid_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.negative_test.invalid_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.negative_test.no_blockjob_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockjob.negative_test.no_blockjob_abort
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_attach.exist_iface.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.exist_iface.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.exist_iface.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.no_protocol.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.no_protocol.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.no_protocol.bond_type.no_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.dhcp_protocol.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.static_protocol.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.static_protocol.bridge_type.stp_on.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.static_protocol.bridge_type.stp_off.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.unuse_eth_cfg.vlan_type.unuse_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.unuse_eth_cfg.bond_type.unuse_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.no_acl.iface_no_attach.no_exist_iface.using_eth_cfg.vlan_type.using_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_attach.exist_iface.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.exist_iface.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.exist_iface.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.no_protocol.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.no_protocol.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.no_protocol.bond_type.no_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.dhcp_protocol.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.static_protocol.bridge_type.no_stp.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.static_protocol.bridge_type.stp_on.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.static_protocol.bridge_type.stp_off.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.unuse_eth_cfg.vlan_type.unuse_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.unuse_eth_cfg.bond_type.unuse_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_all.iface_no_attach.no_exist_iface.using_eth_cfg.vlan_type.using_eth.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.positive_test.grant_none.iface_no_attach.exist_iface.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.negative_test.api_write_save.iface_no_attach.exist_iface.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.negative_test.api_start.iface_no_attach.exist_iface.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.negative_test.api_stop.iface_no_attach.exist_iface.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface.acl_test.negative_test.api_delete.iface_no_attach.exist_iface.ethernet_type.net_no_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_running.default_network.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_running.default_network.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_running.default_network.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_running.exist_bridge.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_running.exist_bridge.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_running.exist_bridge.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_paused.default_network.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_paused.default_network.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_paused.default_network.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_paused.exist_bridge.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_paused.exist_bridge.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.normal_test.vm_paused.exist_bridge.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_unknow.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_unknow.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_unknow.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_unknow.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_none.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_none.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_unkown.type_none.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_unknow.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_unknow.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_unknow.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_unknow.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_none.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_none.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_iface.source_none.type_none.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_unknow.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_unknow.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_unknow.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_unknow.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_none.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_none.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_none.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.detach_iface.type_none.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_with_script.type_eth.non_exist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.attach_with_script.type_br.non_exist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface.error_test.vm_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domname.dom_arg_size_arg.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domname.dom_opt_size_opt.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domname.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domuuid.dom_arg_size_arg.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domuuid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domuuid.dom_opt_size_opt.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.half_mem.domuuid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domname.dom_arg_size_arg.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domname.dom_opt_size_opt.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domname.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domuuid.dom_arg_size_arg.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domuuid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domuuid.dom_opt_size_opt.cmd_flag_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.inactive.same_mem.domuuid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domid.dom_arg_size_arg.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domid.dom_opt_size_opt.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_arg_size_arg.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.save.before_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.save.after_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.managedsave.before_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.managedsave.after_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_opt_size_opt.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domname.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domuuid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domuuid.dom_arg_size_arg.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domuuid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domuuid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domuuid.dom_opt_size_opt.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.half_mem.domuuid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domid.dom_arg_size_arg.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domid.dom_opt_size_opt.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_arg_size_arg.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.save.before_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.save.after_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.managedsave.before_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.managedsave.after_setmem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_opt_size_opt.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domname.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domuuid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domuuid.dom_arg_size_arg.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domuuid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domuuid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domuuid.dom_opt_size_opt.cmd_flag_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.running.same_mem.domuuid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domname.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domname.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domname.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domuuid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domuuid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domuuid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.half_mem.domuuid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domname.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domname.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domname.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domname.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domuuid.dom_arg_size_arg.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domuuid.dom_arg_size_arg.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domuuid.dom_opt_size_opt.no_cmd_flag
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.valid_options.paused.same_mem.domuuid.dom_opt_size_opt.cmd_flag_current.manipulate_action.none.no_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.memballoon_option.none_model
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.memballoon_option.remove_driver
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.empty_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.empty_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.empty_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.empty_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.empty_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.zero_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.zero_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.zero_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.zero_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.zero_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.small_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.small_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.small_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.small_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.small_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.big_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.big_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.big_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.big_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.big_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.double_mem.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.double_mem.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.double_mem.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.double_mem.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.double_mem.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.missing_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.missing_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.missing_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.missing_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.shut_off.missing_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.empty_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.empty_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.empty_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.empty_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.empty_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.zero_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.zero_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.zero_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.zero_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.zero_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.small_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.small_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.small_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.small_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.small_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.big_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.big_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.big_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.big_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.big_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.double_mem.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.double_mem.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.double_mem.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.double_mem.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.double_mem.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.missing_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.missing_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.missing_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.missing_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.libvirtd_stop.missing_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.empty_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.empty_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.empty_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.empty_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.empty_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.zero_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.zero_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.zero_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.zero_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.zero_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.small_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.small_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.small_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.small_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.small_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.big_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.big_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.big_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.big_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.big_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.double_mem.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.double_mem.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.double_mem.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.double_mem.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.double_mem.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.missing_size.missing_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.missing_size.blank_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.missing_size.nonsense_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.missing_size.outrange_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_options.addtional_args.missing_size.bad_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_old_libvirt.dom_opt_size_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setmem.invalid_old_libvirt.dom_arg_size_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.normal_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.normal_test.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.error_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domid.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.no_vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.hex_vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.invalid_vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.invalid_vm_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.vm_shutdown
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.invalid_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.invalid_option_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.invalid_option_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.invalid_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.twice_diff_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.invalid_driver
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.invalid_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.non_exist_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.ide_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.invalid_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.host_block_vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.host_block_vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.vm_suspend
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.host_block_vm_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.image_file_no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.vm_shutdown_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.vm_shutdown_serial_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.vm_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.vm_shutdown_persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.vm_running_persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.twice_diff_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.twice_multifunction
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.cdrom_eject_control
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_type.file_disk_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_type.block_disk_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_type.block_disk_type_lun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_type.block_disk_type_logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.audit_check
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_image_format.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_image_format.qcow2_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.image_file_no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_sourcetype
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_cache.cache_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_cache.cache_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_cache.cache_writethrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_cache.cache_writeback
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_cache.cache_unsafe
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_cache.cache_directsync
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.no_vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.hex_vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.invalid_vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.invalid_vm_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.vm_shutdown
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.invalid_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.invalid_option_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.invalid_option_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.only_detach_disk.no_attach
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.error_test.only_detach_disk.no_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.host_block_vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.host_block_vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.vm_suspend
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.host_block_vm_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.image_file_no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.vm_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.vm_shutdown_persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.vm_running_persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.twice_diff_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.special_disk_name.local_disk_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.special_disk_name.attch_disk_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.audit_check
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.attach_disk_image_format.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk.detach_disk.normal_test.attach_disk_image_format.qcow2_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_what.kvm_fact
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.normal_test.vm_paused.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.normal_test.vm_paused.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.normal_test.vm_running.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.normal_test.vm_running.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.normal_test.vm_shutoff.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.error_test.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.error_test.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.error_test.additional_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.error_test.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domuuid.error_test.libvirtd_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.positive_test.option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.positive_test.option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.positive_test.option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.positive_test.option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.positive_test.option5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.positive_test.option6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.positive_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.negative_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.negative_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_stats.negative_test.invalid_start_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.show_schedinfo.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.show_schedinfo.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.show_schedinfo.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.config.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.config.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.config.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.live.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.live.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.live.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.current.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.current.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_cmd.current.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_xml.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_xml.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_negative.set_by_xml.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.config.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.config.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.config.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.live.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.live.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.live.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.current.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.current.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_cmd.current.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_xml.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_xml.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_zero.set_by_xml.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.config.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.config.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.config.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.live.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.live.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.live.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.current.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.current.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd.current.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_xml.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_xml.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_xml.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.config.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.config.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.config.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.live.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.live.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.live.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.current.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.current.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_cmd.current.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_xml.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_xml.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_xml.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.config.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.config.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.config.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.live.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.live.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.live.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.current.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.current.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_cmd.current.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_xml.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_xml.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_exceed.set_by_xml.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_normal.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_normal.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_normal.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_min.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_min.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_min.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_max.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_max.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period.value_max.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_negative.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_negative.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_negative.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_normal.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_normal.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_normal.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_min.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_min.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_min.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_max.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_max.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota.value_max.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.invalid_options.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.invalid_options.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.invalid_options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.invalid_options.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.additional_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_cpu_param.set_cpu_shares.value_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_cpu_param.set_cpu_shares.value_invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_emulator_param.set_emulator_period.value_negative
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_emulator_param.set_emulator_period.value_lower_than_min
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_emulator_param.set_emulator_period.value_higher_than_max
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_emulator_param.set_emulator_quota.value_lower_than_min
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_emulator_param.set_emulator_quota.value_higher_than_max
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_xyz.value_valid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_xyz.value_invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.schedinfo_qemu_posix.error_test.set_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create_as
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.normal_test.valid_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.normal_test.valid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.normal_test.valid_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.error_test.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.error_test.downtime_zero
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.error_test.none_downtime
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.error_test.extra_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.error_test.do_not_migrate
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_setmaxdowntime.error_test.vm_shutdown
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkerror.undefinded_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkerror.nospace_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.base.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.base.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.base.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.notimeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.base.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.base.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.base.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.no_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.base.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.base.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.base.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.notimeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.base.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.base.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.base.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.local.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.file_disk.nfs.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.iscsi.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_default.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_rdma.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_qcow2.transport_tcp.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_default.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_rdma.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.gluster.disk_raw.transport_tcp.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.network_disk.ceph.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.single_chain.block_disk.with_ga.timeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.nobase.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.nobase.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.nobase.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.shallow.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.shallow.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.shallow.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.base.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.base.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.base.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.base_as_middle.top_inactive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.base_as_middle.top_active.with_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.normal_test.multiple_chain.file_disk.local.no_ga.notimeout.base_as_middle.top_active.without_pivot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.error_test.vm_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.error_test.snap_in_mirror
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcommit.error_test.active_commit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.suspend_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.resume_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.destroy_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.start_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.crash_vm.oncrash_destroy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.crash_vm.oncrash_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.crash_vm.oncrash_preserve
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.crash_vm.oncrash_coredump_destroy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.normal_test.reason.crash_vm.oncrash_coredump_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.invalid_name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.with_libvirt_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domstate.error_test.kill_vm_after_stopping_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.positive_test.local_host.default_option_values
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.positive_test.local_host.auto_option_values
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.positive_test.remote_host.default_option_values
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.positive_test.remote_host.auto_option_values
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.negative_test.invalid_virttype
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.negative_test.invalid_emulatorbin
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.negative_test.invalid_arch
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcapabilities.negative_test.invalid_machine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.no_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_help
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_version
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_timeout_3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_timeout_3_live_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_pid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_invalid_timeout_short
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.functional.opt_invalid_timeout_long
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_config.dt_option_current.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live_config.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live_config.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_running.at_option_live_config.dt_option_live_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_current.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_current.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_current.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_default.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_default.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_default.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_default.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_default.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_config.dt_option_current.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live_config.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live_config.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_paused.at_option_live_config.dt_option_live_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_interface_matrix.pre_vm_state_transient.at_option_live_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.normal_test.pause_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.normal_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.normal_test.vm_attach_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.name_only_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkinfo.error_test.name_only_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.setvcpu_del.setvcpu_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.setvcpu_del.setvcpu_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.setvcpu_del.monitor_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.setvcpu_del.monitor_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.monitor_del.setvcpu_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.monitor_del.setvcpu_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.monitor_del.monitor_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.memory_stress.monitor_del.monitor_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.setvcpu_del.setvcpu_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.setvcpu_del.setvcpu_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.setvcpu_del.monitor_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.setvcpu_del.monitor_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.monitor_del.setvcpu_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.monitor_del.setvcpu_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.monitor_del.monitor_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.cpu_stress.monitor_del.monitor_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.setvcpu_del.setvcpu_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.setvcpu_del.setvcpu_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.setvcpu_del.monitor_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.setvcpu_del.monitor_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.monitor_del.setvcpu_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.monitor_del.setvcpu_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.monitor_del.monitor_add.online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.vcpu_hotplug.io_stress.monitor_del.monitor_add.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.with_holdtime
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.linux_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.os-x_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.os-x_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.at_set1_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.at_set2_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.at_set3_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.xt_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.xt_kbd_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.usb_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.win32_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.win32_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.rfb_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.non_acl.default_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.with_holdtime
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.linux_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.os-x_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.os-x_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.at_set1_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.at_set2_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.at_set3_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.xt_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.xt_kbd_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.usb_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.win32_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.win32_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.rfb_keycode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.params_test.acl_test.default_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.non_acl.help
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.non_acl.show_memory_usage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.non_acl.show_task_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.non_acl.reboot_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.acl_test.help
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.acl_test.show_memory_usage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.acl_test.show_task_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.sysrq.acl_test.reboot_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.sendkey.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.domainsnapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.network
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.storagepool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.storagevol
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.nodedev
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.capability
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.nwfilter
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_xml_validate.interface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.clear_emulator_capabilities.positive_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.clear_emulator_capabilities.positive_test.clear_caps
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.clear_emulator_capabilities.positive_test.no_clear_caps.priviledge_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.clear_emulator_capabilities.positive_test.no_clear_caps.default_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.clear_emulator_capabilities.negative_test.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_network_bandwidth.network
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_network_bandwidth.interface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_network_bandwidth.portgroup
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_root.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_root.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_root.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu_grp.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu_grp.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu_grp.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu_grp.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu_grp.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_qemu_grp.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.nfs_img_oth.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.positive_test.snapshot_nfs_backing.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_root.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu_grp.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu_grp.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu_grp.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu_grp.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu_grp.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_qemu_grp.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_oth.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_oth.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_oth.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_disk.negative_test.nfs_img_oth.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: guest_kernel_debugging.nmi_test.positive_testing.send_nmi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot.live.halt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot.live.no_halt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot.offline
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.port_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.port_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.port_65535
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.tlsport_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.tlsport_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.tlsport_65535
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.all_secure_channels
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.all_insecure_channels
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.only_secure_channels
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.only_insecure_channels
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.mixed_channels
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.spice_listen_all_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.spice_listen_all_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.spice_listen_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.spice_listen_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_address.override_spice_listen
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_address.all_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_address.all_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_address.ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_address.ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_network.network_vnet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_network.network_macvtap
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.listen_type_network.network_bridge
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.defaultMode_secure
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.defaultMode_secure_port_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.defaultMode_insecure_tlsPort_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.defaultMode_insecure
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.defaultMode_any
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.autoport_no.ports_not_set
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.autoport_no.spice_tls_disabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.autoport_no.tlsport_-2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.image_compression_auto_glz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.image_compression_auto_lz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.image_compression_quic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.image_compression_glz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.image_compression_lz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.image_compression_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.jpeg_compression_auto
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.jpeg_compression_never
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.jpeg_compression_always
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.zlib_compression_auto
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.zlib_compression_never
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.zlib_compression_always
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.playback_compression_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_only.playback_compression_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.no_autoport.port_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.no_autoport.port_65535
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_listen_all_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_listen_all_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_listen_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_listen_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_listen_non_exist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_address.override_vnc_listen
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_address.all_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_address.all_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_address.ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_address.ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_network.network_vnet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_network.network_macvtap
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.listen_type_network.network_bridge
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_tls_enabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_tls_disabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_tls_x509_verify_enabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_tls_x509_verify_disabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_auto_unix_socket_enabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.vnc_only.vnc_auto_unix_socket_disabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_vnc.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_vnc.listen_all_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_vnc.listen_all_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_vnc.listen_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_vnc.listen_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_vnc.listen_non_exist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.positive_tests.spice_vnc.listen_address_all_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.spice_tls_disabled_with_secure_channel
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.spice_tls_disabled_tlsport_set
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.default_secure_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.default_insecure_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.with_secure_channel
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.with_insecure_channel
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.with_both_channel
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.equal_ports_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.equal_ports_-2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.equal_ports_65536
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.equal_ports_65535
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.without_cert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.port_-2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.port_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.port_65536
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.tlsport_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.autoport_no.tlsport_65536
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.spice_listen_non_exist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_only.no_port_avail
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.vnc_only.no_autoport.port_-2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.vnc_only.no_autoport.port_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.vnc_only.no_autoport.port_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.vnc_only.no_autoport.port_65536
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.vnc_only.without_cert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.vnc_only.no_port_avail
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: graphics.functional.negative_tests.spice_vnc.no_port_avail
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.one_count.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.one_count.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.one_count.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.one_count.storage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_sub_1.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_sub_1.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_sub_1.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_sub_1.storage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum.storage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_add_1.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_add_1.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_add_1.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.qemu_monitor.maximum_add_1.storage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.attach_device.one_count.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.attach_device.one_count.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.attach_device.one_count.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_device.attach_device.one_count.storage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.auth_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.auth_usage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.non_auth.non_save_snapshot.ipv4_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.non_auth.non_save_snapshot.ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.non_auth.test_save_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.iothread
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.auth_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.auth_usage
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.non_auth.non_save_snapshot.ipv4_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.non_auth.non_save_snapshot.ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.non_auth.test_save_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.iothread
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.iscsi.iscsi_test.error_test.auth_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.file_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.file_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.file_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.file_dev.multi_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.file_dev.multi_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.file_dev.multi_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.sock_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.sock_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.sock_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.sock_dev.multi_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.sock_dev.multi_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.sock_dev.multi_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.pty_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.pty_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.pty_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.pty_dev.multi_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.pty_dev.multi_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.pty_dev.multi_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.all_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.all_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.qmp.all_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.file_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.file_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.file_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.file_dev.multi_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.file_dev.multi_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.file_dev.multi_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.sock_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.sock_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.sock_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.sock_dev.multi_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.sock_dev.multi_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.sock_dev.multi_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.pty_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.pty_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.pty_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.pty_dev.multi_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.pty_dev.multi_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.pty_dev.multi_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.all_dev.circle_test.load_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.all_dev.circle_test.load_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.serial_hotplug.at_dt_device.all_dev.circle_test.load_io
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.normal_test.non_acl.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.normal_test.non_acl.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.normal_test.non_acl.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.normal_test.acl_test.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.normal_test.acl_test.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.normal_test.acl_test.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.invalid_options.invalid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.invalid_options.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.invalid_options.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.invalid_options.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.invalid_options.none_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.special_operation.vm_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.special_operation.vm_shut_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.console.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.expected_option.non_acl.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.expected_option.non_acl.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.expected_option.non_acl.running_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.expected_option.acl_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.expected_option.acl_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.expected_option.acl_test.running_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.new_file_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.start_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.with_libvirt_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.restore.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_default.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_default.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_inactive.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_inactive.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_cpu.minimum_match.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_cpu.minimum_match.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_cpu.exact_match.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_cpu.exact_match.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_cpu.strict_match.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_cpu.strict_match.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_security.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_shutoff.with_security.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_running.with_default.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_running.with_default.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_running.with_default.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_running.with_inactive.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_running.with_inactive.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_running.with_inactive.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_paused.with_default.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_paused.with_default.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_paused.with_default.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_paused.with_inactive.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_paused.with_inactive.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.non_acl.vm_paused.with_inactive.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_default.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_default.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_inactive.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_inactive.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_cpu.minimum_match.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_cpu.minimum_match.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_cpu.exact_match.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_cpu.exact_match.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_cpu.strict_match.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_shutoff.with_cpu.strict_match.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_running.with_default.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_running.with_default.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_running.with_default.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_running.with_inactive.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_running.with_inactive.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_running.with_inactive.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_paused.with_default.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_paused.with_default.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_paused.with_default.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_paused.with_inactive.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_paused.with_inactive.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_none.vm_paused.with_inactive.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_read_secure.vm_shutoff.with_security.domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.normal_test.acl_test.grant_read_secure.vm_shutoff.with_security.domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.none_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.invalid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.additional_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.not_exist_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dumpxml.error_test.acl_test.security_info
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.non_acl.mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.non_acl.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.non_acl.hybrid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.non_acl.managedsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.non_acl.save_restore
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.non_acl.suspend_resume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.acl_test.mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.acl_test.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.acl_test.hybrid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.acl_test.managedsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.positive_test.acl_test.suspend_resume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.vm_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.vm_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.pm_not_set
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.pm_disabled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.agent_not_respond
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.pm_hybrid.target_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.pm_hybrid.target_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.pm_hybrid.target_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dompmsuspend.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_dumpxml.normal_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_dumpxml.normal_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_dumpxml.error_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_dumpxml.error_test.none_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.quiesce_without_diskonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.reuse_external_with_bad_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.reuse_external_with_DAC_denial
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.incompatible_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.quiesce_without_ga.pause_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.quiesce_without_ga.running_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.autodestroy_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.quiesce_without_unix_channel
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.invalid_compress_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.internal_snap_on_external_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.network_disk.iscsi.device_lun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.network_disk.iscsi.with_snapshot_attr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.network_disk.gluster.with_snapshot_attr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.negative_tests.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.name_with_double_dash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.check_libvirtd_log
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.quiesce_with_diskonly.no_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.atomic_with_diskonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.live_memspec.compress_format.raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.live_memspec.compress_format.xz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.live_memspec.compress_format.lzop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.live_memspec.compress_format.gzip
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.live_memspec.compress_format.bzip2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.no_metadata
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.no_metadata_with_diskonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.no_metadata_with_memspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.multi_snapshots
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.memspec_diskspec_xml
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.multi_diskspec_xml
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.no_snapshot_attr.multi_diskspec_no_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.file_disk.with_snapshot_attr.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_default.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_default.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_default.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_default.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_rdma.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_rdma.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_rdma.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_rdma.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_tcp.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_tcp.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_tcp.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.no_snapshot_attr.transport_tcp.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_qcow2.with_snapshot_attr.transport_default.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_default.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_default.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_default.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_default.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_rdma.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_rdma.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_rdma.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_rdma.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_tcp.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_tcp.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_tcp.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.gluster.disk_raw.transport_tcp.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.iscsi.device_default.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.iscsi.device_default.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.iscsi.device_default.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.non_acl.network_disk.iscsi.device_default.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.name_with_double_dash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.disk_only_spec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.check_libvirtd_log
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.quiesce_with_diskonly.no_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.quiesce_with_diskonly.with_diskspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.atomic_with_diskonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.live_memspec.compress_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.live_memspec.compress_format.raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.live_memspec.compress_format.xz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.live_memspec.compress_format.lzop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.live_memspec.compress_format.gzip
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.live_memspec.compress_format.bzip2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.no_metadata
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.no_metadata_with_diskonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.no_metadata_with_memspec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.multi_snapshots
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.memspec_diskspec_xml
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.multi_diskspec_xml
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.multi_disk_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_create_as.positive_tests.acl_test.file_disk.no_snapshot_attr.multi_diskspec_no_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.non_acl.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.non_acl.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.non_acl.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.non_acl.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.non_acl.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.non_acl.graceful
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.acl_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.acl_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.acl_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.acl_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.acl_test.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.normal_test.acl_test.graceful
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.shutdown_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.destroy.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.bandwidth.min.byte
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.bandwidth.min.mebibyte
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.bandwidth.max.byte
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.bandwidth.max.mebibyte
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.mirror_state_lock
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.local_disk.no_blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_local.no_blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.nfs_disk.dest_nfs.no_blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.block_type.blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.lun_t.network_type.blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.mirror_state_lock
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.block_type.no_blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.mirror_state_lock
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.network_type.no_blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.mirror_state_lock
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.non_acl.block_disk.disk_t.volume_type.no_blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.reuse_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.raw_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.pivot_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.finish_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.pivot_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.positive_test.acl_test.local_disk.no_blockdev.no_shallow.finish_async_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.timeout_check
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.invalid_external_dest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.invalid_bandwidth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.invalid_timeout
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.miss_wait_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.invalid_mix_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.persistent_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.active_job.with_snap
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.active_job.with_save
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.block_lun.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.block_lun.network_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.shallow_raw.blockdev
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.shallow_raw.no_blockdev
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockcopy.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_virt_content.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_virt_content.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_svirt_image_s0.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_svirt_image_MCS1.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.positive_test.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_undefine_define.negative_test.disk_label_virt_content.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.restart_consist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.kvm_info.vm_running.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.kvm_info.vm_running.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.kvm_info.vm_running.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.kvm_info.vm_paused.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.kvm_info.vm_paused.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.kvm_info.vm_paused.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.cpus_info.vm_running.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.cpus_info.vm_running.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.cpus_info.vm_running.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.cpus_info.vm_paused.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.cpus_info.vm_paused.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.cpus_info.vm_paused.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.mem_info.vm_running.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.mem_info.vm_running.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.mem_info.vm_running.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.mem_info.vm_paused.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.mem_info.vm_paused.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.hmp_option.mem_info.vm_paused.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.qmp_option.vm_running.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.qmp_option.vm_running.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.qmp_option.vm_running.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.qmp_option.vm_paused.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.qmp_option.vm_paused.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.qmp_option.vm_paused.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.pretty_qmp.vm_running.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.pretty_qmp.vm_running.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.pretty_qmp.vm_running.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.pretty_qmp.vm_paused.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.pretty_qmp.vm_paused.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.normal_test.pretty_qmp.vm_paused.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.invalid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.none_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.invalid_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.unknown_cmd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.invalid_options.invalid_qmp_cmd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_command.error_test.vm_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.positive_tests.full_freeze
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.positive_tests.no_freezed_fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.negative_tests.no_qemu_guest_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.negative_tests.no_start_qemu_guest_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.negative_tests.not_active_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.negative_tests.no_domain_ref
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.negative_tests.invalid_mountpoint
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfsthaw.negative_tests.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.unattended_install.cdrom.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.unattended_install.cdrom.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.unattended_install.cdrom.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.unattended_install.cdrom.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.unattended_install.cdrom.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.disk_attach.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.disk_attach.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.disk_attach.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.disk_attach.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume_application.disk_attach.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.id_option.no_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.id_option.no_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.id_option.paused_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.id_option.paused_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.id_option.running_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.id_option.running_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.normal_option.no_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.normal_option.no_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.normal_option.paused_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.normal_option.paused_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.normal_option.running_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.normal_option.running_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.paused_option.no_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.paused_option.no_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.paused_option.paused_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.paused_option.paused_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.paused_option.running_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.paused_option.running_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.uuid_option.no_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.uuid_option.no_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.uuid_option.paused_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.uuid_option.paused_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.uuid_option.running_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.uuid_option.running_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.acl_test.no_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.acl_test.no_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.acl_test.paused_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.acl_test.paused_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.acl_test.running_option.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.normal_test.acl_test.running_option.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.shut_off_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.only_name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.libvirtd_stop_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.logical_pool.normal_vol
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.logical_pool.thin_vol
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.logical_pool.snapshot_vol
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.logical_pool.deactivate_vol
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.logical_pool.incomplete_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_none.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_none.pool_format_gpt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_linux.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_fat16.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_fat32.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_linux-swap.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_linux-lvm.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_linux-raid.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.disk_pool.vol_format_extended.pool_format_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_raw.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_raw.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_raw.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_raw.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_prealloc.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_prealloc.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_prealloc.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_prealloc.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2v3.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2v3.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2v3.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2v3.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_compat.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_compat.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_compat.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_compat.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qed.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qed.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qed.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qed.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_iso.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_iso.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_iso.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_iso.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk_v4.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk_v4.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk_v5.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk_v5.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vpc.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vpc.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vpc.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vpc.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_none.src_pool_type.dir.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_none.src_pool_type.dir.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_none.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.positive_test.fs_like_pool.vol_format.v_none.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.unsupported_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.iscsi_pool_without_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.scsi_pool_without_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_pool_overcommit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.nfs_pool_malformed_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_raw.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_raw.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_raw.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_qed.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_qed.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_qed.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_bochs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_bochs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_bochs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_cloop.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_cloop.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_cloop.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_dmg.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_dmg.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_dmg.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_iso.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_iso.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_iso.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_vmdk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_vmdk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_vmdk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_vpc.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_vpc.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_vpc.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_none.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_none.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.fs_like_pool_with_prealloc.none_qcow2_format.v_none.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_raw.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_raw.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_raw.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2v3.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2v3.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2v3.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2_with_compat.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2_with_compat.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qcow2_with_compat.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qed.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qed.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.none_fs_like_pool_with_format.vol_format.v_qed.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.id_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.id_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.id_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.name_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.name_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.name_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.suspend_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.suspend_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.suspend_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.uuid_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.uuid_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.uuid_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.remote_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.remote_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.remote_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.acl_test.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.acl_test.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.normal_test.acl_test.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.shutdown_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.shutdown.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.undefine_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.define_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.build_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.start_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.destroy_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.refresh_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.vol_list_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.delete_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.dir_pool.list_dumpxml_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_disk.undefine_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_disk.define_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_disk.build_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_disk.start_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_disk.destroy_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_disk.vol_list_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_fs.undefine_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_fs.define_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_fs.build_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_fs.start_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_fs.destroy_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_fs.vol_list_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_logical.undefine_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_logical.define_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_logical.build_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_logical.start_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_logical.destroy_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_logical.vol_list_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_netfs.undefine_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_netfs.define_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_netfs.build_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_netfs.start_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_netfs.destroy_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_netfs.vol_list_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_iscsi.undefine_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_iscsi.define_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_iscsi.build_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_iscsi.start_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_iscsi.destroy_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.positive_test.non_dir_pool.pool_type_iscsi.vol_list_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.undefine_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.define_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.build_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.start_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.destroy_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.refresh_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.vol_list_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_acl.negative_test.delete_acl.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_net.no_config.domain_name.running_guest.domif_setlink.setlink_up
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_net.no_config.domain_name.running_guest.domif_setlink.setlink_down
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_net.no_config.domain_ID.running_guest.domif_setlink.setlink_up
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_mac.no_config.domain_name.running_guest.domif_setlink.setlink_up
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_mac.no_config.domain_name.running_guest.domif_setlink.setlink_down
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_mac.no_config.domain_name.shutoff_guest.domif_setlink.setlink_up
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_mac.no_config.domain_name.shutoff_guest.domif_setlink.setlink_down
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_mac.no_config.domain_UUID.shutoff_guest.domif_setlink.setlink_up
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_mac.with_config.domain_name.running_guest.domif_setlink.setlink_up
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.positive_test.interface_mac.with_config.domain_name.running_guest.domif_setlink.setlink_down
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.multi_functional_test.check_update_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.multi_functional_test.check_options_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.running_guest_invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.shutoff_guest_with_vnet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.config_option_with_vnet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_exist_device.with_config_option.no_exist_interface_net
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_exist_device.with_config_option.no_exist_interface_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_exist_device.without_config_option.no_exist_interface_net
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_exist_device.without_config_option.no_exist_interface_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.error_operation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_operation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_match_domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.no_match_domain_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domif_setlink_getlink.negative_test.without_domain_param
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.multi_disks_test.virtio_disks_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.multi_disks_test.disks_bootorder_error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.multi_disks_test.disk_virtio_iothread.attach_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.multi_disks_test.disk_virtio_iothread.attach_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disk_scsi_block_size.block_size_4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disk_scsi_block_size.block_size_512
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disk_scsi_block_size.file_image_on_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disk_virtio_block_size.block_size_4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disk_virtio_block_size.block_size_512
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disk_readonly_nfs_raw.attach_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disk_readonly_nfs_raw.at_dt_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.hotplug.single_disk_test.disks_startup_policy.disk_bus_scsi.normal_test.optional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.virtio_disks_order
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.virtio_disks_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.disks_bootorder
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.disk_virtio_scsi_multi_queue
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.disk_virtio_iothread.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.disk_virtio_iothread.error_test.ide_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.disk_virtio_iothread.error_test.dom_iothreads.num_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.multi_disks_test.disk_virtio_iothread.error_test.dom_iothreads.num_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_scsi_block_size.block_size_4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_scsi_block_size.block_size_512
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_scsi_block_size.file_image_on_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_virtio_block_size.block_size_4096
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_virtio_block_size.block_size_512
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_type_dir.disk_bus_ide
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_type_dir.disk_bus_fdc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_discard_unmap
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_discard_ignore
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_copy_on_read_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_copy_on_read_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_serial_wwn.test_serial_wwn.disk_bus_ide
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_serial_wwn.test_serial_wwn.disk_bus_scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_serial_wwn.test_vendor_product.disk_bus_scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_bootorder_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.ioeventfd_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.ioeventfd_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.scsi_ioeventfd.with_controller_model.error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.scsi_ioeventfd.with_controller_model.ioeventfd_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.scsi_ioeventfd.with_controller_model.ioeventfd_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.scsi_ioeventfd.without_controller_model.error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.scsi_ioeventfd.without_controller_model.ioeventfd_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_options.scsi_ioeventfd.without_controller_model.ioeventfd_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_with_iface.disk_iface_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_with_iface.disk_iface_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_with_iface.disk_iface_option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_with_iface.disk_iface_option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_with_iface.disk_iface_save_restore
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_snapshot.disk_snapshot_external.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_snapshot.disk_snapshot_external.error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_snapshot.disk_snapshot_no.error_test1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_snapshot.disk_snapshot_no.error_test2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_source_file_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_readonly_nfs_raw.attach_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_readonly_nfs_floppy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_readonly_nfs_cdrom.coldplug_only_iso
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_readonly_nfs_cdrom.coldplug_only_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_readonly_nfs_cdrom.coldplug_with_at_dt_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_virtio_scsi_cdrom_multi_queue
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_scsi.error_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_scsi.error_test.requisite
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_scsi.error_test.mandatory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_scsi.normal_test.optional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_scsi.normal_test.optional_save_restore
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_ide.error_test.requisite
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_ide.error_test.mandatory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disks_startup_policy.disk_bus_ide.normal_test.optional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_virtio.device_lun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_virtio.device_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_ide.device_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_ide.device_cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_ide.device_block
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_sata
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_scsi.device_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_scsi.device_block
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_scsi.device_cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_usb.device_lun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_usb.device_disk.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_usb.device_disk.error_test1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_usb.device_disk.error_test2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_mode.options.config.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_mode.options.config.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_mode.options.config.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_mode.options.current.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_mode.options.current.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_mode.options.current.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.live.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.live.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.live.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.live.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.set_numa_parameter.running_guest.change_nodeset.options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.get_numa_parameter.running_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.get_numa_parameter.running_guest.options.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.get_numa_parameter.running_guest.options.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.get_numa_parameter.shutoff_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.get_numa_parameter.shutoff_guest.options.config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.positive_testing.get_numa_parameter.shutoff_guest.options.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.get_numa_parameter.running_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.get_numa_parameter.running_guest.cgroup.stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.get_numa_parameter.shutoff_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.get_numa_parameter.shutoff_guest.options.config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_mode.options.config.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_mode.options.config.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_mode.options.config.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.live.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.live.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.live.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.live.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.config.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.config.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.config.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.config.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.change_nodeset.options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.running_guest.cgroup.stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.live.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.live.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.live.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.live.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.config.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.comma_list
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.ranges
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.excluding
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.numatune.negative_testing.set_numa_parameter.shutoff_guest.change_nodeset.options.current.single
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_baseline.positive_test.default_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_baseline.positive_test.config_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_baseline.negative_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_baseline.negative_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_baseline.negative_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_baseline.negative_test.extra_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_baseline.negative_test.extra_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_vm_name.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_vm_name.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_vm_name.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_vm_name.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.hex_vm_id.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.hex_vm_id.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.hex_vm_id.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_id.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_id.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_id.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_id.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_uuid.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_uuid.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_uuid.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_vm_uuid.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.vm_shutdown.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.vm_shutdown.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.vm_shutdown.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.vm_shutdown.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_target.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_target.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_target.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_1.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_1.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_1.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_1.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_2.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_2.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_2.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.invalid_option_2.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_attach.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_attach.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_attach.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_attach.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_target.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_target.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_target.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.error_test.no_target.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_id.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_id.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_id.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_name.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_name.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_name.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_name.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_uuid.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_uuid.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_uuid.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.host_vm_uuid.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_suspend.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_suspend.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_suspend.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.image_file_no_option.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.image_file_no_option.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.image_file_no_option.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_live.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_live.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_live.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_config.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_config.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_config.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_config.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_current.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_current.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_current.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_current.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_current.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_current.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_current.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_persistent.cdrom_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_persistent.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_persistent.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_shutdown_persistent.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_persistent.disk_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_persistent.disk_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.detach_device.normal_test.vm_running_persistent.iface_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save_image_define.running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save_image_define.paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.positive_test.non_acl.local_nfs_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.positive_test.non_acl.local_iscsi_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.positive_test.non_acl.local_logical_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.positive_test.acl_test.local_nfs_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.positive_test.acl_test.local_iscsi_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.positive_test.acl_test.local_logical_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.negative_test.invalid_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.negative_test.invalid_srcSpec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.negative_test.readonly_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.normal_test.remote_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dommemstat.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.positive_test.min_time.target_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.positive_test.min_time.target_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.positive_test.min_time.target_hybrid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.positive_test.double_time.target_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.positive_test.double_time.target_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.positive_test.double_time.target_hybrid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.negative_test.invalid_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.negative_test.zero_time
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.negative_test.short_time
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.negative_test.negative_time
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodesuspend.negative_test.large_time
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_valid_option.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_valid_option.uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_invalid_option.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_invalid_option.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_invalid_option.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_invalid_option.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_invalid_option.addition_invalid_param
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_running.with_invalid_option.vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_valid_option.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_valid_option.uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_invalid_option.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_invalid_option.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_invalid_option.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_invalid_option.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_invalid_option.addition_invalid_param
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_paused.with_invalid_option.vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_valid_option.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_valid_option.uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_invalid_option.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_invalid_option.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_invalid_option.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_invalid_option.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_invalid_option.addition_invalid_param
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.vm_state.vm_shut_off.with_invalid_option.vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.with_libvirtd_stop.with_valid_option.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domname.with_libvirtd_stop.with_valid_option.uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.set_process_name.positive_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.set_process_name.positive_test.set_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.set_process_name.positive_test.unset_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.set_process_name.negative_test.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.no_options.positive_readonly.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.no_options.positive_readonly.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.no_options.positive_readonly.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.no_options.readwrite.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.no_options.readwrite.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.no_options.readwrite.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_include-passwd.negtive_readonly.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_include-passwd.negtive_readonly.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_include-passwd.negtive_readonly.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_include-passwd.readwrite.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_include-passwd.readwrite.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_include-passwd.readwrite.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.vnc_type.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.vnc_type.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.vnc_type.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.spice_type.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.spice_type.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.spice_type.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.type_without_post.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.type_without_post.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.type_without_post.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.none_type.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.none_type.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.have_passwd.option_type.none_type.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.no_options.positive_readonly.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.no_options.positive_readonly.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.no_options.positive_readonly.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.no_options.readwrite.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.no_options.readwrite.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.no_options.readwrite.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_include-passwd.negtive_readonly.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_include-passwd.negtive_readonly.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_include-passwd.negtive_readonly.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_include-passwd.readwrite.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_include-passwd.readwrite.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_include-passwd.readwrite.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.vnc_type.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.vnc_type.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.vnc_type.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.spice_type.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.spice_type.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.spice_type.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.type_without_post.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.type_without_post.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.type_without_post.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.none_type.spice_t.with_ssl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.none_type.spice_t.without_ssl.domain_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domdisplay.no_passwd.option_type.none_type.vnc_t.domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.ext4_format.discard_ignore.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.ext4_format.discard_ignore.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.ext4_format.discard_unmap.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.ext4_format.discard_unmap.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.ext4_format.discard_unmap.bus_virtio.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.xfs_format.discard_ignore.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.xfs_format.discard_ignore.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.xfs_format.discard_unmap.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.xfs_format.discard_unmap.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_cmd.xfs_format.discard_unmap.bus_virtio.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.ext4_format.discard_ignore.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.ext4_format.discard_ignore.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.ext4_format.discard_unmap.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.ext4_format.discard_unmap.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.ext4_format.discard_unmap.bus_virtio.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.xfs_format.discard_ignore.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.xfs_format.discard_ignore.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.xfs_format.discard_unmap.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.xfs_format.discard_unmap.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_in_vm.fstrim_mount.xfs_format.discard_unmap.bus_virtio.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.ext4_format.discard_ignore.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.ext4_format.discard_ignore.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.ext4_format.discard_unmap.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.ext4_format.discard_unmap.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.ext4_format.discard_unmap.bus_virtio.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.xfs_format.discard_ignore.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.xfs_format.discard_ignore.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.xfs_format.discard_unmap.bus_scsi.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.xfs_format.discard_unmap.bus_scsi.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: storage_discard.fstrim_out_vm.xfs_format.discard_unmap.bus_virtio.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_root.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_root.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_root.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_root.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu_grp.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu_grp.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu_grp.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu_grp.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_qemu_grp.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.exist_file.nfs_file_oth.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.non_exist_file.qemu_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.non_exist_file.qemu_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.non_exist_file.root_user.dynamic_ownership_on.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.positive_test.non_exist_file.root_user.dynamic_ownership_off.no_root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_root.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu_grp.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu_grp.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu_grp.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu_grp.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu_grp.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu_grp.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_qemu_grp.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_oth.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_oth.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_oth.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.exist_file.nfs_file_oth.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.qemu_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.qemu_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.qemu_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.qemu_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.root_user.dynamic_ownership_on.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.root_user.dynamic_ownership_on.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.root_user.dynamic_ownership_off.root_squash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_nfs_save_restore.negative_test.non_exist_file.root_user.dynamic_ownership_off.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_trans.positive_testing.open_commit_transaction
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_trans.positive_testing.open_rollback_transaction
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_trans.negative_testing.no_pending_transaction
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_trans.negative_testing.break_transaction.open_commit_transaction
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_trans.negative_testing.break_transaction.open_rollback_transaction
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_trans.negative_testing.exist_transaction
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.init_scripts
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.vol_clone.normal_resource.once_execute
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.vol_create.normal_resource.once_execute
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virt_clone.normal_resource.twice_execute.kill_first
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virt_clone.normal_resource.twice_execute.leave_first
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virt_clone.cpu_lack
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virt_clone.memory_lack
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virt_clone.disk_lack
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.snapshot_create.normal_resource.twice_execute.kill_first
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.snapshot_create.memory_lack
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.snapshot_create.cpu_busy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virsh_dump.normal_resource.twice_execute.kill_first
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virsh_dump.normal_resource.twice_execute.leave_first
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virsh_dump.cpu_busy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virt_install.unattended_install.cdrom.normal_resource.twice_execute.kill_first
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.virt_install.unattended_install.cdrom.normal_resource.read_only
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.migration.normal_resource.time_out
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: resource_abnormal.migration.network_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_raw.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_raw.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_qcow.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_qcow.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_qcow2.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_qcow2.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_qed.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_qed.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_vmdk.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_none.vol_format_vmdk.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_default.vol_format_qcow2.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_default.vol_format_qcow2.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_qcow.vol_format_qcow2.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.dir_pool.vol_encrypt_qcow.vol_format_qcow2.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.gluster_pool.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.gluster_pool.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.logical_pool.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.logical_pool.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.netfs_pool.nfs_format.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.netfs_pool.nfs_format.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.netfs_pool.glusterfs_format.vol_allocation.normal_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.volume.netfs_pool.glusterfs_format.vol_allocation.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_live.add
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_live.del
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_config.add
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_config.del
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_config_live.add
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_config_live.del
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_current.add
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.id_option.option_current.del
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.name_option.add
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.name_option.del
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.pause_option.add
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.pause_option.del
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.uuid_option.add
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_on.uuid_option.del
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_off.option_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_off.option_uuid_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_off.option_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_off.option_maximum_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.guest_off.exceeding_topology_limit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.normal_test.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.unexcept_id_option.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.unexcept_id_option.id_current_live_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.unexcept_id_option.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.unexpected_domain_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.name_only_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.invalid_vcpu_count_is_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.invalid_vcpu_count_is_5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.shut_off_error_option.live_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.shut_off_error_option.live_config_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.shut_off_error_option.current_config_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.maximum_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.setvcpus.error_test.no_acpi_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.non_acl.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.non_acl.inactive_option.active_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.non_acl.inactive_option.inactive_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.non_acl.all_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.non_acl.transient_inactive_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.acl_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.acl_test.inactive_option.active_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.acl_test.inactive_option.inactive_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.acl_test.all_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.normal_test.acl_test.transient_inactive_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_list.error_test.extra_args_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.list_events.other_option.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.all_events.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.all_events.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.lifecycle_events.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.lifecycle_events.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.reboot_event.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.reboot_event.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.reboot_event.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.reboot_event.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event1.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event1.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event1.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event1.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event2.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event2.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event2.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.tunable_event2.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.balloon-change_event.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.balloon-change_event.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.balloon-change_event.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.balloon-change_event.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.device-removed_event.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.device-removed_event.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.device-removed_event.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.virsh_event.test_events.device-removed_event.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.all_events.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.all_events.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.lifecycle_events.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.lifecycle_events.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.reboot_event.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.reboot_event.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.reboot_event.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.reboot_event.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event1.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event1.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event1.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event1.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event2.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event2.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event2.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.tunable_event2.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.balloon-change_event.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.balloon-change_event.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.balloon-change_event.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.balloon-change_event.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.device-removed_event.no_timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.device-removed_event.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.device-removed_event.timeout.no_loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.pretty_option.device-removed_event.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.regex_option.lifecycle_events.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.regex_option.lifecycle_events.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.no-case_option.lifecycle_events.no_timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.positive_test.qemu_monitor_event.no-case_option.lifecycle_events.timeout.loop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.negative_test.virsh_event.invalid_event
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.negative_test.virsh_event.invalid_timeout
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.event.negative_test.qemu_monitor_event.invalid_timeout
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.encryption.encryption_test.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.encryption.encryption_test.error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.default_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.echo_xml_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.echo_shell_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.quit_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.readonly.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.readonly.echo_xml_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.readonly.echo_shell_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.normal_test.readonly.quit_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.invalid_cmd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.invalid_cd_extra
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.invalid_pwd_extra
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.invalid_echo_extra
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.readonly.invalid_cmd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.readonly.invalid_cd_extra
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.readonly.invalid_pwd_extra
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.itself.error_test.readonly.invalid_echo_extra
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_undefine.normal_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_undefine.normal_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_undefine.error_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_undefine.error_test.none_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_undefine.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_edit.positive_test.loopback_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_edit.negative_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.default.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.current.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.force.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_running.cdrom_test.live_config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.default.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.current.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.force.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_shutoff.cdrom_test.live_config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.default.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.current.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.force.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_paused.cdrom_test.live_config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.default.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.current.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.force.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.default.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.default.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.default.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.current.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.current.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.current.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.live.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.live.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.live.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.force.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.force.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.force.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.live_config.eject_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.live_config.insert_update
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media_matrix.pre_vm_state_transient.cdrom_test.live_config.action_twice.live_config.eject_insert
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.invalid_name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.no_interface_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.error_interface_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domifstat.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_models.positive_test.local_host.auto_get_arch
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_models.positive_test.local_host.specific_arch
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_models.positive_test.remote_host.auto_get_arch
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_models.positive_test.remote_host.specific_arch
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_models.negative_test.invalid_arch
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_models.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.negative_test.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.negative_test.shutdown_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.positive_test.non_acl.id_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.positive_test.non_acl.uuid_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.positive_test.non_acl.name_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.positive_test.acl_test.id_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.positive_test.acl_test.uuid_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reset.positive_test.acl_test.name_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.with_option.with_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.with_option.with_qemu1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.with_option.with_kvm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.with_option.with_kvm1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.with_option.with_kqemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.with_option.with_kqemu1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.unexpect_option.with_xyz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_local.unexpect_option.with_xyz1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.with_option.with_qemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.with_option.with_qemu1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.with_option.with_kvm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.with_option.with_kvm1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.with_option.with_kqemu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.with_option.with_kqemu1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.unexpect_option.with_xyz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.maxvcpus.connect_to_remote.unexpect_option.with_xyz1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodecpustats.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodecpustats.unexpect_option.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodecpustats.unexpect_option.invalid_cpuNum
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodecpustats.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_parent.both_current_and_snapname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_parent.no_current_and_snapname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_parent.invalid_snapshotname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_parent.without_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_current.readonly.name_with_snapname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_current.readonly.invalid_snapshotname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_current.readonly.without_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_current.without_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.negative_tests_current.invalid_snapshotname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.mode_option.current_and_security_option.negtive_tests_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.mode_option.current_and_security_option.positive_tests_readwrite
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.mode_option.snapshotname_option.negtive_tests_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.mode_option.snapshotname_option.positive_tests_readwrite
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.current_option.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.current_option.readwrite
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_par_cur.current_option.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.start_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.libvirtd_t
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.save_restore.basic_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.save_restore.domainxml_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.managedsave_t.basic_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.managedsave_t.domainxml_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.virsh_attach
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.daemon_t.exit_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.daemon_t.exit_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.network_t
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.error_test.start_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hooks.scale_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_e1000.large_scale
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_e1000.test_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_e1000.duplicate_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_e1000.duplicate_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_e1000.options_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_e1000.options_test.persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_e1000.stress_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_rtl8139.large_scale
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_rtl8139.test_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_rtl8139.duplicate_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_rtl8139.duplicate_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_rtl8139.options_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_rtl8139.options_test.persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_rtl8139.stress_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_virtio.large_scale
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_virtio.test_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_virtio.duplicate_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_virtio.duplicate_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_virtio.options_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_virtio.options_test.persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_device.iface_attach.model_virtio.stress_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_e1000.large_scale
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_e1000.test_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_e1000.duplicate_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_e1000.duplicate_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_e1000.options_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_e1000.options_test.persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_e1000.stress_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_rtl8139.large_scale
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_rtl8139.test_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_rtl8139.duplicate_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_rtl8139.duplicate_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_rtl8139.options_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_rtl8139.options_test.persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_rtl8139.stress_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_virtio.large_scale
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_virtio.test_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_virtio.duplicate_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_virtio.duplicate_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_virtio.options_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_virtio.options_test.persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_network.iface_hotplug.at_iface.iface_attach.model_virtio.stress_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_top.positive_test.stream_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_top.negative_test.display_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_top.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.sysconfig_libvirtd.libvirtd_config.positive_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.sysconfig_libvirtd.libvirtd_config.positive_test.set
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.sysconfig_libvirtd.libvirtd_config.negative_test.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.id_option.no_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.id_option.no_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.id_option.paused_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.id_option.paused_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.id_option.running_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.id_option.running_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.normal_status.no_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.normal_status.no_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.normal_status.paused_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.normal_status.paused_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.normal_status.running_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.normal_status.running_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.paused_status.no_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.paused_status.no_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.paused_status.paused_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.paused_status.paused_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.paused_status.running_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.paused_status.running_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.managedsave_remove.no_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.managedsave_remove.no_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.managedsave_remove.paused_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.managedsave_remove.paused_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.managedsave_remove.running_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.name_option.managedsave_remove.running_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.uuid_option.no_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.uuid_option.no_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.uuid_option.paused_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.uuid_option.paused_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.uuid_option.running_opt.no_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_no.uuid_option.running_opt.show_progress
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.cpu_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.undefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.autostart_bypass_cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.libvirt_guests.single_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.libvirt_guests.multi_guests
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.security_driver
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.saved_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.functional_test.loop_cmd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.extra_param_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.name_option.shut_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.name_option.libvirtd_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.managedsave.status_error_yes.name_option.transient_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_capabilities
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.running.sigstop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.running.sigterm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.running.sigabrt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.running.sighup
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.running.sigkill
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.running.sigquit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.paused.sigstop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.paused.sigterm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.paused.sigabrt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.paused.sighup
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.paused.sigkill
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.paused.sigquit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.pmsuspended.sigstop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.pmsuspended.sigterm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.pmsuspended.sigabrt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.pmsuspended.sighup
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.pmsuspended.sigkill
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_qemu.pmsuspended.sigquit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_qcow2.test_dompmsuspend
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_qcow2.transport_rdma
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_qcow2.transport_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_qcow2.default_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_qcow2.iothread
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_raw.transport_rdma
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_raw.transport_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_raw.default_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.gluster.disk_raw.iothread
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.no_prealloc.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.no_prealloc.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.no_prealloc.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.no_prealloc.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qed_f.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qed_f.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qed_f.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qed_f.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.vdmk_f.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.vdmk_f.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.vdmk_f.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.vdmk_f.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.sparse_file.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.sparse_file.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.sparse_file.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.non_acl.disk_part.pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.raw_f.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.raw_f.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.raw_f.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.raw_f.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.prealloc.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.prealloc.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.prealloc.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.prealloc.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.no_prealloc.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.no_prealloc.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.no_prealloc.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qcow2_f.no_prealloc.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qed_f.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qed_f.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qed_f.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.qed_f.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.vdmk_f.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.vdmk_f.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.vdmk_f.pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.vol_format.vdmk_f.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.sparse_file.pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.sparse_file.pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.sparse_file.pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.positive_test.acl_test.disk_part.pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.negative_test.oversize_vol
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.negative_test.invalid_alg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_clone_wipe.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.positive_test.config_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.positive_test.current_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.positive_test.live_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.positive_test.live_config_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.positive_test.edit_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.negative_test.config_current_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.negative_test.live_current_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.metadata.negative_test.nonexist_uri
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.file_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.file_dev.error_test.dup_charid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.file_dev.error_test.dup_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.file_dev.error_test.one_charid_two_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.sock_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.sock_dev.error_test.dup_charid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.sock_dev.error_test.dup_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.sock_dev.error_test.one_charid_two_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.pty_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.pty_dev.error_test.dup_charid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.pty_dev.error_test.dup_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.pty_dev.error_test.one_charid_two_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.qmp.all_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.at_dt_device.file_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.at_dt_device.file_dev.error_test.dup_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.at_dt_device.sock_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.at_dt_device.sock_dev.error_test.dup_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.at_dt_device.pty_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.at_dt_device.pty_dev.error_test.dup_devid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: hotplug_serial.at_dt_device.all_dev.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_update_lock
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.get_secret_value.no_secret_value.public_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.get_secret_value.no_secret_value.private_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.get_secret_value.invalid_options.public_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.get_secret_value.invalid_options.private_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.set_secret_value.noexist_secret_uuid.public_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.set_secret_value.noexist_secret_uuid.private_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.set_secret_value.invalid_options.public_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.negative_testing.set_secret_value.invalid_options.private_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.positive_testing.public_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_set_get.positive_testing.private_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.normal_test.set_autostart.netname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.normal_test.set_autostart.netuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.normal_test.set_disable.netname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.normal_test.set_disable.netuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.error_test.none_network
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.error_test.invalid_network
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.error_test.additional_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_autostart.error_test.additional_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.positive_testing.get_node_memory_parameter
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.positive_testing.set_node_memory_parameter.shm_pages_to_scan.normal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.positive_testing.set_node_memory_parameter.shm_pages_to_scan.zero
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.positive_testing.set_node_memory_parameter.shm_sleep_millisecs.normal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.positive_testing.set_node_memory_parameter.shm_sleep_millisecs.zero
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.positive_testing.set_node_memory_parameter.shm_merge_across_nodes.disable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.positive_testing.set_node_memory_parameter.shm_merge_across_nodes.enable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.get_node_memory_parameter
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.set_node_memory_parameter.invalid_value.shm_pages_to_scan
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.set_node_memory_parameter.invalid_value.shm_sleep_millisecs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.set_node_memory_parameter.invalid_value.shm_merge_across_nodes.invalid_number
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.set_node_memory_parameter.invalid_value.shm_merge_across_nodes.invalid_operation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.set_node_memory_parameter.invalid_options.option.shm_pages_to_scan
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.set_node_memory_parameter.invalid_options.option.shm_sleep_millisecs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.node_memtune.negative_testing.set_node_memory_parameter.invalid_options.option.shm_merge_across_nodes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.mem_basic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.hot_plug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.cold_plug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.no_attach
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.with_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.hugepages.no_numatune.hot_plug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.hugepages.no_numatune.cold_plug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.hugepages.with_numatune.hot_plug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.positive_test.hugepages.with_numatune.cold_plug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.start_error.invalid_slot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.start_error.invalid_address
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.start_error.invalid_vm_node
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.start_error.invalid_host_node
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.start_error.without_numa
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.attach_error.attach_nonexist_node
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.attach_error.attach_invalid_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.attach_error.attach_duplicate_node
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.attach_error.attach_many_times
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.detach_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.setmem_error.without_numa
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_mem.negative_test.setmem_error.with_numa
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_attach.possitive_test.allow_arp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_attach.negative_test.attach_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_attach.negative_test.attach_invalid_twice
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_from_native.unexpect_option.exist_file_guest_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_from_native.unexpect_option.no_file_guest_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_from_native.unexpect_option.invalid_guest_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_from_native.unexpect_option.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_from_native.expect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_from_native.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.define.number
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.define.symbol_letter_number
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.define.symbol
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vm.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vm.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vm.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vm.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vms.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vms.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vms.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.orderly_migration.booting_load_vms.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vm.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vm.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vm.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vm.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vms.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vms.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vms.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.cross_migration.booting_load_vms.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.cpu_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_in_vms.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.half_memory.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.run_stress_app.stress_tool_on_host.short_of_memory.memory_stress.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vm.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vm.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vm.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vm.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vms.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vms.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vms.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_load_vms.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_migration_vms.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_migration_vms.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_migration_vms.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.simultaneous_migration.booting_migration_vms.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.compressed_migration.booting_load_vms.set_vcpu_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.compressed_migration.booting_load_vms.set_vcpu_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.compressed_migration.booting_load_vms.set_memory_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_stress.compressed_migration.booting_load_vms.set_memory_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.eject.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.insert.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.positive_test.update.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.eject.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.eject.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.eject.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.eject.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.eject.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.eject.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.eject.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.insert.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.update.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.update.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.update.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.update.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.update.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.update.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.ide_.negative_test.update.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.eject.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.insert.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.positive_test.update.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.eject.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.eject.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.eject.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.eject.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.eject.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.eject.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.eject.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.insert.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.update.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.update.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.update.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.update.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.update.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.update.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.cdrom_test.scsi_.negative_test.update.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.eject.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.insert.live_floppy_rw.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.none.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.none.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.current.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.current.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.live.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.force.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.force.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.config.running_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.positive_test.update.config.shutoff_guest
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.eject.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.eject.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.eject.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.eject.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.eject.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.eject.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.eject.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.insert.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.update.no_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.update.no_source_path_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.update.no_source_path_running_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.update.no_source_path_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.update.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.update.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.change_media.floppy_test.negative_test.update.shutoff_guest_with_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: kernel_panic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.iperf.vcpu_2.queue_4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.iperf.vcpu_2.queue_8
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.iperf.vcpu_2.queue_9
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.iperf.vcpu_4.queue_4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.iperf.vcpu_4.queue_8
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.iperf.vcpu_4.queue_9
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.cpu_affinity.vcpu_2.queue_4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multiqueue.cpu_affinity.vcpu_4.queue_4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_auto.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_auto.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_auto.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_nodeset.node1.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_nodeset.node1.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_nodeset.node1.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_nodeset.node2.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.no_vcpu.mem_nodeset.node2.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_auto.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_auto.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_auto.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_nodeset.node1.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_nodeset.node1.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_nodeset.node1.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_nodeset.node2.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_auto.mem_nodeset.node2.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_auto.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_auto.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_auto.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_nodeset.node1.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_nodeset.node1.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_nodeset.node1.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_nodeset.node2.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.possitive_test.vcpu.vcpu_static.mem_nodeset.node2.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.negative_test.out_range.strict
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.negative_test.out_range.preferred
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.negative_test.out_range.interleave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory.negative_test.preferred_multi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_normal.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_normal.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_normal.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_none.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_none.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_none.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_conflict.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_conflict.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_conflict.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_invalid.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_invalid.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_nec-xhci.index_invalid.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_normal.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_normal.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_normal.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_none.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_none.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_none.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_conflict.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_conflict.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_conflict.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_invalid.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_invalid.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_none.index_invalid.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_normal.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_normal.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_normal.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_none.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_none.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_none.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_conflict.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_conflict.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_conflict.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_invalid.guest_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_invalid.guest_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_usb_hotplug_controller.model_invalid.index_invalid.guest_pause
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.autostart.positive_test.set_autostart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.autostart.positive_test.set_disable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.autostart.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.autostart.negative_test.transient_autostart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.autostart.negative_test.transient_disable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.autostart.negative_test.readonly_autostart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.autostart.negative_test.readonly_disable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.no_pool.attach_img_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.no_pool.attach_img_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.no_pool.attach_img_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.delete_test.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.attach_img_qed.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.multi_disks.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.multi_disks.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.transport_default.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.transport_default.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.transport_rdma.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.transport_rdma.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.transport_tcp.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.no_pool.network_disk.gluster.transport_tcp.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.positive_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.attach_img_qed.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.network_disk.inactive.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.network_disk.inactive.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.network_disk.inactive.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.no_pool.network_disk.inactive.snapshot_from_xml.disk_external.disk_only.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.dir_pool.attach_img_qed.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.fs_pool.attach_img_qed.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_pool.attach_img_qed.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.logical_pool.attach_img_qed.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.iscsi_pool.attach_img_qed.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.disk_pool.attach_img_qed.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_internal.memory_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_default.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_default.no_current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_raw.snapshot_default.revert_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_internal.memory_external
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.default.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_internal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_disk.no_delete.negative_test.pool_vol.netfs_gluster_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.sys_checkpoint.live.memory_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_s0.sec_relabel_no.sec_type_static.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_s0.sec_relabel_no.sec_type_static.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_s0.sec_relabel_yes.sec_type_dynamic.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_s0.sec_relabel_yes.sec_type_dynamic.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_s0.sec_relabel_yes.sec_type_static.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_s0.sec_relabel_yes.sec_type_static.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_MCS1.sec_relabel_no.sec_type_static.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_MCS1.sec_relabel_no.sec_type_static.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_MCS1.sec_relabel_yes.sec_type_static.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_svirt_image_MCS1.sec_relabel_yes.sec_type_static.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_virt_content.sec_relabel_no.sec_type_static.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_virt_content.sec_relabel_yes.sec_type_dynamic.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_virt_content.sec_relabel_yes.sec_type_dynamic.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_virt_content.sec_relabel_yes.sec_type_static.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.positive_test.guest_img_label_virt_content.sec_relabel_yes.sec_type_static.host_selinux_permissive
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_install.negative_test.guest_img_label_virt_content.sec_relabel_no.sec_type_static.host_selinux_enforcing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.normal_test.new_network.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.normal_test.new_network.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.normal_test.new_network.state_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.normal_test.default_network.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.normal_test.default_network.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_network.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_network.invalid_netname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.acl_test.define_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.acl_test.undefine_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_define.none_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_define.not_exist_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_define.additional_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_define.additional_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_undefine.none_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_undefine.not_exist_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_undefine.additional_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_define_undefine.error_test.invalid_options.net_undefine.additional_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_edit_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.save_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.managedsave_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.restore_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.normal_test.readonly_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.shut_off_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domcontrol.error_test.readonly_with_invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.bridge_no_stp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.bridge_delay_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.bridge_delay_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.bridge_no_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.bridge_delay_no_stp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.bridge_no_stp_no_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.positive_test.unbridge_no_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.negative_test.invalid_delay_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.negative_test.invalid_delay_2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.negative_test.invalid_delay_3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.negative_test.invalid_bridge_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.negative_test.invalid_unbridge_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.negative_test.iface_not_exists
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.iface_bridge.negative_test.unbridge_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.positive_testing.non_acl.create_destroy_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.positive_testing.acl_test.create_destroy_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.negative_testing.create_node_device.noexist_parent_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.negative_testing.create_node_device.offline_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.negative_testing.create_node_device.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.negative_testing.create_node_device.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.negative_testing.destroy_node_device.noexist_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.negative_testing.destroy_node_device.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_create_destroy.negative_testing.destroy_node_device.no_capable_of_vport_ops
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virt_clone
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.backend_rdm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.backend_udp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.backend_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_rate.back_rdm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_rate.back_tcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_rdm.snapshot_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_rdm.snapshot_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_tcp_connect.snapshot_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_tcp_connect.snapshot_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_tcp_bind.snapshot_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_tcp_bind.snapshot_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_udp.snapshot_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.rng_snapshot.back_udp.snapshot_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_rng.multiple_rng
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.img_label_virt_content.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.img_label_virt_content.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.disk_label_svirt_image_s0.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.disk_label_svirt_image_MCS1.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.default_vol.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.nfs_vol.virt_use_nfs_on.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.cap_rawio.iscsi_pool.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.positive_test.cap_rawio.disk_pool.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.negative_test.default_vol.img_label_virt_content.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_attach_disk.negative_test.nfs_vol.virt_use_nfs_off.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory_migrate.mem_auto
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numa_memory_migrate.mem_nodeset
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.domain_ID_no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.domain_UUID_no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.title_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.live_desc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.current_desc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.config_desc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.live_config_desc
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.live_title
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.current_title
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.config_title
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.live_config_title
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.edit_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.new_desc_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.positive_test.transient_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.negative_test.invalid_domain_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.negative_test.invalid_domain_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.negative_test.invalid_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.negative_test.invalid_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.negative_test.invalid_option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.negative_test.new_desc_without_string
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.desc.negative_test.transient_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_only
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_strict_interleave.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_strict_interleave.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_strict_interleave.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_interleave_preferred.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_interleave_preferred.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_interleave_preferred.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_preferred_strict.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_preferred_strict.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_and_back_with_numa.with_numa_pinning.memnode_with_preferred_strict.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_only
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_strict_interleave.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_strict_interleave.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_strict_interleave.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_interleave_preferred.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_interleave_preferred.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_interleave_preferred.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_preferred_strict.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_preferred_strict.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_live_with_numa.with_numa_pinning.memnode_with_preferred_strict.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_p2p
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_p2p_tunnelled
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_direct
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_suspend
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_persistent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_undefinesource
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_suspend_undefinesource
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_change-protection
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_with_scsi_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_verbose
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_unsafe
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_unsafe_cache_writeback
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_timeout
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_timeout_short
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_migrateuri
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_dname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_xml
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_only
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_strict_interleave.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_strict_interleave.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_strict_interleave.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_interleave_preferred.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_interleave_preferred.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_interleave_preferred.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_preferred_strict.strict_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_preferred_strict.interleave_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_online_with_numa.with_numa_pinning.memnode_with_preferred_strict.preferred_memory_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_xml_with_dname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_vm_suspend_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_vm_suspend_online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_vm_shutdown_live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_vm_shutdown_online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_libvirtd_stop_online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_compressed
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_seamless_migration_with_graphicsuri
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_domain_nonexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_domain_missing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_desturi_nonexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_desturi_missing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_migrateuri_nonexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_timeout_invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_timeout_online
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_dname_exist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_xml_nonexist
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_cache_writeback_without_unsafe
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_xml_with_same_dname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate.there_xml_with_diff_dname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.normal_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.vm_named_by_num
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.vm_named_long
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.vm_name_start_with_special
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.remote_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.console
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.autodestroy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.bypass-cache
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_no.force-boot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_yes.libvirtd_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_yes.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_yes.dom_name_not_found
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_yes.vm_running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.start.status_error_yes.vm_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.help.normal_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.help.normal_test.all_command_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.help.normal_test.all_group_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.help.error_test.extra_command_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.help.error_test.no_exist_command_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.get_blkdevio_parameter.shutoff_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.get_blkdevio_parameter.shutoff_guest.options.config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.get_blkdevio_parameter.shutoff_guest.options.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.get_blkdevio_parameter.running_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.get_blkdevio_parameter.running_guest.options.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.get_blkdevio_parameter.running_guest.options.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.config.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.config.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.config.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.config.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.config.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.current.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.current.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.current.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.current.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_sec.options.current.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.config.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.config.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.config.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.config.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.config.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.current.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.current.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.current.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.current.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_iops_sec.options.current.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.options.config.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.options.config.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.options.config.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.options.current.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.options.current.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.options.current.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.config.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.config.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.config.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.config.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.config.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.current.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.current.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.current.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.current.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_sec.options.current.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.config.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.config.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.config.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.config.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.config.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.current.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.current.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.current.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.current.combination4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_iops_sec.options.current.combination5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.options.config.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.options.config.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.options.config.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.options.current.combination1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.options.current.combination2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.positive_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.options.current.combination3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.get_blkdevio_parameter.shutoff_guest.invalid_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.get_blkdevio_parameter.shutoff_guest.options.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.get_blkdevio_parameter.shutoff_guest.options.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.get_blkdevio_parameter.running_guest.invalid_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.get_blkdevio_parameter.running_guest.options.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.invalid_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_bytes_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_bytes_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_bytes_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_iops_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_read_iops_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_write_iops_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.total_read_bytes_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.total_write_bytes_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.total_read_iops_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.shutoff_guest.change_total_read_write_bytes_iops_sec.total_write_iops_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.invalid_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_bytes_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_bytes_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_bytes_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_iops_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_read_iops_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.config.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.config.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.config.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.live.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.live.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.live.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.current.lower_minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.current.upper_maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_write_iops_sec.options.current.invalid_value
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.total_read_bytes_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.total_write_bytes_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.total_read_iops_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blkdeviotune.negative_testing.set_blkdevio_parameter.running_guest.change_total_read_write_bytes_iops_sec.total_write_iops_sec
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_dumpxml.normal_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_dumpxml.normal_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.vm_shut_off.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.vm_shut_off.snapshots
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.vm_shut_off.remove_storage.wipe_data
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.vm_shut_off.remove_storage.no_wipe_data
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.vm_uuid.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.undefine_twice.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.vm_running.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.vm_running.managedsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.remote.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.normal_test.acl_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.no_vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.invalid_vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.invalid_vm_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.pound_vm_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.invalid_vm_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.undefine.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.positive_test.default_setting
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.positive_test.change_dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.positive_test.change_group
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.positive_test.change_perms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.positive_test.short_perms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.negative_test.invalid_group
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.negative_test.invalid_dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.unix_sock.negative_test.invalid_perms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.console
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.console_autodestroy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.console_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.console_autodestroy_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.autodestroy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.autodestroy_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.create.negtive_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.non_acl.ephemeral_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.non_acl.ephemeral_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.non_acl.private_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.non_acl.private_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.non_acl.redefine_modify_volume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.non_acl.redefine_remove_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.define_acl.ephemeral_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.define_acl.ephemeral_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.define_acl.private_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.define_acl.private_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.define_acl.redefine_modify_volume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.define_acl.redefine_remove_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.get_value_acl.ephemeral_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.get_value_acl.ephemeral_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.get_value_acl.private_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.get_value_acl.private_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.get_value_acl.redefine_modify_volume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.get_value_acl.redefine_remove_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.undefine_acl.ephemeral_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.undefine_acl.ephemeral_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.undefine_acl.private_yes
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.undefine_acl.private_no
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.undefine_acl.redefine_modify_volume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.normal_test.acl_test.undefine_acl.redefine_remove_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.error_test.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.error_test.acl_test.undefine_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.error_test.acl_test.define_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_define_undefine.error_test.acl_test.get_value_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.update_exist_filter.non_acl.same_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.update_exist_filter.non_acl.new_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.update_exist_filter.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.invalid_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.no_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.invalid_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.invalid_rule_action
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.mac_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.arp_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.rarp_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.ip_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.tcp_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.udp_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.sctp_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.tcp_ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.udp_ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.sctp_ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.icmp_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.icmpv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.ah_ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.all_ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.esp_ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.negative_test.boundary_test.udplite_ipv6_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.mac_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.mac_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.vlan_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.vlan_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.stp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.stp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.arp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.arp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.rarp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.rarp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ip_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ip_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.tcp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.tcp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.sctp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.sctp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.tcp_ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.tcp_ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udp_ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udp_ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.sctp_ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.sctp_ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.icmp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.icmp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.icmpv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.icmpv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.igmp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.igmp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.esp_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.esp_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ah_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ah_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udplite_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udplite_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.all_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.all_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ah_ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.ah_ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.all_ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.all_ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.esp_ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.esp_ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udplite_ipv6_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_define.positive_test.udplite_ipv6_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.get_domif_parameter.running_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.get_domif_parameter.running_guest.options.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.get_domif_parameter.running_guest.options.current
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_inbound.options.live.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_inbound.options.live.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_inbound.options.live.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_inbound.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_inbound.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_inbound.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_outbound.options.live.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_outbound.options.live.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_outbound.options.live.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_outbound.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_outbound.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.change_outbound.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.clear_inbound
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.positive_testing.set_blkio_parameter.running_guest.clear_outbound
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.get_domif_parameter.running_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.get_domif_parameter.shutoff_guest.options.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.get_domif_parameter.shutoff_guest.options.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.running_guest.change_inbound.options.live.invalid_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.running_guest.change_outbound.options.live.invalid_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.running_guest.change_outbound.options.config.invalid_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.running_guest.change_outbound.options.current.invalid_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.live.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.live.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.live.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_inbound.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.live.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.live.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.live.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.config.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.config.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.config.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.current.minimum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.current.inside_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiftune.negative_testing.set_domif_parameter.shutoff_guest.change_outbound.options.current.maximum_boundary
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.dir_pool.edit_pool_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.dir_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.gluster_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.disk_pool.edit_pool_format.dos
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.disk_pool.edit_pool_format.bsd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.disk_pool.edit_pool_format.dvh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.disk_pool.edit_pool_format.gpt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.disk_pool.edit_pool_format.mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.disk_pool.edit_pool_format.pc98
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.name_option.disk_pool.edit_pool_format.sun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.dir_pool.edit_pool_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.dir_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.gluster_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.disk_pool.edit_pool_format.dos
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.disk_pool.edit_pool_format.bsd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.disk_pool.edit_pool_format.dvh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.disk_pool.edit_pool_format.gpt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.disk_pool.edit_pool_format.mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.disk_pool.edit_pool_format.pc98
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.positive_test.uuid_option.disk_pool.edit_pool_format.sun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.dir_pool.edit_pool_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.dir_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.gluster_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.disk_pool.edit_pool_format.dos
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.disk_pool.edit_pool_format.bsd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.disk_pool.edit_pool_format.dvh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.disk_pool.edit_pool_format.gpt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.disk_pool.edit_pool_format.mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.disk_pool.edit_pool_format.pc98
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.no_name.disk_pool.edit_pool_format.sun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.dir_pool.edit_pool_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.dir_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.gluster_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.disk_pool.edit_pool_format.dos
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.disk_pool.edit_pool_format.bsd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.disk_pool.edit_pool_format.dvh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.disk_pool.edit_pool_format.gpt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.disk_pool.edit_pool_format.mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.disk_pool.edit_pool_format.pc98
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_name.disk_pool.edit_pool_format.sun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.dir_pool.edit_pool_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.dir_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.gluster_pool.edit_redefine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.disk_pool.edit_pool_format.dos
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.disk_pool.edit_pool_format.bsd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.disk_pool.edit_pool_format.dvh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.disk_pool.edit_pool_format.gpt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.disk_pool.edit_pool_format.mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.disk_pool.edit_pool_format.pc98
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_edit.negative_test.invalid_uuid.disk_pool.edit_pool_format.sun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.normal_test.file_as_argument.default_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.normal_test.file_as_argument.default_config_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.normal_test.file_as_argument.new_network
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.normal_test.file_as_option.default_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.normal_test.file_as_option.default_config_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.normal_test.file_as_option.new_network
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.additional_file.no_extra_options.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.additional_file.no_extra_options.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.additional_file.non_existant_extra_option.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.additional_file.non_existant_extra_option.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.additional_file.non_existant_extra_argument.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.additional_file.non_existant_extra_argument.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_file.no_extra_options.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_file.no_extra_options.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_file.non_existant_extra_option.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_file.non_existant_extra_option.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_file.non_existant_extra_argument.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_file.non_existant_extra_argument.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_exist_file.no_extra_options.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_exist_file.no_extra_options.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_exist_file.non_existant_extra_option.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_exist_file.non_existant_extra_option.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_exist_file.non_existant_extra_argument.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_command_line.no_exist_file.non_existant_extra_argument.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_contents.invalid_name.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_contents.invalid_name.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_contents.invalid_uuid.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_contents.invalid_uuid.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_contents.bad_xml.no_existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_create.error_test.bad_contents.bad_xml.existing_removal
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.normal_test.zero
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.normal_test.one
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.normal_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.normal_test.uint32_max
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.normal_test.int64_max
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.error_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.error_test.negone
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.error_test.additional_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.error_test.uint64_max
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.half.stress_tool.stress.memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.half.stress_tool.stress.vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.half.load_vms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.half.multi_vms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.two_times.stress_tool.stress.memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.two_times.stress_tool.stress.vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.two_times.load_vms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.two_times.multi_vms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.no_change.stress_tool.stress.memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.no_change.stress_tool.stress.vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.no_change.load_vms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_set_get_speed.verify_speed_with_migration.no_change.multi_vms
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.positive_test.from_given_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.positive_test.from_pre_def_pool.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.positive_test.from_pre_def_pool.nfs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.positive_test.from_pre_def_pool.iscsi_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.positive_test.from_pre_def_pool.gluster_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.invalid_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.no_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.invalid_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.invalid_source_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.duplicate_pool_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.duplicate_pool_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.duplicate_pool_source
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool_create.negative_test.readonly_pool_create
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.positive.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.positive.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.negative.no_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.negative.name_unrecognized
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.negative.multi_detach
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.negative.not_pci_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.negative.nodedev_unknowopt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_detach_reattach.negative.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_config.dt_option_current.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live_config.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live_config.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_running.at_option_live_config.dt_option_live_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_current.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_current.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_current.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_default.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_default.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_default.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_default.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_default.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_config.dt_option_current.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live_config.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live_config.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_paused.at_option_live_config.dt_option_live_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_detach_disk_matrix.pre_vm_state_transient.at_option_live_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_qemu_cmdline.hypervisor_features.pv_eoi.enable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_qemu_cmdline.hypervisor_features.pv_eoi.disable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_qemu_cmdline.memory_backing.disable_ksm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_qemu_cmdline.memory_backing.lock_page
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_qemu_cmdline.memory_backing.disable_ksm_lock_page
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_edit.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_edit.net_create
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.ephemeral
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.no_ephemeral
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.no_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.ephemeral-private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.ephemeral-no_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.no_ephemeral-private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.non_acl.no_ephemeral-no_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.ephemeral
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.no_ephemeral
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.no_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.ephemeral-private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.ephemeral-no_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.no_ephemeral-private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.normal_test.acl_test.no_ephemeral-no_private
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.secret_list.error_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_to_native.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_to_native.expected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_to_native.invalid_format_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_to_native.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_to_native.no_file_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domxml_to_native.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.seccomp_sandbox.positive_test.set_sandbox_default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.seccomp_sandbox.positive_test.set_sandbox_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.seccomp_sandbox.positive_test.set_sandbox_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.seccomp_sandbox.positive_test.set_sandbox_minus_1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.qemu_conf.seccomp_sandbox.negative_test.set_sandbox_invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.ipv4_virtio_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.ipv6_virtio_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.usb_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.readonly_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.private_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.public_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.volume_disk.ipv4_host_source_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.volume_disk.ipv6_host_source_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.volume_disk.direct_source_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.volume_disk.save_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.volume_disk.snapshot_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.network_disk.ipv4_virtio_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.network_disk.ipv6_virtio_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.network_disk.usb_bus
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.network_disk.readonly_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.network_disk.private_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.network_disk.public_secret
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.ipv4_host_source_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.ipv6_host_source_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.direct_source_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.save_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.snapshot_domain
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.byte.qed_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.byte.qcow2_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.byte.raw_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kilobyte.qed_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kilobyte.qcow2_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kilobyte.raw_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kb1000.qed_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kb1000.qcow2_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kb1000.raw_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kb1024.qed_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kb1024.qcow2_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kb1024.raw_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kib.qed_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kib.qcow2_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.kib.raw_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.megabyte.qed_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.megabyte.qcow2_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.megabyte.raw_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.gigabyte.qed_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.gigabyte.qcow2_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.normal_test.gigabyte.raw_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.error_test.zero_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.blockresize.error_test.over_size
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.normal_test.human_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.normal_test.no_dev_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.with_libvirt_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.invalid_uuid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.only_name_option.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblkstat.error_test.only_name_option.space_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_config.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_config.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_config.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_config.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_config.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_current.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_current.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_current.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_current.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_current.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_default.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_default.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_default.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_default.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_default.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live_config.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live_config.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live_config.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live_config.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_running.dt_option_live_config.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live.at_option_live.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live.at_option_config.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live.at_option_current.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live.at_option_default.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live.at_option_live_config.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_config.at_option_live.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_config.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_config.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_config.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_config.at_option_live_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_current.at_option_live.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_current.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_current.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_current.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_current.at_option_live_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_default.at_option_live.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_default.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_default.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_default.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_default.at_option_live_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live_config.at_option_live.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live_config.at_option_config.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live_config.at_option_current.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live_config.at_option_default.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_shutoff.dt_option_live_config.at_option_live_config.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_config.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_config.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_config.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_config.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_config.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_current.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_current.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_current.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_current.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_current.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_default.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_default.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_default.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_default.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_default.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live_config.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live_config.at_option_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live_config.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live_config.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_paused.dt_option_live_config.at_option_live_config.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live.at_option_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live.at_option_live_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_config.at_option_live.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_config.at_option_config.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_config.at_option_current.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_config.at_option_default.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_config.at_option_live_config.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_current.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_current.at_option_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_current.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_current.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_current.at_option_live_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_default.at_option_live.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_default.at_option_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_default.at_option_current.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_default.at_option_default.dt_okay_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_default.at_option_live_config.dt_okay_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live_config.at_option_live.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live_config.at_option_config.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live_config.at_option_current.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live_config.at_option_default.dt_error_at_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.update_device_matrix.pre_vm_state_transient.dt_option_live_config.at_option_live_config.dt_error_at_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.normal_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.normal_test.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dominfo.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.hotplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpu.filtered_shareable_option7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_normal_test.scsi_lbpws.filtered_shareable_option7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_error_test.scsi_lbpu.filtered_shareable_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sgio_share_error_test.scsi_lbpws.filtered_shareable_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_error_policy_test.error_policy_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_error_policy_test.error_policy_report
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_error_policy_test.error_policy_ignore
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_error_policy_test.error_policy_enospace
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sharable_test.block_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_sharable_test.file_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virtual_disks.multivms.coldplug.vms_readonly_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dhcp_leases.positive_test.attach_interface_before_vm_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dhcp_leases.positive_test.attach_interface_after_vm_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dhcp_leases.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dhcp_leases.negative_test.invalid_net
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dhcp_leases.negative_test.invalid_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: startup_policy.startupPolicy.mandatory.device_type.cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: startup_policy.startupPolicy.mandatory.device_type.floppy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: startup_policy.startupPolicy.optional.device_type.cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: startup_policy.startupPolicy.optional.device_type.floppy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: startup_policy.startupPolicy.requisite.device_type.cdrom
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: startup_policy.startupPolicy.requisite.device_type.floppy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_reset.positive_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_reset.negative_test.with_libvirt_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_reset.negative_test.non_exist_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_reset.negative_test.non_pci_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_reset.negative_test.active_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_reset.negative_test.unresettable_device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_by_groups.shutdown_start_pause_resume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_by_groups.shutdown_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_by_groups.destroy_start
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.domstate_switch_by_groups.pause_resume
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.positive_test.relabel_yes.img_root.qemu_user.dynamic_ownership_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.positive_test.relabel_yes.img_root.root_user.dynamic_ownership_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.positive_test.relabel_yes.img_qemu.qemu_user.dynamic_ownership_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.positive_test.relabel_yes.img_qemu.qemu_user.dynamic_ownership_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.positive_test.relabel_yes.img_qemu_grp.qemu_user.dynamic_ownership_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.positive_test.relabel_yes.img_qemu_grp.qemu_user.dynamic_ownership_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.positive_test.relabel_yes.img_qemu_grp.root_user.dynamic_ownership_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.negative_test.relabel_yes.img_root.qemu_user.dynamic_ownership_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.negative_test.relabel_yes.img_root.root_user.dynamic_ownership_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.negative_test.relabel_yes.img_qemu.root_user.dynamic_ownership_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.negative_test.relabel_yes.img_qemu.root_user.dynamic_ownership_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.negative_test.relabel_yes.img_qemu_grp.root_user.dynamic_ownership_off
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_per_disk_hotplug.negative_test.relabel_no.img_qemu.qemu_user.dynamic_ownership_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_name.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_name.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_name.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_name.error_test.no_exist_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_name.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_name.error_test.extra_args_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_name.error_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command_fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.sparse_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.sparse_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.sparse_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.allocate_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.allocate_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.allocate_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.delta_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.delta_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.delta_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.delta_allocate_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.delta_allocate_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.non_acl.delta_allocate_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.sparse_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.sparse_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.sparse_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.allocate_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.allocate_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.allocate_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.delta_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.delta_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.delta_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.delta_allocate_capacity.dir_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.delta_allocate_capacity.fs_pool
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.positive_test.acl_test.delta_allocate_capacity.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.negative_test.no_space_allocation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.negative_test.unsupport_pool_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_resize.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: usb_passthrough.All
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: usb_passthrough.device
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_disk.source_format_dos
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_disk.source_format_dvh
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_disk.source_format_gpt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_disk.source_format_mac
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_disk.source_format_bsd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_disk.source_format_pc98
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_disk.source_format_sun
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_fs.source_format_ext2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_fs.source_format_ext3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_fs.source_format_ext4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_fs.source_format_vfat
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_fs.source_format_xfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_logical.source_format_lvm2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_logical.source_format_auto
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_netfs.source_format_nfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_netfs.source_format_glusterfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_iscsi.ipv4_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_iscsi.ipv6_target
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.pool.positive_test.pool_type_gluster
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.normal_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.normal_test.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.invalid_uuid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vcpuinfo.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.normal_test.non_acl.default_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.normal_test.non_acl.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.normal_test.acl_test.default_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.normal_test.acl_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.error_test.no_net_extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.error_test.extra_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.error_test.extra_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.error_test.inactive_status_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_destroy.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.normal_test.single_disk.copy_storage_inc.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.normal_test.single_disk.copy_storage_all.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.normal_test.multi_disks.copy_storage_inc.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.normal_test.multi_disks.copy_storage_inc.lvm_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.normal_test.multi_disks.copy_storage_all.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.normal_test.multi_disks.copy_storage_all.lvm_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.error_test.space_occupied.copy_storage_inc.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.error_test.space_occupied.copy_storage_all.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.error_test.nonexist_image.copy_storage_inc.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.error_test.nonexist_image.copy_storage_all.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.error_test.migration_interupted.copy_storage_inc.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_copy_storage.error_test.migration_interupted.copy_storage_all.file_image
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.positive_tests.non_acl.full_fstrim
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.positive_tests.non_acl.part_fstrim
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.positive_tests.non_acl.full_fstrim_with_minimum
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.positive_tests.acl_test.full_fstrim
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.positive_tests.acl_test.part_fstrim
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.positive_tests.acl_test.full_fstrim_with_minimum
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.negtive_tests.invalid_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.negtive_tests.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.negtive_tests.no_qemu_guest_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domfstrim.negtive_tests.no_start_qemu_guest_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.with_mb.trans_enable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.with_mb.trans_enable.static_nonzero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.with_mb.trans_enable.static_zero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.with_mb.trans_disable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.with_mb.trans_disable.static_nonzero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.with_mb.trans_disable.static_zero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_enable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_enable.static_nonzero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_enable.static_zero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_enable.static_zero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_disable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_disable.static_nonzero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_disable.static_zero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.normal.without_mb.trans_disable.static_zero.umount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.contrast.with_mb.trans_disable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.stress.with_mb.trans_enable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.stress.with_mb.trans_disable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.unixbench.with_mb.trans_enable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_hugepage.unixbench.with_mb.trans_disable.static_nonzero.mount_hugetlbfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_0.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_0.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_0.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_0.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_0.no_filename_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_0.no_screen_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_1.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_1.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_1.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_1.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_1.no_filename_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.non_acl.screen_1.no_screen_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_0.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_0.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_0.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_0.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_0.no_filename_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_0.no_screen_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_1.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_1.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_1.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_1.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_1.no_filename_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.normal_test.acl_test.screen_1.no_screen_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.invalid__uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.multiple_screen_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.empty_screen_number
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.unexpected_screen_number
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.empty_filename_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.screenshot.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.id_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.id_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.id_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.name_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.name_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.name_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.paused_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.paused_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.paused_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.uuid_option.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.uuid_option.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.uuid_option.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.remote.no_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.remote.agent_mode.no_agent
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.normal_test.remote.agent_mode.agent_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.unexpected_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.with_libvirt_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.reboot.error_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: lxc_life_cycle.full_os
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: lxc_life_cycle.simple_container
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.live.default.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.live.p2p.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.live.p2p_tunnelled.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.live.direct.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.combination_options.default.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.combination_options.p2p.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.combination_options.p2p_tunnelled.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.normal.combination_options.direct.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.live.default.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.live.p2p.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.live.p2p_tunnelled.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.live.direct.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.combination_options.default.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.combination_options.p2p.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.combination_options.p2p_tunnelled.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.simultaneous.abort_job.combination_options.direct.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.live.default.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.live.p2p.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.live.p2p_tunnelled.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.live.direct.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.combination_options.default.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.combination_options.p2p.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.combination_options.p2p_tunnelled.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_multi_vms.orderly.combination_options.direct.local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_started.sigquit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_started.sigint
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_started.sigterm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_started.sighup
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_started.sigabrt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_started.sigkill
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_info.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.max_id.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.min_id.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.normal_id.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync.string_id.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_sync.sync_extra.normal_id.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_shutdown.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_busy.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_ping.guest_cpu_normal.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fstrim.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_thaw.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_freeze.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.no_arguments.guest_fsfreeze_status.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_shutdown.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_busy.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_ping.guest_cpu_normal.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fstrim.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_thaw.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_freeze.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.null_arguments.guest_fsfreeze_status.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_shutdown.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_busy.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_ping.guest_cpu_normal.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fstrim.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_thaw.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_freeze.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.non_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.non_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.non_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.timeout_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.timeout_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.timeout_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.pretty_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.pretty_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.pretty_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.async_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.async_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.async_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.block_option.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.block_option.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.normal_test.guest_cmd_valid.invalid_arguments.guest_fsfreeze_status.block_option.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.invalid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.none_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.invalid_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.invalid_cmd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_sync_invalid.sync.float_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_sync_invalid.sync.not_integer_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_sync_invalid.sync.max_plus_one_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_sync_invalid.sync.min_minus_one_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_sync_invalid.sync_no_id.normal_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_sync_invalid.sync_xyz.normal_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_sync_invalid.sync_argument.normal_id
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_cmd_invalid.argument.guest_ping
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_cmd_invalid.argument.guest_fstrim
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_cmd_invalid.argument.guest_fsfreeze_thaw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_cmd_invalid.argument.guest_fsfreeze_freeze
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.invalid_options.guest_cmd_invalid.argument.guest_fsfreeze_status
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.vm_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.vm_paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.no_ga
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.vm_halt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_agent_command.error_test.vm_pm_suspend
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_save_restore.disk_label_svirt_image_s0.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_save_restore.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_save_restore.disk_label_svirt_image_s0.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_save_restore.disk_label_svirt_image_MCS1.sec_relabel_no.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_save_restore.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_dynamic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_save_restore.disk_label_svirt_image_MCS1.sec_relabel_yes.sec_type_static
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_complete.copy_storage_inc.stress_on_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_complete.copy_storage_inc.stress_on_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_complete.copy_storage_all.stress_on_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_complete.copy_storage_all.stress_on_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_pause_resume.copy_storage_inc.stress_on_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_pause_resume.copy_storage_inc.stress_on_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_pause_resume.copy_storage_all.stress_on_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_pause_resume.copy_storage_all.stress_on_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_cancel.copy_storage_inc.stress_on_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_cancel.copy_storage_inc.stress_on_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_cancel.copy_storage_all.stress_on_memory
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_monitor_blockjob.blockjob_cancel.copy_storage_all.stress_on_cpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_valid_option.domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_valid_option.uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_valid_option.name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_valid_option.inactive_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_valid_option.iface_model.virtio_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_valid_option.iface_model.e1000_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_valid_option.iface_model.rtl8139_iface
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_invalid_option.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_invalid_option.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_invalid_option.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domiflist.with_invalid_option.addition_invalid_param
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_list.normal_test.non_acl
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_list.normal_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nwfilter_list.error_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.positive_testing.allow_one_sasl_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.positive_testing.allow_sasl_users
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.positive_testing.customized_ipv4_tcp_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.positive_testing.customized_ipv4_listen_address_with_sasl_auth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.positive_testing.customized_ipv6_listen_address
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.positive_testing.customized_ipv6_tcp_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.positive_testing.customized_ipv6_listen_address_with_sasl_auth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.negative_testing.only_simpy_connect_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.negative_testing.no_allowed_sasl_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.negative_testing.ipv4_with_allowed_sasl_user_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_tcp.negative_testing.ipv6_with_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.normal_test.remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.error_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.error_test.invalid__uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vncdisplay.error_test.unexpected_option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.non_acl.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.non_acl.tree_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.non_acl.one_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.non_acl.multi_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.non_acl.long_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.acl_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.acl_test.tree_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.acl_test.one_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.acl_test.multi_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.valid_option.acl_test.long_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.invalid_option.both_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.invalid_option.num_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_list.invalid_option.invalid_cap_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_raw.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qcow2.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_raw.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qcow2.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.dir.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.disk.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.fs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.logical.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.fs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.logical
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.netfs
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.iscsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.vol_create_from.positive_test.dest_vol_format.v_qed.src_vol_format.v_qed.dest_pool_type.netfs.src_pool_type.scsi
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.variable_notation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.ip_learning.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.ip_learning.kill_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.chain_priority_greater_than_rule
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.dhcpserver_variable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.disallow_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.disallow_dhcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.disallow_arp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.clean_traffic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.allow_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.noexec_tmp_dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.new_filter.ipset_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.no_other_l2_traffic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.no_mac_spoofing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.no_mac_broadcast
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.no_ip_spoofing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.no_arp_spoofing
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.allow_dhcp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.allow_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.allow_incoming_ipv4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.possitive_test.default_filter.allow_arp
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.negative_test.ip_learning_err
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: nwfilter_vm_start.negative_test.dhcpserver_variable
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodeinfo.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodeinfo.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodeinfo.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_memory.default_unit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_memory.mib_unit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_memory.gib_unit
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_iface.iface_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_iface.iface_model
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_rng.backend_null
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_rng.backend_dev
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_rng.backend_type_unix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.name_option.edit_rng.backend_type_invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.id_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.shut_off_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.paused_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.positive_test.uuid_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.negative_test.no_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.negative_test.invalid_id_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.negative_test.unexpect_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.negative_test.invalid_uuid_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.negative_test.extra_option.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.edit.negative_test.with_libvirtd_stop.edit_vcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.root_spec.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.root_spec.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.enable_dynamic_ownership.process_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.qemu_conf_only.non_root.with_qemu_conf.disable_dynamic_ownership.process_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.none.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.unconfine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.none.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.unconfine
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.process_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.dynamic.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.process_name
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.107.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_id.0.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_root.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu_group_user.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu_group_user.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu_group_user.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu_group_user.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.with_name.s_qemu_group_user.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.107_plus.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_mix.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_no.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.enable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_grp_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.root_usr
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.positive_test.sec_label.static.label_mix.qemu_other_group.relabel_yes.mix_together.with_qemu_conf.disable_dynamic_ownership.qemu_id_mix
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.negative_test.sec_label.static.invalid_label.invalid_id.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.negative_test.sec_label.static.invalid_label.invalid_id.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.negative_test.sec_label.static.invalid_label.invalid_str.relabel_no.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: dac_start_destroy.negative_test.sec_label.static.invalid_label.invalid_str.relabel_yes.no_mix.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.version.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.version.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.version.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.version.daemon_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.normal_test.non_acl.valid_netname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.normal_test.non_acl.valid_netuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.normal_test.acl_test.valid_netname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.normal_test.acl_test.valid_netuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.error_test.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.error_test.start_twice
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.error_test.invalid_netname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.error_test.additional_args
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.error_test.additional_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_start.error_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_operate.no_operation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_operate.save
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_operate.managedsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_operate.suspend_to_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_operate.suspend_to_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.libvirtd_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.pin_plug_unplug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.pin_unplug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.plug_pin
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.unplug_pin
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_operate.no_operation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_operate.save
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_operate.managedsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_operate.suspend_to_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_operate.suspend_to_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.libvirtd_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.no_operation
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.save
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.managedsave
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.suspend_to_mem
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.suspend_to_disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.libvirtd_restart
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.negative_test.greater_plug_number
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.negative_test.readonly_setvcpu
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.negative_test.no_ga_channel
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.negative_test.no_install_qemuga
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.negative_test.no_start_qemuga
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_vcpu_plug_unplug.negative_test.guest_plug
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.default_unix_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.customized_unix_sock_dir
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.default_config_and_start_vm
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.allow_sasl_users
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.socket_access_controls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.socket_with_auth_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.socket_with_polkit_and_acl_control
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.positive_testing.socket_with_polkit_rw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.negative_testing.no_allowed_sasl_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.negative_testing.allow_sasl_user_with_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.negative_testing.readonly_without_auth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.negative_testing.socket_access_controls
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_unix.negative_testing.socket_with_polkit_ro
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_pci_passthrough.NIC.Normal_passthrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_pci_passthrough.NIC.SRIOV
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_pci_passthrough.STORAGE.Normal_passthrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_pci_passthrough.STORAGE.SRIOV
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save_image_edit.running
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.save_image_edit.paused
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.negative_tests.without_current_snapname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_snapname.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_none.edit_option_current_and_snapname.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_snapname.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current_and_snapname.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_snapname.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.internal_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.internal_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.internal_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.without_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.without_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.without_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.with_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.with_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.with_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.delete_desc.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.delete_desc.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.disk_snapshot.delete_desc.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.mem_snapshot.internal_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.mem_snapshot.disk_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.snapshot_edit.positive_tests.edit_option_rename.edit_option_current_and_snapname.mem_snapshot.mem_snapshot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_virt_content.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_virt_content.relabel_yes.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_static.default_model.with_qemu_conf.unconfined
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.multi_model.with_qemu_conf.unconfined
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.multi_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.default_model.with_qemu_conf.unconfined
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_yes.st_dynamic.no_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_yes.st_dynamic.no_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_yes.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.with_baselabel.legit.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.with_baselabel.mess_MCS.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_s0.with_baselabel.mess_u_r.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_MCS.relabel_no.st_static.default_model.with_qemu_conf.unconfined
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_MCS.relabel_no.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_MCS.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_destroy.d_svirt_img_MCS.relabel_yes.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_virt_content.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_virt_content.relabel_yes.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_svirt_img_s0.no_baselabel.relabel_no.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_svirt_img_s0.no_baselabel.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_svirt_img_s0.no_baselabel.relabel_yes.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_svirt_img_MCS.relabel_no.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_svirt_img_MCS.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.positive_test.off_shutdown.d_svirt_img_MCS.relabel_yes.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_virt_content.relabel_no.st_static.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_virt_content.relabel_no.st_static.default_model.with_qemu_conf.unconfined
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_virt_content.relabel_no.st_static.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_virt_content.relabel_yes.st_dynamic.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_virt_content.relabel_yes.st_static.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_static.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.multi_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.multi_model.with_qemu_conf.required_confined
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_no.st_none.default_model.with_qemu_conf.required_confined
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_yes.st_dynamic.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.no_baselabel.relabel_yes.st_static.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.with_baselabel.mess_t.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_s0.with_baselabel.invalid_str.relabel_yes.st_dynamic.default_model.without_qemu_conf
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_MCS.relabel_no.st_static.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_MCS.relabel_yes.st_dynamic.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: svirt_start_destroy.negative_test.off_destroy.d_svirt_img_MCS.relabel_yes.st_static.default_model.with_qemu_conf.security_driver_none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.positive_test.local_source.nfs_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.positive_test.local_source.iscsi_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.positive_test.local_source.logical_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.negative_test.unsupport_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.negative_test.invalid_type
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.negative_test.invalid_host
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.negative_test.invalid_port
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.negative_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.find_storage_pool_sources_as.negative_test.readonly_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.normal_test.non_acl.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.normal_test.non_acl.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.normal_test.non_acl.inactive_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.normal_test.acl_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.normal_test.acl_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.normal_test.acl_test.inactive_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.error_test.no_exist_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_dumpxml.error_test.extra_args_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.pci_root
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.pcie_root
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.virtio_serial
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.virtio_serial_0_vectors
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.auto_addr.ich9-uhci1.master_ehci
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.auto_addr.ich9-uhci1.master_ich9-ehci1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.auto_addr.ich9-uhci2.master_ehci
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.auto_addr.ich9-uhci2.master_ich9-ehci1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.auto_addr.ich9-uhci3.master_ehci
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.auto_addr.ich9-uhci3.master_ich9-ehci1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.manual_addr.ich9-uhci1.master_ehci
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.manual_addr.ich9-uhci1.master_ich9-ehci1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.manual_addr.ich9-uhci2.master_ehci
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.manual_addr.ich9-uhci2.master_ich9-ehci1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.manual_addr.ich9-uhci3.master_ehci
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.positive_tests.usb_controller.manual_addr.ich9-uhci3.master_ich9-ehci1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: controller.functional.negative_tests.invalid_index
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.normal_test.default
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.normal_test.xen_uri
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.normal_test.qemu_system_uri
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.normal_test.qemu_session_uri
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.normal_test.lxc_uri
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.normal_test.readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.error_test.unrecognized_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.error_test.unrecognized_opt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.local_connect.error_test.multi_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.transport_connect.ssh_transport
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.transport_connect.tls_transport
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.transport_connect.unix_transport
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.connect.transport_connect.tcp_transport
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: numad_vcpupin
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.single_serial.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_serial.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.serial.multi_type.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.console.type_pty.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_pty.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.character.channel.type_unix.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.controller.type_scsi.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_ide_bus.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_ide_bus.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_ide_bus.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_ide_bus.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_sata_bus.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_sata_bus.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_sata_bus.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_file.error_test.unsupport_sata_bus.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_virtio_file.error_test.invalid_disk_type.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_usb_file.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.single_scsi_file.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm.live_config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.hot_attach_hot_vm_current.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.block.multi_virtio_file.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.persistent.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_cold_vm.config.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.name_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.name_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.uuid_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.normal_test.cold_attach_hot_vm.uuid_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_file_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_file_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_file_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_file_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.missing_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.missing_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.missing_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.missing_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_file.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_file.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_file.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_file.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_name.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_name.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_name.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.no_name.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_name_string.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_name_string.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_name_string.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.empty_name_string.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hex_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hex_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hex_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hex_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_id_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_id_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_id_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_id_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.unexpect_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.unexpect_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.unexpect_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.unexpect_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_uuid_option.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_uuid_option.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_uuid_option.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.invalid_uuid_option.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_value.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_value.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_value.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_value.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.extra_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.help_parameter.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.help_parameter.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.help_parameter.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.help_parameter.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hot_attach_cold_vm.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hot_attach_cold_vm.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hot_attach_cold_vm.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.hot_attach_cold_vm.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.cold_attach_id_ref.file_positional.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.cold_attach_id_ref.file_positional.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.cold_attach_id_ref.file_argument.domain_positional
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device.multiple.VirtualDiskBasic_SerialFile_SerialPipe.error_test.cold_attach_id_ref.file_argument.domain_argument
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.ssh_diff_libvirt_version
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.ssh_static_ipv6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.gssapi_auth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.test_uri_with_default_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.test_uri_with_root_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.xen_uri_with_default_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.xen_uri_with_root_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.esx_uri_with_default_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.positive_testing.esx_uri_with_root_user
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.libssh2_no_auth
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.ssh_no_uri_path
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.ssh_read_only_mode
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.ssh_no_ipv6_config
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.stop_libvirtd
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.incorrect_password
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.ipv4_with_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.remote_with_ssh.negative_testing.ipv6_with_readonly
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_starting.virStateInitialize
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_starting.qemuStateInitialize
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_starting.netcfStateInitialize
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_starting.networkStateInitialize
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: daemon.kill_starting.nwfilterStateInitialize
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.no_bench.qemu_monitor.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.no_bench.qemu_monitor.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.no_bench.qemu_monitor.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.no_bench.qemu_monitor.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.no_bench.attach_device.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.iozone.qemu_monitor.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.iozone.qemu_monitor.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.iozone.qemu_monitor.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.iozone.qemu_monitor.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.iozone.attach_device.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.stress.qemu_monitor.keyboard
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.stress.qemu_monitor.mouse
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.stress.qemu_monitor.tablet
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.stress.qemu_monitor.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: libvirt_bench.usb_hotplug.stress.attach_device.disk
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.pause_dump.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.pause_dump.crash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.pause_dump.reset
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.live_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.crash_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.reset_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.bypass_cache_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.bypass_cache_reset_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.memory_dump.default_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.memory_dump.elf_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.memory_dump.kdump-zlib_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.memory_dump.kdump-lzo_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.memory_dump.kdump-snappy_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.memory_crash_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.memory_bypass_cache_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.lzop_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.gzip_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.bzip2_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.xz_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.invalid_image_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.include_guest_memory_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.non_acl.exclude_guest_memory_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.pause_dump.live
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.pause_dump.crash
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.pause_dump.reset
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.live_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.crash_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.reset_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.bypass_cache_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.bypass_cache_reset_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.memory_dump.default_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.memory_dump.elf_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.memory_dump.kdump-zlib_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.memory_dump.kdump-lzo_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.memory_dump.kdump-snappy_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.memory_crash_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.memory_bypass_cache_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.lzop_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.gzip_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.bzip2_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.xz_format_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.invalid_image_format
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.include_guest_memory_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.positive_test.acl_test.exclude_guest_memory_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.no_dump_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.unexist_dir_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.invalid_option1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.invalid_option2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.invalid_option3
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.invalid_option4
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.shutoff_dump
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.dump.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.uri.no_option.connect_to_local
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.uri.no_option.connect_to_remote
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.uri.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.uri.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirton.expected_options.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirton.expected_options.expected_option_all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirton.expected_options.expected_args_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirton.error_test.unexpected_args_xyz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirton.error_test.unexpected_args_12345
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirton.error_test.unexpected_option_xyz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirtoff.expected_options.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirtoff.expected_options.expected_option_all
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirtoff.expected_options.expected_args_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirtoff.error_test.unexpected_args_xyz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirtoff.error_test.unexpected_args_12345
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.freecell.libvirtoff.error_test.unexpected_option_xyz
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_dumpxml.positve_test.non_acl.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_dumpxml.positve_test.acl_test.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_dumpxml.negative_test.nodedev_notfound
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_dumpxml.negative_test.nodedev_spacename
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_dumpxml.negative_test.nodedev_unknowopt
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_dumpxml.negative_test.nodedev_multi_dev
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodedev_dumpxml.negative_test.acl_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: vfio.nic_group
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: vfio.fibre_group
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: vfio.nic_and_fibre_group
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: vfio.nic_single_to_iommu_group
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: vfio.primary_boot.nic
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: vfio.primary_boot.fibre
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.positive_test.lowercase_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.positive_test.uppercase_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.positive_test.no_hyphen_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.positive_test.single_quoted_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.positive_test.all_same_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.positive_test.not_set_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.negative_test.empty_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.negative_test.unquoted_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.negative_test.unterminated_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.negative_test.over_hyphen_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.negative_test.invalid_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.negative_test.short_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: conf_file.libvirtd_conf.host_uuid.negative_test.long_uuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_drive.set_multifunction_on.single_device.function_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_drive.set_multifunction_on.single_device.function_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_drive.set_multifunction_on.single_device.function_7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_drive.set_multifunction_on.single_device.function_8
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.single_device.function_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.single_device.function_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.single_device.function_7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.single_device.function_8
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.multi_devices.increased_slot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.multi_devices.increased_func.from_0x0.with_all_multifunction_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.multi_devices.increased_func.from_0x1.with_all_multifunction_on
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_on.multi_devices.no_increase
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.single_device.function_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.single_device.function_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.single_device.function_7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.single_device.function_8
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.multi_devices.increased_slot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.multi_devices.increased_func.from_0x0.with_others
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.multi_devices.increased_func.from_0x1.with_others
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.set_multifunction_off.multi_devices.no_increase
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.single_device.function_-1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.single_device.function_0
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.single_device.function_7
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.single_device.function_8
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.multi_devices.increased_slot
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.multi_devices.increased_func.from_0x0.with_others
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.multi_devices.increased_func.from_0x1.with_others
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: multifunction.set_type_pci.no_multifunction_set.multi_devices.no_increase
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.details_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.inactive_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.inactive_with_shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.inactive_with_details_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.normal_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domblklist.error_test.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodecpumap.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodecpumap.pretty_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodecpumap.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.normal_test.vm_paused.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.normal_test.vm_paused.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.normal_test.vm_paused.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.normal_test.vm_running.valid_domname
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.normal_test.vm_running.valid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.normal_test.vm_running.valid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.error_test.none
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.error_test.invalid_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.error_test.invalid_domuuid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.error_test.hex_domid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.error_test.additional_arg
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.resume.error_test.vm_shutoff
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_attach.normal_test
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_attach.error_test.invalid_pid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_attach.error_test.invalid_pid1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_attach.error_test.none_pid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.qemu_attach.error_test.invalid_options
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_config.dt_option_current.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live_config.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live_config.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_running.at_option_live_config.dt_option_live_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_current.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_current.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_current.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_default.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_default.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_default.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_default.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_default.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_shutoff.at_option_live_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_config.dt_option_live.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_config.dt_option_current.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_config.dt_option_default.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_config.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live_config.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live_config.dt_option_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live_config.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live_config.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_paused.at_option_live_config.dt_option_live_config.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_current.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_current.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_current.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_current.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_current.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_default.dt_option_live.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_default.dt_option_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_default.dt_option_current.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_default.dt_option_default.at_okay_dt_okay
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_default.dt_option_live_config.at_okay_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live_config.dt_option_live.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live_config.dt_option_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live_config.dt_option_current.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live_config.dt_option_default.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.attach_device_matrix.pre_vm_state_transient.at_option_live_config.dt_option_live_config.at_error_dt_error
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.default_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.delete_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_policy.require_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_policy.optional_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_policy.forbid_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_policy.disable_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_policy.force_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_name.repeat_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_name.unsupport_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_name.invalid_feature1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_feature_name.invalid_feature2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.modify_vendor
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.empty_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.invalid_ref
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.no_cpu_match.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.default_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.delete_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_policy.require_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_policy.optional_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_policy.forbid_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_policy.disable_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_policy.force_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_name.repeat_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_name.unsupport_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_name.invalid_feature1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_feature_name.invalid_feature2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.modify_vendor
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.empty_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.invalid_ref
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.minimum_cpu_match.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.default_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.delete_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_policy.require_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_policy.optional_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_policy.forbid_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_policy.disable_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_policy.force_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_name.repeat_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_name.unsupport_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_name.invalid_feature1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_feature_name.invalid_feature2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.modify_vendor
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.empty_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.invalid_ref
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.exact_cpu_match.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.default_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.delete_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_policy.require_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_policy.optional_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_policy.forbid_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_policy.disable_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_policy.force_policy
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_name.repeat_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_name.unsupport_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_name.invalid_feature1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_feature_name.invalid_feature2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.modify_vendor
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.empty_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.invalid_ref
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.host_cpu.strict_cpu_match.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.default_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.delete_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_feature_name.repeat_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_feature_name.unsupport_feature
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_feature_name.invalid_feature1
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_feature_name.invalid_feature2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_vendor
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_mode.host_model
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_mode.host_passthrough
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_mode.invalid_model
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_model.cpu64-rhel5
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_model.cpu64-rhel6
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.modify_model.invalid_model
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.empty_xml_file
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.invalid_ref
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.cpu_compare.guest_cpu.invalid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.normal_test.id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.normal_test.paused_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.normal_test.dump_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.normal_test.restore_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.hex_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.invalid_id_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.unexpect_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.extra_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.shutoff_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.save_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.domjobinfo.error_test.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodememstats.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodememstats.with_libvirtd_stop
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodememstats.cell_test.zero
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodememstats.cell_test.zero2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodememstats.cell_test.invalid
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodememstats.cell_test.not_int
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.nodememstats.cell_test.max_plus_one
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.single_disk.disk_device.file_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.single_disk.disk_device.file_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.disk_device.file_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.disk_device.file_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.disk_device.block_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.disk_device.block_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.lun_device.file_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.lun_device.file_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.lun_device.block_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.1.lun_device.block_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.256.disk_device.file_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.256.disk_device.file_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.256.lun_device.file_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.attach_before_migration.multiple_disks.256.lun_device.file_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.disk_device.file_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.disk_device.file_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.disk_device.block_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.disk_device.block_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.lun_device.file_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.lun_device.file_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.lun_device.block_source.format_raw
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.migrate_virtio_scsi.migrating_attachment.multiple_disks.1.lun_device.block_source.format_qcow2
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_info.normal_test.name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_info.normal_test.uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_info.error_test.space_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_info.error_test.no_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_info.error_test.invalid_name_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_info.error_test.invalid_uuid_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.autocase
  pk: virsh.net_info.error_test.additional_option
  fields:
    framework: libvirt-ci
    start_commit: null
    end_commit: null
    archs: ['']
    components: []
- model: caselink.caselink
  pk: 1
  fields: {workitem: RHEL7-19113, autocase_pattern: virsh.attach_detach_disk.attach_disk.normal_test.audit_check,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug] Audit check when
      detach disk - bug 710150'}
- model: caselink.caselink
  pk: 2
  fields: {workitem: RHEL7-19113, autocase_pattern: virsh.attach_detach_disk.detach_disk.normal_test.audit_check,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug] Audit check when
      detach disk - bug 710150'}
- model: caselink.caselink
  pk: 3
  fields: {workitem: RHEL7-19064, autocase_pattern: virsh.attach_detach_disk.detach_disk.normal_test.special_disk_name.local_disk_name,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug] Attach a disk with
      specific name - bug 829246'}
- model: caselink.caselink
  pk: 4
  fields: {workitem: RHEL7-19064, autocase_pattern: virsh.attach_detach_disk.detach_disk.normal_test.special_disk_name.attch_disk_name,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug] Attach a disk with
      specific name - bug 829246'}
- model: caselink.caselink
  pk: 5
  fields: {workitem: RHEL7-19073, autocase_pattern: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_type.file_disk_type,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][block] attach-disk
      should detect disk source file type when sourcetype is not specified - bug 803577'}
- model: caselink.caselink
  pk: 6
  fields: {workitem: RHEL7-19073, autocase_pattern: virsh.attach_detach_disk.attach_disk.normal_test.attach_disk_type.block_disk_type,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][block] attach-disk
      should detect disk source file type when sourcetype is not specified - bug 803577'}
- model: caselink.caselink
  pk: 7
  fields: {workitem: RHEL7-19062, autocase_pattern: multi_disks_test.virtio_disks_format,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug] Attach disk with
      allow disk format probing'}
- model: caselink.caselink
  pk: 8
  fields: {workitem: RHEL7-19071, autocase_pattern: multidisks.coldplug.multi_disks_test.virtio_disks_order,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug] Attach disks with
      random target order in xml - bug 683005'}
- model: caselink.caselink
  pk: 9
  fields: {workitem: RHEL7-19170, autocase_pattern: multivms.hotplug.vms_sgio_share_normal_test,
    framework: libvirt-ci, title: '[virtual disks][block][sgio] lun device with sgio
      element tests - bug 878578, 877527'}
- model: caselink.caselink
  pk: 10
  fields: {workitem: RHEL7-19170, autocase_pattern: multivms.coldplug.vms_sgio_share_normal_test,
    framework: libvirt-ci, title: '[virtual disks][block][sgio] lun device with sgio
      element tests - bug 878578, 877527'}
- model: caselink.caselink
  pk: 11
  fields: {workitem: RHEL7-19170, autocase_pattern: multivms.coldplug.vms_sgio_share_error_test,
    framework: libvirt-ci, title: '[virtual disks][block][sgio] lun device with sgio
      element tests - bug 878578, 877527'}
- model: caselink.caselink
  pk: 12
  fields: {workitem: RHEL7-19165, autocase_pattern: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.invalid_cache,
    framework: libvirt-ci, title: '[virtual disks] Attach disk with --cache - bug
      829562'}
- model: caselink.caselink
  pk: 13
  fields: {workitem: RHEL7-19165, autocase_pattern: virsh.attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_cache,
    framework: libvirt-ci, title: '[virtual disks] Attach disk with --cache - bug
      829562'}
- model: caselink.caselink
  pk: 14
  fields: {workitem: RHEL7-19111, autocase_pattern: virtual_disks.multidisks.hotplug.single_disk_test.disk_scsi_block_size,
    framework: libvirt-ci, title: '[Virtual Disk] Create a domain with blockio element
      -bug749122, 960803'}
- model: caselink.caselink
  pk: 15
  fields: {workitem: RHEL7-19111, autocase_pattern: virtual_disks.multidisks.hotplug.single_disk_test.disk_virtio_block_size,
    framework: libvirt-ci, title: '[Virtual Disk] Create a domain with blockio element
      -bug749122, 960803'}
- model: caselink.caselink
  pk: 16
  fields: {workitem: RHEL7-19111, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_scsi_block_size,
    framework: libvirt-ci, title: '[Virtual Disk] Create a domain with blockio element
      -bug749122, 960803'}
- model: caselink.caselink
  pk: 17
  fields: {workitem: RHEL7-19111, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_virtio_block_size,
    framework: libvirt-ci, title: '[Virtual Disk] Create a domain with blockio element
      -bug749122, 960803'}
- model: caselink.caselink
  pk: 18
  fields: {workitem: RHEL7-19109, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk,
    framework: libvirt-ci, title: '[virtual disks] Create a domain with optional driver
      elements - bug 725448'}
- model: caselink.caselink
  pk: 19
  fields: {workitem: RHEL7-19156, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_serial_wwn,
    framework: libvirt-ci, title: '[virtual disks][SCSI] Create domain with ide/scsi
      disks with wwn,serial,vendor,product - bug 831099, 952497'}
- model: caselink.caselink
  pk: 20
  fields: {workitem: RHEL7-19175, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_copy_on_read_off
      (requires root), framework: libvirt-ci, title: '[virtual disks] Start guest
      with copy_on_read disk'}
- model: caselink.caselink
  pk: 21
  fields: {workitem: RHEL7-19175, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_copy_on_read_on
      (requires root), framework: libvirt-ci, title: '[virtual disks] Start guest
      with copy_on_read disk'}
- model: caselink.caselink
  pk: 22
  fields: {workitem: RHEL7-19116, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_type_dir,
    framework: libvirt-ci, title: '[Virtual disks] Start guest with dir type disks
      --bug 525074'}
- model: caselink.caselink
  pk: 23
  fields: {workitem: RHEL7-19104, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_source_file_name,
    framework: libvirt-ci, title: '[virtual disks] Support disk file name with comma
      - bug 801970'}
- model: caselink.caselink
  pk: 24
  fields: {workitem: RHEL7-19134, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_bootorder_snapshot,
    framework: libvirt-ci, title: '[virtual disks][boot order] Define/start/destroy/save/restore/snapshot
      a domain with ''boot order'' defined'}
- model: caselink.caselink
  pk: 25
  fields: {workitem: RHEL7-19106, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_discard_unmap,
    framework: libvirt-ci, title: '[virtual disks] Enable discard support - bug 821045'}
- model: caselink.caselink
  pk: 26
  fields: {workitem: RHEL7-19106, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_driver_option.option_discard_ignore,
    framework: libvirt-ci, title: '[virtual disks] Enable discard support - bug 821045'}
- model: caselink.caselink
  pk: 27
  fields: {workitem: RHEL7-19139, autocase_pattern: virtual_disks.multidisks.hotplug.multi_disks_test.disks_bootorder_error_test,
    framework: libvirt-ci, title: '[virtual disks][boot order] Attach/Detach a disk
      with boot order in xml - bug1007759'}
- model: caselink.caselink
  pk: 28
  fields: {workitem: RHEL7-19198, autocase_pattern: virtual_disks.multivms.coldplug.vms_error_policy_test,
    framework: libvirt-ci, title: '[virtual disks] make sure the option error_policy
      is working as expected'}
- model: caselink.caselink
  pk: 29
  fields: {workitem: RHEL7-19197, autocase_pattern: virtual_disks.multidisks.coldplug.multi_disks_test.disks_bootorder,
    framework: libvirt-ci, title: '[Virtual disks][boot order] Check the boot order
      while starting domain'}
- model: caselink.caselink
  pk: 30
  fields: {workitem: RHEL7-16705, autocase_pattern: virtual_disks.encryption.encryption_test,
    framework: libvirt-ci, title: '[Virtual disks][encryption] - Create a domain with
      qcow2 encrypted disk'}
- model: caselink.caselink
  pk: 31
  fields: {workitem: RHEL7-19085, autocase_pattern: update_device.normal_test.id_option.force_live_option,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] Cannot insert CD
      (update device) to VM when LIVE constant is not used in updateDeviceFlags command
      - bug 716826'}
- model: caselink.caselink
  pk: 32
  fields: {workitem: RHEL7-19085, autocase_pattern: update_device.normal_test.id_option.force_current_option,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] Cannot insert CD
      (update device) to VM when LIVE constant is not used in updateDeviceFlags command
      - bug 716826'}
- model: caselink.caselink
  pk: 33
  fields: {workitem: RHEL7-19085, autocase_pattern: update_device.normal_test.id_option.current_option,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] Cannot insert CD
      (update device) to VM when LIVE constant is not used in updateDeviceFlags command
      - bug 716826'}
- model: caselink.caselink
  pk: 34
  fields: {workitem: RHEL7-19095, autocase_pattern: update_device.normal_test.offline_persistent,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] persistent option
      of virsh update-device command never work - bug 598792'}
- model: caselink.caselink
  pk: 35
  fields: {workitem: RHEL7-19095, autocase_pattern: update_device.normal_test.online_persistent,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] persistent option
      of virsh update-device command never work - bug 598792'}
- model: caselink.caselink
  pk: 36
  fields: {workitem: RHEL7-19158, autocase_pattern: attach_detach_disk.attach_disk.normal_test.cdrom_eject_control,
    framework: libvirt-ci, title: '[Virtual disks][floppy/cdrom] Save/restore/migration/destroy/restart
      a domain with ejected CDROM  - bug 575160'}
- model: caselink.caselink
  pk: 37
  fields: {workitem: RHEL7-19158, autocase_pattern: migrate.there_vm_eject_cdrom,
    framework: libvirt-ci, title: '[Virtual disks][floppy/cdrom] Save/restore/migration/destroy/restart
      a domain with ejected CDROM  - bug 575160'}
- model: caselink.caselink
  pk: 38
  fields: {workitem: RHEL7-19128, autocase_pattern: attach_detach_disk.attach_disk.normal_test.cdrom_eject_control,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] Using attach-disk/device
      to inject/eject a cdrom to/from guest'}
- model: caselink.caselink
  pk: 39
  fields: {workitem: RHEL7-19146, autocase_pattern: change_media.cdrom_test.positive_test.insert,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] Using change-media
      to insert/eject media - bug 713932, 892289, 952499'}
- model: caselink.caselink
  pk: 40
  fields: {workitem: RHEL7-19146, autocase_pattern: change_media.cdrom_test.negative_test.eject,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] Using change-media
      to insert/eject media - bug 713932, 892289, 952499'}
- model: caselink.caselink
  pk: 41
  fields: {workitem: RHEL7-19083, autocase_pattern: live_floppy_rw.running_guest,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom] Write & read floppy'}
- model: caselink.caselink
  pk: 42
  fields: {workitem: RHEL7-19078, autocase_pattern: update_device.normal_test.id_option.live_option.floppy_option,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][readonly] Start domian
      with readonly floppy'}
- model: caselink.caselink
  pk: 43
  fields: {workitem: RHEL7-19169, autocase_pattern: update_device.normal_test.id_option.shareable_disk,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][shareable] Start
      a guest with shareable block cdrom/floppy - bug 908073'}
- model: caselink.caselink
  pk: 44
  fields: {workitem: RHEL7-19081, autocase_pattern: virtual_disks_multivms.filtered_shareable_option1,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][shareable] Start
      two domains with shareable floppy'}
- model: caselink.caselink
  pk: 45
  fields: {workitem: RHEL7-19129, autocase_pattern: startup_policy.startupPolicy.mandatory.device_type.cdrom,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][startupPolicy] Start
      domain with cdrom disk with startupPolicy=''mandatory'''}
- model: caselink.caselink
  pk: 46
  fields: {workitem: RHEL7-19132, autocase_pattern: startup_policy.startupPolicy.optional.device_type.cdrom,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][startupPolicy] Start
      domain with cdrom disk with startupPolicy=''optional'''}
- model: caselink.caselink
  pk: 47
  fields: {workitem: RHEL7-19136, autocase_pattern: startup_policy.startupPolicy.requisite.device_type.cdrom,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][startupPolicy] Start
      domain with cdrom disk with startupPolicy=''requisite'''}
- model: caselink.caselink
  pk: 48
  fields: {workitem: RHEL7-19137, autocase_pattern: startup_policy.startupPolicy.mandatory.device_type.floppy,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][startupPolicy] Start
      domain with floppy disk with startupPolicy=''mandatory'''}
- model: caselink.caselink
  pk: 49
  fields: {workitem: RHEL7-19141, autocase_pattern: startup_policy.startupPolicy.optional.device_type.floppy,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][startupPolicy] Start
      domain with floppy disk with startupPolicy=''optional'''}
- model: caselink.caselink
  pk: 50
  fields: {workitem: RHEL7-19144, autocase_pattern: startup_policy.startupPolicy.requisite.device_type.floppy,
    framework: libvirt-ci, title: '[virtual disks][floppy/cdrom][startupPolicy] Start
      domain with floppy disk with startupPolicy=''requisite'''}
- model: caselink.caselink
  pk: 51
  fields: {workitem: RHEL7-19070, autocase_pattern: attach_disk_type.block_multifunction_disk_type,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug] Attach virtual
      disks with multifunction = on'}
- model: caselink.caselink
  pk: 52
  fields: {workitem: RHEL7-19077, autocase_pattern: attach_disk_type.block_disk_type,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][block] Attach/Detach
      a block device to/from guest - bug 867726'}
- model: caselink.caselink
  pk: 53
  fields: {workitem: RHEL7-19097, autocase_pattern: attach_detach_disk.attach_disk.normal_test.attach_disk_image_format.qcow2_format,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach
      a qcow2 format disk device to guest'}
- model: caselink.caselink
  pk: 54
  fields: {workitem: RHEL7-19097, autocase_pattern: attach_detach_disk.detach_disk.normal_test.attach_disk_image_format.qcow2_format,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach
      a qcow2 format disk device to guest'}
- model: caselink.caselink
  pk: 55
  fields: {workitem: RHEL7-19099, autocase_pattern: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm_current.name_ref.file_positional.domain_argument,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach
      a raw format disk device from XML file to guest'}
- model: caselink.caselink
  pk: 56
  fields: {workitem: RHEL7-19103, autocase_pattern: attach_detach_disk.attach_disk.normal_test.attach_disk_image_format.raw_format,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach
      a raw format disk device to guest'}
- model: caselink.caselink
  pk: 57
  fields: {workitem: RHEL7-19103, autocase_pattern: attach_detach_disk.detach_disk.normal_test.attach_disk_image_format.raw_format,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][driver type] Attach/Detach
      a raw format disk device to guest'}
- model: caselink.caselink
  pk: 58
  fields: {workitem: RHEL7-19173, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.at_dt_disk_usb,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach
      a iscsi network disk with chap authentication with secret usage'}
- model: caselink.caselink
  pk: 59
  fields: {workitem: RHEL7-19173, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.at_dt_disk_readonly,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach
      a iscsi network disk with chap authentication with secret usage'}
- model: caselink.caselink
  pk: 60
  fields: {workitem: RHEL7-19173, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.at_dt_disk_private_secret,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach
      a iscsi network disk with chap authentication with secret usage'}
- model: caselink.caselink
  pk: 61
  fields: {workitem: RHEL7-19181, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.at_dt_disk_ipv4,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach
      an ipv6 iscsi lun to/from guest'}
- model: caselink.caselink
  pk: 62
  fields: {workitem: RHEL7-19181, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.at_dt_disk_ipv6,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach
      an ipv6 iscsi lun to/from guest'}
- model: caselink.caselink
  pk: 63
  fields: {workitem: RHEL7-19105, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.ipv4_virtio_bus,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][iSCSI] Attach/Detach
      an iscsi disk to/from guest'}
- model: caselink.caselink
  pk: 64
  fields: {workitem: RHEL7-19065, autocase_pattern: virsh.attach_detach_disk.attach_disk.error_test.only_attach_disk.invalid_driver,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][negative] Attach
      disk with unsupported driver'}
- model: caselink.caselink
  pk: 65
  fields: {workitem: RHEL7-19067, autocase_pattern: virsh.attach_device.block.single_virtio_file.error_test.invalid_disk_type.file_positional.domain_positional,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][negative] Attach
      disk with wrong xml'}
- model: caselink.caselink
  pk: 66
  fields: {workitem: RHEL7-19074, autocase_pattern: attach_detach_disk.attach_disk.error_test.only_attach_disk.ide_bus,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][negative] IDE  storage
      devices unsoupport hotplug'}
- model: caselink.caselink
  pk: 67
  fields: {workitem: RHEL7-19115, autocase_pattern: virsh.attach_detach_disk.detach_disk.error_test.invalid_option_1,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][negative]: detach-disk
      with wrong arguments - bug 803591'}
- model: caselink.caselink
  pk: 68
  fields: {workitem: RHEL7-19115, autocase_pattern: virsh.attach_detach_disk.detach_disk.error_test.invalid_option_2,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][negative]: detach-disk
      with wrong arguments - bug 803591'}
- model: caselink.caselink
  pk: 69
  fields: {workitem: RHEL7-19080, autocase_pattern: attach_detach_disk.attach_disk.normal_test.vm_running_config
      attach_detach_disk.detach_disk.normal_test.vm_running_config, framework: libvirt-ci,
    title: '[virtual disks][hotplug/unplug][options] Attach/Detach a disk device to
      guest with --config option'}
- model: caselink.caselink
  pk: 70
  fields: {workitem: RHEL7-19082, autocase_pattern: attach_detach_disk.attach_disk.normal_test.only_attach_disk.option_sourcetype,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][options] Attach/Detach
      a disk device to guest with optional argument'}
- model: caselink.caselink
  pk: 71
  fields: {workitem: RHEL7-19063, autocase_pattern: attach_detach_disk.attach_disk.normal_test.host_block_vm_id,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][post-operation]
      Attach disk with restart libvirtd - bug 728428'}
- model: caselink.caselink
  pk: 72
  fields: {workitem: RHEL7-19119, autocase_pattern: attach_detach_disk.detach_disk.normal_test.vm_running_config,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][post-operation]
      Hot-unplug a disk device to guest with rebooting the guest'}
- model: caselink.caselink
  pk: 73
  fields: {workitem: RHEL7-19122, autocase_pattern: attach_detach_disk.attach_disk.normal_test.vm_shutdown_config,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][post-operation]
      Hotplug a disk device to guest with rebooting the guest'}
- model: caselink.caselink
  pk: 74
  fields: {workitem: RHEL7-19122, autocase_pattern: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.id_ref.file_argument.domain_positional,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][post-operation]
      Hotplug a disk device to guest with rebooting the guest'}
- model: caselink.caselink
  pk: 75
  fields: {workitem: RHEL7-19087, autocase_pattern: attach_detach_disk.attach_disk.normal_test.vm_shutdown_config,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][pre-operation]
      Attach/Detach a disk to an inactive domain'}
- model: caselink.caselink
  pk: 76
  fields: {workitem: RHEL7-19090, autocase_pattern: attach_device.block.single_virtio_file.normal_test.cold_attach_cold_vm.config.name_ref.file_positional.domain_positional,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][pre-operation]
      Attach/Detach a disk to an inactive domain with xml'}
- model: caselink.caselink
  pk: 77
  fields: {workitem: RHEL7-19124, autocase_pattern: block.single_virtio_file.normal_test.cold_attach_cold_vm.persistent.name_ref.file_argument.domain_argument,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][pre-operation]
      hotunplug a device from guest during the process of start or shutdown guest
      (658713)'}
- model: caselink.caselink
  pk: 78
  fields: {workitem: RHEL7-19180, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.ipv6_host_source_mode,
    framework: libvirt-ci, title: '[virtual disks][volume][iSCSI] Create domain with
      an ipv6 iSCSI volume disk in iscsi source pool'}
- model: caselink.caselink
  pk: 79
  fields: {workitem: RHEL7-19172, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.ipv4_host_source_mode,
    framework: libvirt-ci, title: '[virtual disks][volume][iSCSI] Create domain with
      an iSCSI volume disk in iscsi source pool -  bug 957295'}
- model: caselink.caselink
  pk: 80
  fields: {workitem: RHEL7-19172, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.direct_source_mode,
    framework: libvirt-ci, title: '[virtual disks][volume][iSCSI] Create domain with
      an iSCSI volume disk in iscsi source pool -  bug 957295'}
- model: caselink.caselink
  pk: 81
  fields: {workitem: RHEL7-19189, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.save_domain,
    framework: libvirt-ci, title: '[virtual disks][volume][iSCSI] Define/start/destroy/save/restore/snapshot
      a domain with iSCSI volume disk in iscsi source pool - bug1032363, 1032358,
      996520'}
- model: caselink.caselink
  pk: 82
  fields: {workitem: RHEL7-19189, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.snapshot_domain,
    framework: libvirt-ci, title: '[virtual disks][volume][iSCSI] Define/start/destroy/save/restore/snapshot
      a domain with iSCSI volume disk in iscsi source pool - bug1032363, 1032358,
      996520'}
- model: caselink.caselink
  pk: 83
  fields: {workitem: RHEL7-17768, autocase_pattern: virsh.attach_device.block.single_usb_file.normal_test.hot_attach_hot_vm.livr_config,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][target bus] Attach/Detach
      disks with usb bus type'}
- model: caselink.caselink
  pk: 84
  fields: {workitem: RHEL7-19151, autocase_pattern: virsh.attach_device.block.single_virtio_file.normal_test.hot_attach_hot_vm.livr_config,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][target bus] Hot-plug/unplug
      a virtio disk'}
- model: caselink.caselink
  pk: 85
  fields: {workitem: RHEL7-18555, autocase_pattern: virsh.attach_device.block.single_scsi_file.normal_test.hot_attach_hot_vm.livr_config,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][target bus][SCSI]
      hot-plug/unplug a virtual CD through the virtio-scsi controller'}
- model: caselink.caselink
  pk: 86
  fields: {workitem: RHEL7-19191, autocase_pattern: attach_device.block.single_file.error_test.unsupport_sata_bus,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][target bus] q35:
      attach multiple sata devices  BG 1008903'}
- model: caselink.caselink
  pk: 87
  fields: {workitem: RHEL7-19174, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk.ipv4_host_source_mode,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][volume] Attach/detach
      disk with volume type'}
- model: caselink.caselink
  pk: 88
  fields: {workitem: RHEL7-19093, autocase_pattern: attach_detach_disk.attach_disk.normal_test.host_block_vm_name,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach
      a local disk with readonly mode --bug1003526'}
- model: caselink.caselink
  pk: 89
  fields: {workitem: RHEL7-19110, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.hot_plug.network_disk.readonly_mode,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach
      an iscsi disk with readonly mode'}
- model: caselink.caselink
  pk: 90
  fields: {workitem: RHEL7-19121, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_readonly_nfs_cdrom.coldplug_only_iso,
    framework: libvirt-ci, title: '[virtual disks][readonly] Start a domain with iso
      images on readonly nfs filesystem -bug996543'}
- model: caselink.caselink
  pk: 91
  fields: {workitem: RHEL7-19142, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_readonly_nfs_raw.attach_device,
    framework: libvirt-ci, title: '[virtual disks][readonly] Start/create a domain
      with a virtual disk on readonly nfs filesystem'}
- model: caselink.caselink
  pk: 92
  fields: {workitem: RHEL7-19168, autocase_pattern: virtual_disks.multivms.coldplug.vms_sharable_test,
    framework: libvirt-ci, title: '[virtual disks][shareable] Start two domains with
      shareable block disks- bug 914677 1086704'}
- model: caselink.caselink
  pk: 93
  fields: {workitem: RHEL7-16597, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_snapshot.disk_snapshot_external,
    framework: libvirt-ci, title: '[virtual disks][snapshot] Create snapshot for a
      domian with snapshot=''external'' in disk xml'}
- model: caselink.caselink
  pk: 94
  fields: {workitem: RHEL7-16598, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_snapshot.disk_snapshot_no,
    framework: libvirt-ci, title: '[virtual disks][snapshot] Create snapshot for a
      domian with snapshot=''no'' in disk xml bug 1106416'}
- model: caselink.caselink
  pk: 95
  fields: {workitem: RHEL7-19193, autocase_pattern: multidisks.coldplug.single_disk_test.disks_startup_policy,
    framework: libvirt-ci, title: '[virtual disks][startupPolicy] Create an guest
      with startupPolicy options - Bug 910171, Bug1086121'}
- model: caselink.caselink
  pk: 96
  fields: {workitem: RHEL7-19153, autocase_pattern: Case 372936 covered the steps
      virtio -> ide -> virtio. Case 280642 covered the steps virtio -> scsi -> virtio,
    framework: libvirt-ci, title: '[virtual disks][target bus] Replace a domain''s
      existing SCSI/IDE block device driver to virtio'}
- model: caselink.caselink
  pk: 97
  fields: {workitem: RHEL7-18685, autocase_pattern: multidisks.coldplug.single_disk_test.disk_option_bootdisk.disk_virtio_driver_with_iface.disk_iface_save_restore,
    framework: libvirt-ci, title: '[virtual disks][target bus] Save/restore a guest
      with virtio NICs and disks'}
- model: caselink.caselink
  pk: 98
  fields: {workitem: RHEL7-19101, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_virtio,
    framework: libvirt-ci, title: '[virtual disks][target bus] scsi=on/off check for
      virtio lun and disk  - bug 756678'}
- model: caselink.caselink
  pk: 99
  fields: {workitem: RHEL7-19161, autocase_pattern: virtual_disks.multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_ide,
    framework: libvirt-ci, title: '[virtual disks][target bus] Split ide-drive into
      ide-cd and ide-hd - BZ 801772 #c6'}
- model: caselink.caselink
  pk: 100
  fields: {workitem: RHEL7-19177, autocase_pattern: multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_sata,
    framework: libvirt-ci, title: '[virtual disks][target bus] Start a guest with
      sata bus type disks'}
- model: caselink.caselink
  pk: 101
  fields: {workitem: RHEL7-19186, autocase_pattern: multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_ide.device_block,
    framework: libvirt-ci, title: '[virtual disks][target bus] start guest with virtio
      disk after adding IDE disk newly in KVM -715401,704144'}
- model: caselink.caselink
  pk: 102
  fields: {workitem: RHEL7-18568, autocase_pattern: multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_scsi.device_block,
    framework: libvirt-ci, title: '[virtual disks][target bus][SCSI] Support scsi-block
      disk - bug 782034, 801772, 721250'}
- model: caselink.caselink
  pk: 103
  fields: {workitem: RHEL7-18568, autocase_pattern: multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_usb.device_lun,
    framework: libvirt-ci, title: '[virtual disks][target bus][SCSI] Support scsi-block
      disk - bug 782034, 801772, 721250'}
- model: caselink.caselink
  pk: 104
  fields: {workitem: RHEL7-18558, autocase_pattern: multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_scsi.device_disk,
    framework: libvirt-ci, title: '[virtual disks][target bus][SCSI] Support scsi-hd
      disk - bug 782034, 801772, 721250'}
- model: caselink.caselink
  pk: 105
  fields: {workitem: RHEL7-17767, autocase_pattern: multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_usb.device_disk,
    framework: libvirt-ci, title: '[virtual disks][target bus] USB 2.0 support in
      usb storage - bug 836670, bug 861344, bug 1043436'}
- model: caselink.caselink
  pk: 106
  fields: {workitem: RHEL7-18578, autocase_pattern: multidisks.coldplug.multi_disks_test.disk_virtio_scsi_multi_queue,
    framework: libvirt-ci, title: '[virtual disks][target bus][SCSI] virtio-scsi multi-queue
      support --bug 911390'}
- model: caselink.caselink
  pk: 107
  fields: {workitem: RHEL7-18578, autocase_pattern: multidisks.coldplug.single_disk_test.disk_virtio_scsi_cdrom_multi_queue,
    framework: libvirt-ci, title: '[virtual disks][target bus][SCSI] virtio-scsi multi-queue
      support --bug 911390'}
- model: caselink.caselink
  pk: 108
  fields: {workitem: RHEL7-18559, autocase_pattern: multidisks.coldplug.single_disk_test.disk_bus_device_option.disk_bus_scsi.device_cdrom,
    framework: libvirt-ci, title: '[virtual disks][target-bus][SCSI] Support scsi-cd
      disk - bug 782034, 801772, 721250'}
- model: caselink.caselink
  pk: 109
  fields: {workitem: RHEL7-19068, autocase_pattern: multidisks.coldplug.single_disk_test.disk_readonly_nfs_cdrom.coldplug_with_at_dt_disk,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][readonly] Attach
      iso from readonly nfs filesystem to VM - bug 702044'}
- model: caselink.caselink
  pk: 110
  fields: {workitem: RHEL7-19094, autocase_pattern: multidisks.hotplug.single_disk_test.disk_readonly_nfs_raw.at_dt_disk,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach
      a nfs disk with readonly mode'}
- model: caselink.caselink
  pk: 111
  fields: {workitem: RHEL7-19094, autocase_pattern: multidisks.coldplug.single_disk_test.disk_readonly_nfs_cdrom.coldplug_only_raw,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach
      a nfs disk with readonly mode'}
- model: caselink.caselink
  pk: 112
  fields: {workitem: RHEL7-19094, autocase_pattern: multidisks.coldplug.single_disk_test.disk_readonly_nfs_floppy,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][readonly] Attach/Detach
      a nfs disk with readonly mode'}
- model: caselink.caselink
  pk: 113
  fields: {workitem: RHEL7-19143, autocase_pattern: multidisks.hotplug.single_disk_test.disk_readonly_nfs_raw.attach_device,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][readonly] Attach/detach
      a virtual disk to/from guest on readonly nfs filesystem'}
- model: caselink.caselink
  pk: 114
  fields: {workitem: RHEL7-19123, autocase_pattern: multidisks.hotplug.single_disk_test.disks_startup_policy.disk_bus_scsi.normal_test.optional,
    framework: libvirt-ci, title: '[virtual disks][hotplug/unplug][startupPolicy]
      Attach file type disk with startupPolicy=''optional'''}
- model: caselink.caselink
  pk: 115
  fields: {workitem: RHEL7-19192, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.auth_uuid,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create a domain
      with iscsi network disk with chap authentication with correct/wrong secret uuid
      - 1019023'}
- model: caselink.caselink
  pk: 116
  fields: {workitem: RHEL7-19192, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.auth_uuid,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create a domain
      with iscsi network disk with chap authentication with correct/wrong secret uuid
      - 1019023'}
- model: caselink.caselink
  pk: 117
  fields: {workitem: RHEL7-19192, autocase_pattern: virtual_disks.iscsi.iscsi_test.error_test.auth_uuid,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create a domain
      with iscsi network disk with chap authentication with correct/wrong secret uuid
      - 1019023'}
- model: caselink.caselink
  pk: 118
  fields: {workitem: RHEL7-19187, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.auth_usage,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create a domain
      with iscsi network disk/lun with chap authentication with secret usage - bug1032358'}
- model: caselink.caselink
  pk: 119
  fields: {workitem: RHEL7-19187, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.auth_usage,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create a domain
      with iscsi network disk/lun with chap authentication with secret usage - bug1032358'}
- model: caselink.caselink
  pk: 120
  fields: {workitem: RHEL7-19179, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.non_auth.non_save_snapshot.ipv6_test,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create domain with
      ipv6 iSCSI passthrough lun'}
- model: caselink.caselink
  pk: 121
  fields: {workitem: RHEL7-19179, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.non_auth.non_save_snapshot.ipv6_test,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create domain with
      ipv6 iSCSI passthrough lun'}
- model: caselink.caselink
  pk: 122
  fields: {workitem: RHEL7-19190, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.non_auth.non_save_snapshot.ipv4_test,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Create domain with
      iSCSI network disk - bug 957295'}
- model: caselink.caselink
  pk: 123
  fields: {workitem: RHEL7-18579, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.non_auth.non_save_snapshot.ipv4_test,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI][SCSI] Create domain
      with iSCSI network lun - bug1000159'}
- model: caselink.caselink
  pk: 124
  fields: {workitem: RHEL7-19188, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.non_auth.test_save_snapshot,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Define/start/destroy/save/restore/snapshot
      a domain with iscsi network disk'}
- model: caselink.caselink
  pk: 125
  fields: {workitem: RHEL7-19188, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.non_auth.test_save_snapshot,
    framework: libvirt-ci, title: '[virtual disks][network][iSCSI] Define/start/destroy/save/restore/snapshot
      a domain with iscsi network disk'}
- model: caselink.caselink
  pk: 126
  fields: {workitem: RHEL7-19126, autocase_pattern: virtual_disks.gluster.disk_qcow2.test_dompmsuspend,
    framework: libvirt-ci, title: '[virtual disks][network][gluster] dompmsuspend
      --target disk/mem with glusterfs volume with disk type=network'}
- model: caselink.caselink
  pk: 127
  fields: {workitem: RHEL7-19182, autocase_pattern: virtual_disks.gluster.disk_raw.default_pool,
    framework: libvirt-ci, title: '[virtual disks][network][gluster] Install domain
      with gluster volume'}
- model: caselink.caselink
  pk: 128
  fields: {workitem: RHEL7-19182, autocase_pattern: virtual_disks.gluster.disk_qcow2.default_pool,
    framework: libvirt-ci, title: '[virtual disks][network][gluster] Install domain
      with gluster volume'}
- model: caselink.caselink
  pk: 129
  fields: {workitem: RHEL7-19184, autocase_pattern: virtual_disks.gluster.disk_qcow2.transport_rdma,
    framework: libvirt-ci, title: '[virtual disks][network][gluster] Start domain
      with glusterfs volume with disk type=network with transport=rdma -BZ 841218'}
- model: caselink.caselink
  pk: 130
  fields: {workitem: RHEL7-19184, autocase_pattern: virtual_disks.gluster.disk_raw.transport_rdma,
    framework: libvirt-ci, title: '[virtual disks][network][gluster] Start domain
      with glusterfs volume with disk type=network with transport=rdma -BZ 841218'}
- model: caselink.caselink
  pk: 131
  fields: {workitem: RHEL7-19183, autocase_pattern: virtual_disks.gluster.disk_qcow2.transport_tcp,
    framework: libvirt-ci, title: '[virtual disks][network][gluster] Start domain
      with glusterfs volume with disk type=network with transport=tcp -BZ841218'}
- model: caselink.caselink
  pk: 132
  fields: {workitem: RHEL7-19183, autocase_pattern: virtual_disks.gluster.disk_raw.transport_tcp,
    framework: libvirt-ci, title: '[virtual disks][network][gluster] Start domain
      with glusterfs volume with disk type=network with transport=tcp -BZ841218'}
- model: caselink.caselink
  pk: 133
  fields: {workitem: RHEL7-19202, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_lun.iothread,
    framework: libvirt-ci, title: '[virtual disks] create or define guests with iothread
      optional setting'}
- model: caselink.caselink
  pk: 134
  fields: {workitem: RHEL7-19202, autocase_pattern: virtual_disks.iscsi.iscsi_test.normal_test.device_disk.iothread,
    framework: libvirt-ci, title: '[virtual disks] create or define guests with iothread
      optional setting'}
- model: caselink.caselink
  pk: 135
  fields: {workitem: RHEL7-19202, autocase_pattern: virtual_disks.multidisks.hotplug.multi_disks_test.disk_virtio_iothread,
    framework: libvirt-ci, title: '[virtual disks] create or define guests with iothread
      optional setting'}
- model: caselink.caselink
  pk: 136
  fields: {workitem: RHEL7-19202, autocase_pattern: virtual_disks.multidisks.coldplug.multi_disks_test.disk_virtio_iothread,
    framework: libvirt-ci, title: '[virtual disks] create or define guests with iothread
      optional setting'}
- model: caselink.caselink
  pk: 137
  fields: {workitem: RHEL7-19202, autocase_pattern: virtual_disks.gluster.disk_qcow2.iothread,
    framework: libvirt-ci, title: '[virtual disks] create or define guests with iothread
      optional setting'}
- model: caselink.caselink
  pk: 138
  fields: {workitem: RHEL7-19202, autocase_pattern: virtual_disks.gluster.disk_raw.iothread,
    framework: libvirt-ci, title: '[virtual disks] create or define guests with iothread
      optional setting'}
- model: caselink.caselink
  pk: 139
  fields: {workitem: RHEL7-19202, autocase_pattern: virtual_disks.ceph.network_type.iothread,
    framework: libvirt-ci, title: '[virtual disks] create or define guests with iothread
      optional setting'}
- model: caselink.caselink
  pk: 140
  fields: {workitem: RHEL7-18298, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.positive_testing.socket_access_controls,
    framework: libvirt-ci, title: '[remote access] [unix] [custom] UNIX socket access
      controls'}
- model: caselink.caselink
  pk: 141
  fields: {workitem: RHEL7-18298, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.negative_testing.socket_access_controls,
    framework: libvirt-ci, title: '[remote access] [unix] [custom] UNIX socket access
      controls'}
- model: caselink.caselink
  pk: 142
  fields: {workitem: RHEL7-18299, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.positive_testing.customized_unix_sock_dir,
    framework: libvirt-ci, title: '[remote access] [unix] [custom] UNIX socket dir
      custom'}
- model: caselink.caselink
  pk: 143
  fields: {workitem: RHEL7-18300, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.positive_testing.socket_with_auth_conf,
    framework: libvirt-ci, title: '[remote access] [unix] Connect the unix socket
      with auth.conf under the /etc/libvirt path - bug 859320'}
- model: caselink.caselink
  pk: 144
  fields: {workitem: RHEL7-12867, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.positive_testing.socket_with_polkit_and_acl_control,
    framework: libvirt-ci, title: '[remote access] [unix] Check connect with UNIX
      sockets with polkit and acl control'}
- model: caselink.caselink
  pk: 145
  fields: {workitem: RHEL7-12867, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.positive_testing.socket_with_polkit_rw,
    framework: libvirt-ci, title: '[remote access] [unix] Check connect with UNIX
      sockets with polkit and acl control'}
- model: caselink.caselink
  pk: 146
  fields: {workitem: RHEL7-12867, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.negative_testing.socket_with_polkit_ro,
    framework: libvirt-ci, title: '[remote access] [unix] Check connect with UNIX
      sockets with polkit and acl control'}
- model: caselink.caselink
  pk: 147
  fields: {workitem: RHEL7-18295, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.positive_testing.socket_with_polkit_and_acl_control,
    framework: libvirt-ci, title: '[remote access] [unix] Check connect with UNIX
      sockets with polkit and acl control'}
- model: caselink.caselink
  pk: 148
  fields: {workitem: RHEL7-18295, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.positive_testing.socket_with_polkit_rw,
    framework: libvirt-ci, title: '[remote access] [unix] Check connect with UNIX
      sockets with polkit and acl control'}
- model: caselink.caselink
  pk: 149
  fields: {workitem: RHEL7-18295, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.negative_testing.socket_with_polkit_ro,
    framework: libvirt-ci, title: '[remote access] [unix] Check connect with UNIX
      sockets with polkit and acl control'}
- model: caselink.caselink
  pk: 150
  fields: {workitem: RHEL7-18296, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.negative_testing.no_allowed_sasl_user,
    framework: libvirt-ci, title: '[remote access] [unix] [custom] sasl_allowed_username_list
      custom for the unix socket connection'}
- model: caselink.caselink
  pk: 151
  fields: {workitem: RHEL7-18296, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.negative_testing.allow_sasl_user_with_readonly,
    framework: libvirt-ci, title: '[remote access] [unix] [custom] sasl_allowed_username_list
      custom for the unix socket connection'}
- model: caselink.caselink
  pk: 152
  fields: {workitem: RHEL7-18297, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_unix.negative_testing.readonly_without_auth,
    framework: libvirt-ci, title: '[remote access] [unix] Check connect with UNIX
      sockets without auth check'}
- model: caselink.caselink
  pk: 153
  fields: {workitem: RHEL7-18264, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.ssh_diff_libvirt_version,
    framework: libvirt-ci, title: '[remote access] [ssh] Remote access between different
      libvirt version -  bug 760436'}
- model: caselink.caselink
  pk: 154
  fields: {workitem: RHEL7-18266, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.negative_testing.libssh2_no_auth,
    framework: libvirt-ci, title: '[remote access] [ssh] libvirt should report proper
      error while connect the hyperv with the libssh2 transport -  bug 905513'}
- model: caselink.caselink
  pk: 155
  fields: {workitem: RHEL7-18265, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.negative_testing.incorrect_password,
    framework: libvirt-ci, title: '[remote access] [ssh] [negative] libvirt should
      printed proper error while input invalid password - bug 874897 822340'}
- model: caselink.caselink
  pk: 156
  fields: {workitem: RHEL7-18263, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.negative_testing.ssh_no_uri_path,
    framework: libvirt-ci, title: '[remote access] [ssh] [sasl] Connect to the hypervisor
      running on host over an SSH connection via ipv4 -bug 950855'}
- model: caselink.caselink
  pk: 157
  fields: {workitem: RHEL7-18263, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.negative_testing.ssh_read_only_mode,
    framework: libvirt-ci, title: '[remote access] [ssh] [sasl] Connect to the hypervisor
      running on host over an SSH connection via ipv4 -bug 950855'}
- model: caselink.caselink
  pk: 158
  fields: {workitem: RHEL7-18263, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.negative_testing.stop_libvirtd,
    framework: libvirt-ci, title: '[remote access] [ssh] [sasl] Connect to the hypervisor
      running on host over an SSH connection via ipv4 -bug 950855'}
- model: caselink.caselink
  pk: 159
  fields: {workitem: RHEL7-18267, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.ssh_static_ipv6,
    framework: libvirt-ci, title: '[remote access] [ssh] [sasl] Connect to the hypervisor
      running on host over an SSH connection via ipv6 - bug 785164'}
- model: caselink.caselink
  pk: 160
  fields: {workitem: RHEL7-18267, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.negative_testing.ssh_no_ipv6_config,
    framework: libvirt-ci, title: '[remote access] [ssh] [sasl] Connect to the hypervisor
      running on host over an SSH connection via ipv6 - bug 785164'}
- model: caselink.caselink
  pk: 161
  fields: {workitem: RHEL7-18267, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.negative_testing.ipv6_with_readonly,
    framework: libvirt-ci, title: '[remote access] [ssh] [sasl] Connect to the hypervisor
      running on host over an SSH connection via ipv6 - bug 785164'}
- model: caselink.caselink
  pk: 162
  fields: {workitem: RHEL7-18262, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.gssapi_auth,
    framework: libvirt-ci, title: '[remote access] [ssh]  Check the ssh transportation
      with sasl gssapi authentication BZ#737176'}
- model: caselink.caselink
  pk: 163
  fields: {workitem: RHEL7-18307, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.test_uri_with_default_user,
    framework: libvirt-ci, title: '[remote access] [other] Connect to a non-kvm  hypervisor'}
- model: caselink.caselink
  pk: 164
  fields: {workitem: RHEL7-18307, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.xen_uri_with_default_user,
    framework: libvirt-ci, title: '[remote access] [other] Connect to a non-kvm  hypervisor'}
- model: caselink.caselink
  pk: 165
  fields: {workitem: RHEL7-18307, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.esx_uri_with_default_user,
    framework: libvirt-ci, title: '[remote access] [other] Connect to a non-kvm  hypervisor'}
- model: caselink.caselink
  pk: 166
  fields: {workitem: RHEL7-18312, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.test_uri_with_root_user,
    framework: libvirt-ci, title: '[remote access] [other] Connect to various hypervisor
      under the session mode'}
- model: caselink.caselink
  pk: 167
  fields: {workitem: RHEL7-18312, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.xen_uri_with_root_user,
    framework: libvirt-ci, title: '[remote access] [other] Connect to various hypervisor
      under the session mode'}
- model: caselink.caselink
  pk: 168
  fields: {workitem: RHEL7-18312, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_ssh.positive_testing.esx_uri_with_root_user,
    framework: libvirt-ci, title: '[remote access] [other] Connect to various hypervisor
      under the session mode'}
- model: caselink.caselink
  pk: 169
  fields: {workitem: RHEL7-18292, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv4_tcp_port,
    framework: libvirt-ci, title: '[remote access] [tcp] [custom] TCP ports custom'}
- model: caselink.caselink
  pk: 170
  fields: {workitem: RHEL7-18292, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv6_tcp_port,
    framework: libvirt-ci, title: '[remote access] [tcp] [custom] TCP ports custom'}
- model: caselink.caselink
  pk: 171
  fields: {workitem: RHEL7-18290, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.allow_one_sasl_user,
    framework: libvirt-ci, title: '[remote access] [tcp] [custom] sasl_allowed_username_list
      custom for tcp connection'}
- model: caselink.caselink
  pk: 172
  fields: {workitem: RHEL7-18290, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.allow_sasl_users,
    framework: libvirt-ci, title: '[remote access] [tcp] [custom] sasl_allowed_username_list
      custom for tcp connection'}
- model: caselink.caselink
  pk: 173
  fields: {workitem: RHEL7-18291, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv4_listen_address_with_sasl_auth,
    framework: libvirt-ci, title: '[remote access] [tcp] [custom] listen_addr custom
      for tcp connection'}
- model: caselink.caselink
  pk: 174
  fields: {workitem: RHEL7-18291, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv6_listen_address,
    framework: libvirt-ci, title: '[remote access] [tcp] [custom] listen_addr custom
      for tcp connection'}
- model: caselink.caselink
  pk: 175
  fields: {workitem: RHEL7-18288, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv4_tcp_port,
    framework: libvirt-ci, title: '[remote access] [tcp] [sasl]Connect to the hypervisor
      on host using a plain TCP connection via ipv4'}
- model: caselink.caselink
  pk: 176
  fields: {workitem: RHEL7-18288, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv4_listen_address_with_sasl_auth,
    framework: libvirt-ci, title: '[remote access] [tcp] [sasl]Connect to the hypervisor
      on host using a plain TCP connection via ipv4'}
- model: caselink.caselink
  pk: 177
  fields: {workitem: RHEL7-18289, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv6_listen_address,
    framework: libvirt-ci, title: '[remote access] [tcp] [sasl] Connect to the hypervisor
      on host using TCP connection via ipv6'}
- model: caselink.caselink
  pk: 178
  fields: {workitem: RHEL7-18289, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv6_tcp_port,
    framework: libvirt-ci, title: '[remote access] [tcp] [sasl] Connect to the hypervisor
      on host using TCP connection via ipv6'}
- model: caselink.caselink
  pk: 179
  fields: {workitem: RHEL7-18289, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.positive_testing.customized_ipv6_listen_address_with_sasl_auth,
    framework: libvirt-ci, title: '[remote access] [tcp] [sasl] Connect to the hypervisor
      on host using TCP connection via ipv6'}
- model: caselink.caselink
  pk: 180
  fields: {workitem: RHEL7-18289, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tcp.negative_testing.ipv6_with_readonly,
    framework: libvirt-ci, title: '[remote access] [tcp] [sasl] Connect to the hypervisor
      on host using TCP connection via ipv6'}
- model: caselink.caselink
  pk: 181
  fields: {workitem: RHEL7-18277, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_ipv4_listen_address,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] listen_addr custom
      for tls connection'}
- model: caselink.caselink
  pk: 182
  fields: {workitem: RHEL7-18277, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_ipv6_listen_address,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] listen_addr custom
      for tls connection'}
- model: caselink.caselink
  pk: 183
  fields: {workitem: RHEL7-18277, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.tls_listen_addr_in_use,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] listen_addr custom
      for tls connection'}
- model: caselink.caselink
  pk: 184
  fields: {workitem: RHEL7-18277, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.incorrect_ipv4_listen_address,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] listen_addr custom
      for tls connection'}
- model: caselink.caselink
  pk: 185
  fields: {workitem: RHEL7-18284, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.allow_one_sasl_user,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] sasl_allowed_username_list
      custom for tls connection'}
- model: caselink.caselink
  pk: 186
  fields: {workitem: RHEL7-18284, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.allow_sasl_users,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] sasl_allowed_username_list
      custom for tls connection'}
- model: caselink.caselink
  pk: 187
  fields: {workitem: RHEL7-18285, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_tls_port,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] TLS ports custom'}
- model: caselink.caselink
  pk: 188
  fields: {workitem: RHEL7-18285, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_ipv6_tls_port,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] TLS ports custom'}
- model: caselink.caselink
  pk: 189
  fields: {workitem: RHEL7-18285, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.invalid_tls_port,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] TLS ports custom'}
- model: caselink.caselink
  pk: 190
  fields: {workitem: RHEL7-18285, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.tls_port_in_use,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] TLS ports custom'}
- model: caselink.caselink
  pk: 191
  fields: {workitem: RHEL7-18285, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.default_tls_port_and_auth_tls,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] TLS ports custom'}
- model: caselink.caselink
  pk: 192
  fields: {workitem: RHEL7-18279, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.no_sanity_checks_and_no_verify,
    framework: libvirt-ci, title: '[remote-access] [tls] [custom] tls_no_sanity_certificate
      custom and disables client checks of the server''s certificate'}
- model: caselink.caselink
  pk: 193
  fields: {workitem: RHEL7-18279, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.no_sanity_checks_without_no_verify,
    framework: libvirt-ci, title: '[remote-access] [tls] [custom] tls_no_sanity_certificate
      custom and disables client checks of the server''s certificate'}
- model: caselink.caselink
  pk: 194
  fields: {workitem: RHEL7-18280, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.no_verify_certificate,
    framework: libvirt-ci, title: '[remote-access] [tls] [custom] tls_no_verify_certificate
      custom'}
- model: caselink.caselink
  pk: 195
  fields: {workitem: RHEL7-18280, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.no_sanity_checks_without_no_verify,
    framework: libvirt-ci, title: '[remote-access] [tls] [custom] tls_no_verify_certificate
      custom'}
- model: caselink.caselink
  pk: 196
  fields: {workitem: RHEL7-18280, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.verify_certificate,
    framework: libvirt-ci, title: '[remote-access] [tls] [custom] tls_no_verify_certificate
      custom'}
- model: caselink.caselink
  pk: 197
  fields: {workitem: RHEL7-18270, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_x509_cert_path,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] Configuration TLS
      x509  server key file path'}
- model: caselink.caselink
  pk: 198
  fields: {workitem: RHEL7-18305, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.only_simpy_connect_libvirtd,
    framework: libvirt-ci, title: '[remote access] [other] libvirtd shouldn''t crash
      while connect to hypervisor with unconfigured tls/tcp connection BZ#723442'}
- model: caselink.caselink
  pk: 199
  fields: {workitem: RHEL7-18272, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_ipv6_listen_address_with_sasl_auth,
    framework: libvirt-ci, title: '[remote access] [tls] [sasl] Connect to the hypervisor
      running on host using TLS via ipv6'}
- model: caselink.caselink
  pk: 200
  fields: {workitem: RHEL7-18272, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.ipv6_with_readonly,
    framework: libvirt-ci, title: '[remote access] [tls] [sasl] Connect to the hypervisor
      running on host using TLS via ipv6'}
- model: caselink.caselink
  pk: 201
  fields: {workitem: RHEL7-18272, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.ipv6_address_unreachable,
    framework: libvirt-ci, title: '[remote access] [tls] [sasl] Connect to the hypervisor
      running on host using TLS via ipv6'}
- model: caselink.caselink
  pk: 202
  fields: {workitem: RHEL7-18273, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_ipv4_listen_address_with_sasl_auth,
    framework: libvirt-ci, title: '[remote access] [tls] [sasl] Connect to the hypervisor
      running on host using TLS via ipv4 -bug 1039991'}
- model: caselink.caselink
  pk: 203
  fields: {workitem: RHEL7-18273, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.ipv4_with_allowed_sasl_user_readonly,
    framework: libvirt-ci, title: '[remote access] [tls] [sasl] Connect to the hypervisor
      running on host using TLS via ipv4 -bug 1039991'}
- model: caselink.caselink
  pk: 204
  fields: {workitem: RHEL7-18274, autocase_pattern: basic operation, framework: libvirt-ci,
    title: '[remote access] [tls] Prepare the tls env'}
- model: caselink.caselink
  pk: 205
  fields: {workitem: RHEL7-18308, autocase_pattern: basic operation, framework: libvirt-ci,
    title: '[remote access] [other] Connect to the local ''default'' hypervisor running
      on host'}
- model: caselink.caselink
  pk: 206
  fields: {workitem: RHEL7-18275, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.customized_x509_cert_path,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] Customizable x509
      certificate paths for client - tls'}
- model: caselink.caselink
  pk: 207
  fields: {workitem: RHEL7-18276, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.positive_testing.allowed_dn_list,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] tls_allowed_dn_list
      custom'}
- model: caselink.caselink
  pk: 208
  fields: {workitem: RHEL7-18276, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.allowed_dn_disorder_list,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] tls_allowed_dn_list
      custom'}
- model: caselink.caselink
  pk: 209
  fields: {workitem: RHEL7-18276, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.allowed_dn_list_with_invalid_organization,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] tls_allowed_dn_list
      custom'}
- model: caselink.caselink
  pk: 210
  fields: {workitem: RHEL7-18276, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.remote_with_tls.negative_testing.allowed_dn_list_with_invalid_CN,
    framework: libvirt-ci, title: '[remote access] [tls] [custom] tls_allowed_dn_list
      custom'}
- model: caselink.caselink
  pk: 211
  fields: {workitem: RHEL7-16629, autocase_pattern: virsh.snapshot_create_as..quiesce_without_ga,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create external disk-only
      snapshot with quiesce option when guest agent is unreachable #BZ 808527'}
- model: caselink.caselink
  pk: 212
  fields: {workitem: RHEL7-16629, autocase_pattern: virsh.snapshot_create_as..quiesce_without_unix_channel,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create external disk-only
      snapshot with quiesce option when guest agent is unreachable #BZ 808527'}
- model: caselink.caselink
  pk: 213
  fields: {workitem: RHEL7-16520, autocase_pattern: virsh.snapshot_create_as..multi_diskspec_no_snapshot,
    framework: libvirt-ci, title: '[Disk snapshot][External] create external disk-only
      snapshot for guest with multiple disks'}
- model: caselink.caselink
  pk: 214
  fields: {workitem: RHEL7-16570, autocase_pattern: virsh.blockcommit..base_as_middle.top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Commit changes from middle
      to middle backing imges after do external disk snapshot'}
- model: caselink.caselink
  pk: 215
  fields: {workitem: RHEL7-16571, autocase_pattern: virsh.blockcommit..nobase.top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Commit changes from middle
      to base backing imges after do external disk snapshot'}
- model: caselink.caselink
  pk: 216
  fields: {workitem: RHEL7-16602, autocase_pattern: virsh.snapshot_disk.delete_test,
    framework: libvirt-ci, title: '[Disk snapshot][External] delete external disk-only
      snapshot'}
- model: caselink.caselink
  pk: 217
  fields: {workitem: RHEL7-16605, autocase_pattern: virsh.snapshot_edit..edit_option_clone..edit_option_current,
    framework: libvirt-ci, title: '[Disk snapshot][External] Change current external
      disk-only snapshot with snapshot-edit'}
- model: caselink.caselink
  pk: 218
  fields: {workitem: RHEL7-16601, autocase_pattern: virsh.snapshot_edit.positive_tests.edit_option_clone.edit_option_current.disk_snapshot.disk_snapshot,
    framework: libvirt-ci, title: '[Disk snapshot][External] Clone a external disk-only
      snapshot with snapshot-edit'}
- model: caselink.caselink
  pk: 219
  fields: {workitem: RHEL7-16610, autocase_pattern: virsh.snapshot_edit..without_desc,
    framework: libvirt-ci, title: '[Disk snapshot][external] change external disk-only
      snapshot description with snapshot-edit #BZ 741510 744071'}
- model: caselink.caselink
  pk: 220
  fields: {workitem: RHEL7-16610, autocase_pattern: virsh.snapshot_edit..delete_desc,
    framework: libvirt-ci, title: '[Disk snapshot][external] change external disk-only
      snapshot description with snapshot-edit #BZ 741510 744071'}
- model: caselink.caselink
  pk: 221
  fields: {workitem: RHEL7-16607, autocase_pattern: virsh.snapshot_edit..edit_option_rename,
    framework: libvirt-ci, title: '[Disk snapshot][External] Change external disk-only
      snapshot name with snapshot-edit  #BZ 843324 744724'}
- model: caselink.caselink
  pk: 222
  fields: {workitem: RHEL7-16521, autocase_pattern: virsh.virsh_snapshot_disk..fs_pool,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create an external disk-only
      snapshot with guest imges based FS pool'}
- model: caselink.caselink
  pk: 223
  fields: {workitem: RHEL7-16522, autocase_pattern: virsh.virsh_snapshot_disk..logical_pool,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create an external disk-only
      snapshot with guest imges based Logical pool'}
- model: caselink.caselink
  pk: 224
  fields: {workitem: RHEL7-16523, autocase_pattern: virsh.virsh_snapshot_disk..dir_pool,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create an external disk-only
      snapshot with guest imges based Dir pool #BZ 896013'}
- model: caselink.caselink
  pk: 225
  fields: {workitem: RHEL7-16612, autocase_pattern: virsh.snapshot_par_cur.negative_tests_current.invalid_snapshotname,
    framework: libvirt-ci, title: '[Disk snapshot][External] Get/set the current external
      disk-only snapshot'}
- model: caselink.caselink
  pk: 226
  fields: {workitem: RHEL7-16612, autocase_pattern: virsh.snapshot_par_cur.negative_tests_current.without_snapshot,
    framework: libvirt-ci, title: '[Disk snapshot][External] Get/set the current external
      disk-only snapshot'}
- model: caselink.caselink
  pk: 227
  fields: {workitem: RHEL7-16612, autocase_pattern: virsh.snapshot_par_cur.current_option.readwrite,
    framework: libvirt-ci, title: '[Disk snapshot][External] Get/set the current external
      disk-only snapshot'}
- model: caselink.caselink
  pk: 228
  fields: {workitem: RHEL7-16612, autocase_pattern: virsh.snapshot_par_cur.current_option.name_option,
    framework: libvirt-ci, title: '[Disk snapshot][External] Get/set the current external
      disk-only snapshot'}
- model: caselink.caselink
  pk: 229
  fields: {workitem: RHEL7-16529, autocase_pattern: virsh.snapshot_create_as..quiesce_with_diskonly
      virsh.snapshot_create_as..quiesce_without_ga, framework: libvirt-ci, title: '[Disk
      snapshot][External] Create external disk-only snapshot with quiesce option #BZ
      804210'}
- model: caselink.caselink
  pk: 230
  fields: {workitem: RHEL7-16628, autocase_pattern: virsh.snapshot_create_as..autodestroy_domain,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create disk-only snapshot
      for autodestroy domains #BZ 733806'}
- model: caselink.caselink
  pk: 231
  fields: {workitem: RHEL7-16528, autocase_pattern: virsh.snapshot_create_as..reuse_external_with_DAC_denial,
    framework: libvirt-ci, title: '[Disk snapshot][External] Libvirt should not create
      external snapshot file when fail to create external disk snapshot #BZ 843372'}
- model: caselink.caselink
  pk: 232
  fields: {workitem: RHEL7-16611, autocase_pattern: virsh.snapshot_par_cur..snapshotname_option,
    framework: libvirt-ci, title: '[Disk snapshot][External] Get the name of the parent
      of a snapshot #BZ 742410'}
- model: caselink.caselink
  pk: 233
  fields: {workitem: RHEL7-16531, autocase_pattern: virsh.virsh_snapshot_disk..iscsi_pool,
    framework: libvirt-ci, title: '[Disk snapshot][External] create external disk-only
      snapshot with guest imges based iSCSI pool #BZ 1032363'}
- model: caselink.caselink
  pk: 234
  fields: {workitem: RHEL7-16532, autocase_pattern: virsh.virsh_snapshot_disk..netfs_pool,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create an external disk-only
      snapshot with guest imges based netfs-nfs pool'}
- model: caselink.caselink
  pk: 235
  fields: {workitem: RHEL7-16630, autocase_pattern: virsh.snapshot_create_as.negative_tests.reuse_external_with_DAC_denial,
    framework: libvirt-ci, title: '[snapshot]Live snapshots must be consistent (fail
      or succeed for all the drives) BZ#782457'}
- model: caselink.caselink
  pk: 236
  fields: {workitem: RHEL7-16627, autocase_pattern: virsh.snapshot_disk..delete_test,
    framework: libvirt-ci, title: '[snapshot] libvirt should not leave stale snapshot
      metadata behind after domain disappears --bug 735457'}
- model: caselink.caselink
  pk: 237
  fields: {workitem: RHEL7-17792, autocase_pattern: virsh.snapshot_disk..attach_img_qcow2..disk_external..memory_external,
    framework: libvirt-ci, title: '[snapshot]cannot restore VM with disabled usb support
      to snapshot with RAM BG 1008340'}
- model: caselink.caselink
  pk: 238
  fields: {workitem: RHEL7-16604, autocase_pattern: virsh.snapshot_disk.no_delete.positive_test.attach_img_qcow2.snapshot_from_xml.disk_external.memory_external,
    framework: libvirt-ci, title: '[System checkpoint snapshot][External] revert guest
      to a external system checkpoint snapshot'}
- model: caselink.caselink
  pk: 239
  fields: {workitem: RHEL7-34946, autocase_pattern: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_raw.snapshot_from_xml.disk_external.memory_external,
    framework: libvirt-ci, title: '[System checkpoint snapshot][External] Create external
      system checkpoint snapshot with guest imges based Dir pool'}
- model: caselink.caselink
  pk: 240
  fields: {workitem: RHEL7-34946, autocase_pattern: virsh.snapshot_disk.no_delete.positive_test.pool_vol.dir_pool.attach_img_qcow2.v_qcow2v3.snapshot_from_xml.disk_external.memory_external,
    framework: libvirt-ci, title: '[System checkpoint snapshot][External] Create external
      system checkpoint snapshot with guest imges based Dir pool'}
- model: caselink.caselink
  pk: 241
  fields: {workitem: RHEL7-16512, autocase_pattern: virsh.snapshot_disk.delete_test.negative_test.no_pool.attach_img_qcow2.snapshot_from_xml.disk_external.memory_external,
    framework: libvirt-ci, title: '[System checkpoint snapshot][External] delete external
      system checkpoint snapshot'}
- model: caselink.caselink
  pk: 242
  fields: {workitem: RHEL7-16513, autocase_pattern: virsh.snapshot_disk..attach_img_qcow2..disk_external..memory_external,
    framework: libvirt-ci, title: '[System checkpoint snapshot][External] Create external
      system checkpoint snapshot for guest with multiple disks'}
- model: caselink.caselink
  pk: 243
  fields: {workitem: RHEL7-16514, autocase_pattern: virsh.snapshot_create_as..live_memspec.compress_format
      virsh.snapshot_create_as..invalid_compress_format, framework: libvirt-ci, title: '[System
      checkpoint snapshot][External] Compress snapshot''s external memory state #BZ
      1017227'}
- model: caselink.caselink
  pk: 244
  fields: {workitem: RHEL7-16625, autocase_pattern: virsh.snapshot_create_as..check_libvirtd_log,
    framework: libvirt-ci, title: '[snapshot]  - libvirt should not attempt QMP commands
      that have not been documented in qemu.git BZ#872292'}
- model: caselink.caselink
  pk: 245
  fields: {workitem: RHEL7-16525, autocase_pattern: 'snapshot_create_as..network_disk,
      snapshot_disk..network_disk', framework: libvirt-ci, title: '[Snapshot] External
      snapshot with gluster volume with disk type=network - bug 1032370'}
- model: caselink.caselink
  pk: 246
  fields: {workitem: RHEL7-16526, autocase_pattern: snapshot_disk..netfs_gluster_pool,
    framework: libvirt-ci, title: '[Disk snapshot][External] Create an external disk-only
      snapshot with guest imges based netfs-gluster pool'}
- model: caselink.caselink
  pk: 247
  fields: {workitem: RHEL7-17894, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_control.save,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotunplug -bug816475 918283
      562886'}
- model: caselink.caselink
  pk: 248
  fields: {workitem: RHEL7-17894, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_control.save,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotunplug -bug816475 918283
      562886'}
- model: caselink.caselink
  pk: 249
  fields: {workitem: RHEL7-17894, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_control.managedsave,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotunplug -bug816475 918283
      562886'}
- model: caselink.caselink
  pk: 250
  fields: {workitem: RHEL7-17894, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_control.managedsave,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotunplug -bug816475 918283
      562886'}
- model: caselink.caselink
  pk: 251
  fields: {workitem: RHEL7-17894, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotunplug -bug816475 918283
      562886'}
- model: caselink.caselink
  pk: 252
  fields: {workitem: RHEL7-17895, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_control.save,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotplug via hypervisor- bug562886,533138,857013,950268,726328'}
- model: caselink.caselink
  pk: 253
  fields: {workitem: RHEL7-17895, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_control.save,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotplug via hypervisor- bug562886,533138,857013,950268,726328'}
- model: caselink.caselink
  pk: 254
  fields: {workitem: RHEL7-17895, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_control.managedsave,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotplug via hypervisor- bug562886,533138,857013,950268,726328'}
- model: caselink.caselink
  pk: 255
  fields: {workitem: RHEL7-17895, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_control.managedsave,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotplug via hypervisor- bug562886,533138,857013,950268,726328'}
- model: caselink.caselink
  pk: 256
  fields: {workitem: RHEL7-17895, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotplug via hypervisor- bug562886,533138,857013,950268,726328'}
- model: caselink.caselink
  pk: 257
  fields: {workitem: RHEL7-17896, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_control.save,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108]'}
- model: caselink.caselink
  pk: 258
  fields: {workitem: RHEL7-17896, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.no_start_qemuga,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108]'}
- model: caselink.caselink
  pk: 259
  fields: {workitem: RHEL7-17896, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.no_operation,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108]'}
- model: caselink.caselink
  pk: 260
  fields: {workitem: RHEL7-17896, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.save,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108]'}
- model: caselink.caselink
  pk: 261
  fields: {workitem: RHEL7-17896, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.managedsave,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108]'}
- model: caselink.caselink
  pk: 262
  fields: {workitem: RHEL7-17902, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_control.suspend_to_mem,
    framework: libvirt-ci, title: '[CPU Management]Hotplug vcpus when guest do S3
      via qemu guest agent'}
- model: caselink.caselink
  pk: 263
  fields: {workitem: RHEL7-17902, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_control.suspend_to_mem,
    framework: libvirt-ci, title: '[CPU Management]Hotplug vcpus when guest do S3
      via qemu guest agent'}
- model: caselink.caselink
  pk: 264
  fields: {workitem: RHEL7-17903, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vm_control.suspend_to_disk,
    framework: libvirt-ci, title: '[CPU Management]Hotplug vcpus when guest do S4
      -bug872419'}
- model: caselink.caselink
  pk: 265
  fields: {workitem: RHEL7-17903, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.vm_control.suspend_to_disk,
    framework: libvirt-ci, title: '[CPU Management]Hotplug vcpus when guest do S4
      -bug872419'}
- model: caselink.caselink
  pk: 266
  fields: {workitem: RHEL7-17904, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.libvirtd_restart,
    framework: libvirt-ci, title: '[CPU Management] libvirt loses track of hotplugged
      vcpus after daemon restart -- bug 1097677'}
- model: caselink.caselink
  pk: 267
  fields: {workitem: RHEL7-17904, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.config.libvirtd_restart,
    framework: libvirt-ci, title: '[CPU Management] libvirt loses track of hotplugged
      vcpus after daemon restart -- bug 1097677'}
- model: caselink.caselink
  pk: 268
  fields: {workitem: RHEL7-17904, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.libvirtd_restart,
    framework: libvirt-ci, title: '[CPU Management] libvirt loses track of hotplugged
      vcpus after daemon restart -- bug 1097677'}
- model: caselink.caselink
  pk: 269
  fields: {workitem: RHEL7-17897, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.no_install_qemuga,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      without guest agent configuration - bug 984821'}
- model: caselink.caselink
  pk: 270
  fields: {workitem: RHEL7-17897, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.no_start_qemuga,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      without guest agent configuration - bug 984821'}
- model: caselink.caselink
  pk: 271
  fields: {workitem: RHEL7-17905, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.invalid_plug_number,
    framework: libvirt-ci, title: '[CPU Management] Hotplug vcpu using Illegal number
      of vCPUs]'}
- model: caselink.caselink
  pk: 272
  fields: {workitem: RHEL7-35613, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.pin_plug_unplug,
    framework: libvirt-ci, title: '[CPU Management]Hot-plug/unplug vcpus with vcpupin  operation-
      bug 1088165'}
- model: caselink.caselink
  pk: 273
  fields: {workitem: RHEL7-35613, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.pin_unplug,
    framework: libvirt-ci, title: '[CPU Management]Hot-plug/unplug vcpus with vcpupin  operation-
      bug 1088165'}
- model: caselink.caselink
  pk: 274
  fields: {workitem: RHEL7-35613, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.plug_pin,
    framework: libvirt-ci, title: '[CPU Management]Hot-plug/unplug vcpus with vcpupin  operation-
      bug 1088165'}
- model: caselink.caselink
  pk: 275
  fields: {workitem: RHEL7-35613, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.unplug_pin,
    framework: libvirt-ci, title: '[CPU Management]Hot-plug/unplug vcpus with vcpupin  operation-
      bug 1088165'}
- model: caselink.caselink
  pk: 276
  fields: {workitem: RHEL7-17898, autocase_pattern: virsh.setvcpus.error_test.invalid_vcpu_count_is_0,
    framework: libvirt-ci, title: '[CPU Management] Check error message when change
      VM''s processor count to 0-bug834365'}
- model: caselink.caselink
  pk: 277
  fields: {workitem: RHEL7-17900, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.greater_plug_number,
    framework: libvirt-ci, title: '[CPU Management] vCPU hotunplug fail should not
      update count of vcpus - bug 895424'}
- model: caselink.caselink
  pk: 278
  fields: {workitem: RHEL7-17899, autocase_pattern: ibvirt_vcpu_plug_unplug.positive_test.vcpu_set.live.vcpu_pin.plug_pin,
    framework: libvirt-ci, title: '[CPU Management]Check vcpuinfo could show correct
      info after hotplug cpu - bug 855218'}
- model: caselink.caselink
  pk: 279
  fields: {workitem: RHEL7-17910, autocase_pattern: vcpupin.offline.positive_test.cpu_list.cpu_list_comma,
    framework: libvirt-ci, title: '[CPU Management] vcpu pin testing -- offline'}
- model: caselink.caselink
  pk: 280
  fields: {workitem: RHEL7-17908, autocase_pattern: vcpupin.online.positive_test.cpu_list.cpu_list_comma,
    framework: libvirt-ci, title: '[CPU Management] vcpu pin testing -- runtime'}
- model: caselink.caselink
  pk: 281
  fields: {workitem: RHEL7-17915, autocase_pattern: virsh.emulatorpin.positive_testing
      running_guest.change_emulatorpin.emulatorpin_options.live.auto_placement, framework: libvirt-ci,
    title: '[CPU Management] Check KVM host/guest cpu pinning isolation-bug822064.bug871312,bug870099'}
- model: caselink.caselink
  pk: 282
  fields: {workitem: RHEL7-17914, autocase_pattern: vcpupin.offline.positive_test.cpu_list.cpu_list_x,
    framework: libvirt-ci, title: '[CPU Management] start guest with vcpu number is
      different between <vcpu> and <cputune> BZ#853930'}
- model: caselink.caselink
  pk: 283
  fields: {workitem: RHEL7-17911, autocase_pattern: vcpupin.online.negative_test.out_of_cpu_maxmum,
    framework: libvirt-ci, title: '[CPU Management] Pin domain to non-exist cpu'}
- model: caselink.caselink
  pk: 284
  fields: {workitem: RHEL7-17907, autocase_pattern: vcpupin.offline.positive_test.multi_dom
      vcpupin.online.positive_test.multi_dom, framework: libvirt-ci, title: '[CPU
      Management] Control multi domain vcpu affinity'}
- model: caselink.caselink
  pk: 285
  fields: {workitem: RHEL7-17917, autocase_pattern: schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_normal.set_by_cmd
      schedinfo_qemu_posix.normal_test.set_cpu_param.set_cpu_shares.value_maximum.set_by_xml,
    framework: libvirt-ci, title: '[CPU Management] get right cpu share value via
      editing guest dumpxml and schedinfo -- 998431 1040784'}
- model: caselink.caselink
  pk: 286
  fields: {workitem: RHEL7-17913, autocase_pattern: schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_period,
    framework: libvirt-ci, title: '[CPU Management] Check KVM host/guest cpu capping
      isolation-bug822090'}
- model: caselink.caselink
  pk: 287
  fields: {workitem: RHEL7-17913, autocase_pattern: schedinfo_qemu_posix.normal_test.set_emulator_param.set_emulator_quota,
    framework: libvirt-ci, title: '[CPU Management] Check KVM host/guest cpu capping
      isolation-bug822090'}
- model: caselink.caselink
  pk: 288
  fields: {workitem: RHEL7-17940, autocase_pattern: virsh.nodeinfo.no_option, framework: libvirt-ci,
    title: '[CPU Management]Check CPU topology in capabilities XML when libvirt fails
      to detect host CPU model-bug866999,bug868972'}
- model: caselink.caselink
  pk: 289
  fields: {workitem: RHEL7-17951, autocase_pattern: cpu_compare.guest_cpu.modify_model.cpu64-rhel5
      cpu_compare.guest_cpu.modify_model.cpu64-rhel6, framework: libvirt-ci, title: '[CPU
      Management] libvirt should support cpu64-rhel* cpu models - bug 768450'}
- model: caselink.caselink
  pk: 290
  fields: {workitem: RHEL7-17938, autocase_pattern: virsh.dumpxml.normal_test.vm_shutoff.with_cpu.minimum_match
      virsh.dumpxml.normal_test.vm_shutoff.with_cpu.exact_match virsh.dumpxml.normal_test.vm_shutoff.with_cpu.strict_match,
    framework: libvirt-ci, title: '[CPU Management] Check guest CPU requirements are
      properly updated with host CPU features'}
- model: caselink.caselink
  pk: 291
  fields: {workitem: RHEL7-17944, autocase_pattern: cpu_compare.host_cpu.*, framework: libvirt-ci,
    title: '[CPU Management] check the compatibility of CPU between two host'}
- model: caselink.caselink
  pk: 292
  fields: {workitem: RHEL7-17937, autocase_pattern: virsh.capabilities.no_option,
    framework: libvirt-ci, title: '[CPU Management] Check the information about host
      CPU model'}
- model: caselink.caselink
  pk: 293
  fields: {workitem: RHEL7-17948, autocase_pattern: virsh.cpu_compare.host_cpu.normal_test.expected_option,
    framework: libvirt-ci, title: '[CPU Management] compare baseline CPU for a set
      of given capabilities - bug 731151'}
- model: caselink.caselink
  pk: 294
  fields: {workitem: RHEL7-17948, autocase_pattern: virsh.cpu_compare.host_cpu.normal_test.remove_feature,
    framework: libvirt-ci, title: '[CPU Management] compare baseline CPU for a set
      of given capabilities - bug 731151'}
- model: caselink.caselink
  pk: 295
  fields: {workitem: RHEL7-17947, autocase_pattern: virsh.cpu_baseline.expected_option,
    framework: libvirt-ci, title: '[CPU Management] Check baseline CPU for a set of
      given capabilities especially with NUMA'}
- model: caselink.caselink
  pk: 296
  fields: {workitem: RHEL7-17933, autocase_pattern: 'virsh.cpu_baseline.positive_test.config_guest:',
    framework: libvirt-ci, title: '[CPU Management] configuring the guest CPU model-bug822148'}
- model: caselink.caselink
  pk: 297
  fields: {workitem: RHEL7-19333, autocase_pattern: cpu_compare.guest_cpu.modify_mode.host_passthrough
      cpu_compare.guest_cpu.modify_mode.host_model, framework: libvirt-ci, title: '[CPU
      Management] Support host-model and host-passthrough modes - bug 700272, 865580'}
- model: caselink.caselink
  pk: 298
  fields: {workitem: RHEL7-17932, autocase_pattern: cpu_compare.guest_cpu.modify_mode.host_passthrough
      cpu_compare.guest_cpu.modify_mode.host_model, framework: libvirt-ci, title: '[CPU
      Management] Support host-model and host-passthrough modes - bug 700272, 865580'}
- model: caselink.caselink
  pk: 299
  fields: {workitem: RHEL7-17939, autocase_pattern: virsh.nodeinfo.no_option, framework: libvirt-ci,
    title: '[CPU Management] Guest cpu topology check - bug 880017,965465'}
- model: caselink.caselink
  pk: 300
  fields: {workitem: RHEL7-35614, autocase_pattern: virsh.setvcpus.normal_test.guest_off.exceeding_topology_limit,
    framework: libvirt-ci, title: Check for maximum number of vcpus exceeding topology
      limit - bug 725269}
- model: caselink.caselink
  pk: 301
  fields: {workitem: RHEL7-17961, autocase_pattern: timer_management.specific_timer,
    framework: libvirt-ci, title: '[CPU Management] Configure timezone of guest -
      bug859868'}
- model: caselink.caselink
  pk: 302
  fields: {workitem: RHEL7-16818, autocase_pattern: timer_management.specific_timer,
    framework: libvirt-ci, title: '[CPU Management] enable/disable kvmclock - bug
      783921'}
- model: caselink.caselink
  pk: 303
  fields: {workitem: RHEL7-17929, autocase_pattern: timer_management.specific_timer,
    framework: libvirt-ci, title: '[CPU Management] enable/disable kvmclock - bug
      783921'}
- model: caselink.caselink
  pk: 304
  fields: {workitem: RHEL7-17927, autocase_pattern: libvirt_qemu_cmdline.hypervisor_features.pv_eoi,
    framework: libvirt-ci, title: '[CPU Management] libvirt support PV EOI feature-
      bug848185,bug860971'}
- model: caselink.caselink
  pk: 305
  fields: {workitem: RHEL7-18396, autocase_pattern: virsh.guest_kernel_debugging.positive_testing.send_nmi,
    framework: libvirt-ci, title: '[Guest kernel debugging]Send NMI to QEMU guests
      - 632495'}
- model: caselink.caselink
  pk: 306
  fields: {workitem: RHEL7-18393, autocase_pattern: virsh.sendkey.sysrq.acl_test.reboot_guest,
    framework: libvirt-ci, title: '[Guest kernel debugging] Send Alt+SysRq+B to trigger
      guest reboot - bug 708756'}
- model: caselink.caselink
  pk: 307
  fields: {workitem: RHEL7-18405, autocase_pattern: virsh.domstate.error_test.kill_vm_after_stopping_libvirtd,
    framework: libvirt-ci, title: '[Guest kernel debugging] Libvirt can detect crashed
      domains correctly after restarted libvirtd- bug 749096'}
- model: caselink.caselink
  pk: 308
  fields: {workitem: RHEL7-18417, autocase_pattern: virsh.dump.positive_test.non_acl.bzip2_format_dump,
    framework: libvirt-ci, title: '[Guest kernel debugging] Compress guest core dump
      to bzip2'}
- model: caselink.caselink
  pk: 309
  fields: {workitem: RHEL7-18418, autocase_pattern: virsh.dump.positive_test.non_acl.gzip_format_dump,
    framework: libvirt-ci, title: '[Guest kernel debugging] Compress guest core dump
      to gzip'}
- model: caselink.caselink
  pk: 310
  fields: {workitem: RHEL7-18419, autocase_pattern: virsh.dump.positive_test.non_acl.invalid_image_format,
    framework: libvirt-ci, title: '[Guest kernel debugging] Compress guest core dump
      to invalid format - bug669586'}
- model: caselink.caselink
  pk: 311
  fields: {workitem: RHEL7-18420, autocase_pattern: virsh.dump.positive_test.non_acl.lzop_format_dump,
    framework: libvirt-ci, title: '[Guest kernel debugging] Compress guest core dump
      to lzop'}
- model: caselink.caselink
  pk: 312
  fields: {workitem: RHEL7-18421, autocase_pattern: virsh.dump.positive_test.non_acl.xz_format_dump,
    framework: libvirt-ci, title: '[Guest kernel debugging] Compress guest core dump
      to xz'}
- model: caselink.caselink
  pk: 313
  fields: {workitem: RHEL7-18411, autocase_pattern: virsh.dump.positive_test.acl_test.include_guest_memory_dump,
    framework: libvirt-ci, title: '[Guest kernel debugging] Coredump filter to exclude
      KVM guest OS memory out of QEMU process BZ 822641'}
- model: caselink.caselink
  pk: 314
  fields: {workitem: RHEL7-18411, autocase_pattern: virsh.dump.positive_test.non_acl.exclude_guest_memory_dump,
    framework: libvirt-ci, title: '[Guest kernel debugging] Coredump filter to exclude
      KVM guest OS memory out of QEMU process BZ 822641'}
- model: caselink.caselink
  pk: 315
  fields: {workitem: RHEL7-18412, autocase_pattern: virsh.dump.negative_test.shutoff_dump,
    framework: libvirt-ci, title: '[Guest kernel debugging] Core dump a non-live guest
      should reprot error'}
- model: caselink.caselink
  pk: 316
  fields: {workitem: RHEL7-18413, autocase_pattern: virsh.dump.negative_test.invalid_option2,
    framework: libvirt-ci, title: '[Guest kernel debugging]The options of virsh dump
      are checked properly - 698490'}
- model: caselink.caselink
  pk: 317
  fields: {workitem: RHEL7-18413, autocase_pattern: virsh.dump.negative_test.invalid_option3,
    framework: libvirt-ci, title: '[Guest kernel debugging]The options of virsh dump
      are checked properly - 698490'}
- model: caselink.caselink
  pk: 318
  fields: {workitem: RHEL7-18413, autocase_pattern: virsh.dump.negative_test.invalid_option4,
    framework: libvirt-ci, title: '[Guest kernel debugging]The options of virsh dump
      are checked properly - 698490'}
- model: caselink.caselink
  pk: 319
  fields: {workitem: RHEL7-18414, autocase_pattern: virsh.dump.positive_test.non_acl.bypass_cache_dump,
    framework: libvirt-ci, title: '[guest kernel debugging]Run virsh dump with option
      --bypass-cache to avoid file system cache when saving'}
- model: caselink.caselink
  pk: 320
  fields: {workitem: RHEL7-18401, autocase_pattern: domstate.normal_test.reason.crash_vm,
    framework: libvirt-ci, title: '[Guest kernel debugging] on_crash event with pvpanic
      device test scenarios coverage - Bug 828546 826315 1033984 1136251'}
- model: caselink.caselink
  pk: 321
  fields: {workitem: RHEL7-35126, autocase_pattern: virsh.qemu_monitor_command..unknown_cmd,
    framework: libvirt-ci, title: '[Guest kernel debugging] Libvirt could deliver
      human monitor commands to guest'}
- model: caselink.caselink
  pk: 322
  fields: {workitem: RHEL7-35125, autocase_pattern: virsh.qemu_monitor_command..invalid_qmp_cmd,
    framework: libvirt-ci, title: '[Guest kernel debugging]Check libvirtd with poorly
      formatted human monitor command - 688723'}
- model: caselink.caselink
  pk: 323
  fields: {workitem: RHEL7-18398, autocase_pattern: conf_file.qemu_conf.auto_dump,
    framework: libvirt-ci, title: '[guest kernel debugging]Set bypass_cache for the
      auto dump in qemu.conf'}
- model: caselink.caselink
  pk: 324
  fields: {workitem: RHEL7-18399, autocase_pattern: conf_file.qemu_conf.auto_dump,
    framework: libvirt-ci, title: '[guest kernel debugging]Set auto_dump_path in qemu.conf'}
- model: caselink.caselink
  pk: 325
  fields: {workitem: RHEL7-18422, autocase_pattern: virsh.dump.positive_test..memory_dump,
    framework: libvirt-ci, title: '[guest kernel debugging] virsh dump: Support compression
      when --memory-only option is specified -bug 1035158'}
- model: caselink.caselink
  pk: 326
  fields: {workitem: RHEL7-16846, autocase_pattern: timer_management, framework: libvirt-ci,
    title: '[configuration] Configure timer of guest - bug 973005'}
- model: caselink.caselink
  pk: 327
  fields: {workitem: RHEL7-16923, autocase_pattern: virsh.capabilities.no_option,
    framework: libvirt-ci, title: '[capabilities] - Get hypervisor/driver capabilities'}
- model: caselink.caselink
  pk: 328
  fields: {workitem: RHEL7-16923, autocase_pattern: conf_file.libvirtd_conf.host_uuid,
    framework: libvirt-ci, title: '[capabilities] - Get hypervisor/driver capabilities'}
- model: caselink.caselink
  pk: 329
  fields: {workitem: RHEL7-12650, autocase_pattern: virsh.dompmsuspend.positive_test.mem,
    framework: libvirt-ci, title: '[guest agent] Enable or disable s3/s4 per VMs -
      For linux guest'}
- model: caselink.caselink
  pk: 330
  fields: {workitem: RHEL7-12650, autocase_pattern: dompmsuspend.positive_test.disk,
    framework: libvirt-ci, title: '[guest agent] Enable or disable s3/s4 per VMs -
      For linux guest'}
- model: caselink.caselink
  pk: 331
  fields: {workitem: RHEL7-12650, autocase_pattern: virsh.dompmsuspend.positive_test.hybrid,
    framework: libvirt-ci, title: '[guest agent] Enable or disable s3/s4 per VMs -
      For linux guest'}
- model: caselink.caselink
  pk: 332
  fields: {workitem: RHEL7-12650, autocase_pattern: virsh.dompmsuspend.negative_test.pm_not_set,
    framework: libvirt-ci, title: '[guest agent] Enable or disable s3/s4 per VMs -
      For linux guest'}
- model: caselink.caselink
  pk: 333
  fields: {workitem: RHEL7-12650, autocase_pattern: virsh.dompmsuspend.negative_test.pm_disabled,
    framework: libvirt-ci, title: '[guest agent] Enable or disable s3/s4 per VMs -
      For linux guest'}
- model: caselink.caselink
  pk: 334
  fields: {workitem: RHEL7-23598, autocase_pattern: conf_file.qemu_conf.set_process_name,
    framework: libvirt-ci, title: '[configuration] Set qemu process name'}
- model: caselink.caselink
  pk: 335
  fields: {workitem: RHEL7-19523, autocase_pattern: conf_file.qemu_conf.seccomp_sandbox,
    framework: libvirt-ci, title: '[configuration] Set seccomp sandbox when start
      a guest. Bug 807778'}
- model: caselink.caselink
  pk: 336
  fields: {workitem: RHEL7-23599, autocase_pattern: conf_file.qemu_conf.clear_emulator_capabilities,
    framework: libvirt-ci, title: '[configuration] Start a guest with clear_emulator_capabilities
      settings'}
- model: caselink.caselink
  pk: 337
  fields: {workitem: RHEL7-19533, autocase_pattern: dac_nfs_save_restore, framework: libvirt-ci,
    title: '[configuration] save/restore the guest to pre-created file on root_squashing
      export nfs with dynamic_ownership=0'}
- model: caselink.caselink
  pk: 338
  fields: {workitem: RHEL7-19530, autocase_pattern: conf_file.libvirtd_conf.unix_sock,
    framework: libvirt-ci, title: '[configuration]unix socket modification'}
- model: caselink.caselink
  pk: 339
  fields: {workitem: RHEL7-18157, autocase_pattern: conf_file.libvirtd_conf.host_uuid.negative_test.unterminated_uuid,
    framework: libvirt-ci, title: '[configuration] Starting libvirtd with libvirtd.conf
      containing an unterminated string - bug 728654'}
- model: caselink.caselink
  pk: 340
  fields: {workitem: RHEL7-19536, autocase_pattern: conf_file.sysconfig_libvirtd.libvirtd_config,
    framework: libvirt-ci, title: '[configuration] customize the libvirtd.conf'}
- model: caselink.caselink
  pk: 341
  fields: {workitem: RHEL7-12882, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]user access control for storage-vol API'}
- model: caselink.caselink
  pk: 342
  fields: {workitem: RHEL7-12880, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]user access control for storage-pool API'}
- model: caselink.caselink
  pk: 343
  fields: {workitem: RHEL7-12874, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]user access control for NodeDevice API'}
- model: caselink.caselink
  pk: 344
  fields: {workitem: RHEL7-12876, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]user access control for nwfilter API'}
- model: caselink.caselink
  pk: 345
  fields: {workitem: RHEL7-12872, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]user access control for network API'}
- model: caselink.caselink
  pk: 346
  fields: {workitem: RHEL7-12864, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]permissions about domain -2'}
- model: caselink.caselink
  pk: 347
  fields: {workitem: RHEL7-12863, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]permissions about domain -1'}
- model: caselink.caselink
  pk: 348
  fields: {workitem: RHEL7-12860, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]Normal user can do the following operation without requiring authorization'}
- model: caselink.caselink
  pk: 349
  fields: {workitem: RHEL7-12859, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]Discover potential storage pool sources with the detect-storage-pools
      permission'}
- model: caselink.caselink
  pk: 350
  fields: {workitem: RHEL7-12878, autocase_pattern: secret_define_undefine..acl_test,
    framework: libvirt-ci, title: '[ACL]user access control for Secret API'}
- model: caselink.caselink
  pk: 351
  fields: {workitem: RHEL7-12692, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]user access control for the operations about guest-agent'}
- model: caselink.caselink
  pk: 352
  fields: {workitem: RHEL7-12868, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL]user access control for the operations about guest-agent'}
- model: caselink.caselink
  pk: 353
  fields: {workitem: RHEL7-12870, autocase_pattern: UNKNOWN, framework: libvirt-ci,
    title: '[ACL] user access control for interface API'}
- model: caselink.caselink
  pk: 354
  fields: {workitem: RHEL7-17220, autocase_pattern: dac_start_destroy, framework: libvirt-ci,
    title: '[sVirt] [DAC] libvirt DAC Isolation - bug 822589'}
- model: caselink.caselink
  pk: 355
  fields: {workitem: RHEL7-17232, autocase_pattern: dac_start_destroy, framework: libvirt-ci,
    title: '[sVirt] [DAC] [static] static DAC''s testing in guest''s xml and qemu.conf
      - bug 856951'}
- model: caselink.caselink
  pk: 356
  fields: {workitem: RHEL7-17227, autocase_pattern: dac_start_destroy, framework: libvirt-ci,
    title: '[sVirt] [DAC] security: support for names on DAC labels - 860519'}
- model: caselink.caselink
  pk: 357
  fields: {workitem: RHEL7-17209, autocase_pattern: 'svirt_start_destroy..with_qemu_conf,
      svirt_start_destroy..sec_type_none.without_qemu_conf', framework: libvirt-ci,
    title: '[sVirt] [none] sVirt testing while disable the security_driver in qemu.conf
      - bug 947387 1027096 1108590 923946 1138500'}
- model: caselink.caselink
  pk: 358
  fields: {workitem: RHEL7-17236, autocase_pattern: svirt_start_destroy..multiple_sec_model,
    framework: libvirt-ci, title: '[sVirt] [none]sVirt testing while set seclabel
      type=''none'' in guest''s xml -bug 1108590 1105954'}
- model: caselink.caselink
  pk: 359
  fields: {workitem: RHEL7-17235, autocase_pattern: svirt_start_destroy..nfs_vol,
    framework: libvirt-ci, title: '[sVirt]Check avc info caused by sVirt'}
- model: caselink.caselink
  pk: 360
  fields: {workitem: RHEL7-17228, autocase_pattern: svirt_start_destroy..unconfined,
    framework: libvirt-ci, title: '[sVirt] [selinux] [custom] set security_default_confined
      in qemu.conf - bug  823857 1138488'}
- model: caselink.caselink
  pk: 361
  fields: {workitem: RHEL7-17229, autocase_pattern: svirt_start_destroy..required_confined,
    framework: libvirt-ci, title: '[sVirt] [selinux] [custom] set security_require_confined
      in qemu.conf'}
- model: caselink.caselink
  pk: 362
  fields: {workitem: RHEL7-17234, autocase_pattern: svirt_start_destroy.positive_test.cap_rawio,
    framework: libvirt-ci, title: '[sVirt] [selinux] [custom] Grant KVM guests retain
      arbitrary capabilitiesBZ#767425'}
- model: caselink.caselink
  pk: 363
  fields: {workitem: RHEL7-17230, autocase_pattern: dac_start_destroy..process_name,
    framework: libvirt-ci, title: '[sVirt] [selinux] [custom] set set_process_name
      in /etc/libvirt/qemu.conf'}
- model: caselink.caselink
  pk: 364
  fields: {workitem: RHEL7-17213, autocase_pattern: dac_nfs_disk..snapshot_nfs_backing,
    framework: libvirt-ci, title: '[sVirt] [selinux] [device] create live snapshot
      (disk-only) with guest''s image backing file on NFS storage - bug 822015'}
- model: caselink.caselink
  pk: 365
  fields: {workitem: RHEL7-17218, autocase_pattern: dac_nfs_disk dac_nfs_save_restore,
    framework: libvirt-ci, title: '[sVirt] [selinux] [device] Guest with sVirt on
      root_squash NFS'}
- model: caselink.caselink
  pk: 366
  fields: {workitem: RHEL7-17226, autocase_pattern: dac_nfs_disk dac_nfs_save_restore,
    framework: libvirt-ci, title: '[sVirt] [selinux] [device] Guest with sVirt on
      no_root_squash NFS'}
- model: caselink.caselink
  pk: 367
  fields: {workitem: RHEL7-17231, autocase_pattern: virtual_disks.multivms.coldplug.vms_sharable_test.file_type,
    framework: libvirt-ci, title: '[sVirt] [selinux] [device] shared disks with <shareable/>
      usability'}
- model: caselink.caselink
  pk: 368
  fields: {workitem: RHEL7-17212, autocase_pattern: virtual_disks.multivms.coldplug.vms_readonly_test,
    framework: libvirt-ci, title: '[sVirt] [selinux] [device] CDROMs with <readonly/>
      for multiple guest access -bug 547546'}
- model: caselink.caselink
  pk: 369
  fields: {workitem: RHEL7-17217, autocase_pattern: svirt_attach_disk..nfs_vol, framework: libvirt-ci,
    title: '[sVirt] [selinux] [device] Start guest with svirt on nfs while disable
      virt_use_nfs'}
- model: caselink.caselink
  pk: 370
  fields: {workitem: RHEL7-17211, autocase_pattern: svirt_start_destroy..sec_type_static
      svirt_save_restore..sec_type_static, framework: libvirt-ci, title: '[sVirt]
      [selinux] [static] Label guest with static seclabel type -bug 976635 1066280'}
- model: caselink.caselink
  pk: 371
  fields: {workitem: RHEL7-17210, autocase_pattern: svirt_start_destroy..with_baselabel,
    framework: libvirt-ci, title: '[sVirt] [selinux] [dynamic] Label guest with the
      dynamic seclabel type - bug 954245'}
- model: caselink.caselink
  pk: 372
  fields: {workitem: RHEL7-17224, autocase_pattern: 'svirt_save_restore, no permissive
      testing in auto, saw no need for this', framework: libvirt-ci, title: '[sVirt]
      [selinux] [dynamic] save and restore with svirt - scenario 1'}
- model: caselink.caselink
  pk: 373
  fields: {workitem: RHEL7-17225, autocase_pattern: 'svirt_save_restore, no enforcing/permissive
      switch testing in auto, saw no need for this', framework: libvirt-ci, title: '[sVirt]
      [selinux] [dynamic] save and restore with svirt - scenario 2'}
- model: caselink.caselink
  pk: 374
  fields: {workitem: RHEL7-17214, autocase_pattern: libvirtd_start.stop_iptables,
    framework: libvirt-ci, title: '[sVirt] [selinux] [dynamic] Should failed to reload
      iptables rules with root permission when starting libvirtd in the way of executing
      /usr/sbin/libvirtd - bug 716612'}
- model: caselink.caselink
  pk: 375
  fields: {workitem: RHEL7-17241, autocase_pattern: dac_vm_per_image_start..s_qemu..per_img_qemu,
    framework: libvirt-ci, title: '[sVirt] per-img dac testing'}
- model: caselink.caselink
  pk: 376
  fields: {workitem: RHEL7-17242, autocase_pattern: 'dac_vm_per_image_start..s_qemu..per_img_qemu,
      dac_vm_per_image_start..block_disk, dac_vm_per_image_start..nfs, dac_vm_per_image_start..network_disk,
      s_qemu..per_img_qemu_grp, s_qemu_group_user..per_img_qemu', framework: libvirt-ci,
    title: '[sVirt] Dac testing while configure dac with security_driver, vm, per-disk
      -bug 1146886'}
- model: caselink.caselink
  pk: 377
  fields: {workitem: RHEL7-17243, autocase_pattern: dac_per_disk_hotplug, framework: libvirt-ci,
    title: '[sVirt]per-image dac check while hotplug/hotunplug disks'}
- model: caselink.caselink
  pk: 378
  fields: {workitem: RHEL7-17240, autocase_pattern: 'dac_vm_per_image_start..s_qemu..per_img_relabel_no,
      dac_vm_per_image_start..model_none, dac_vm_per_image_start..invalid_per_img_label,
      dac_vm_per_image_start..model_invalid', framework: libvirt-ci, title: '[sVirt]Per-image
      dac negative testing -bug 1165485'}
- model: caselink.caselink
  pk: 379
  fields: {workitem: RHEL7-13190, autocase_pattern: graphics.spice_vnc.positive_tests.spice_only.default,
    framework: libvirt-ci, title: '[graphical framebuffers] Start guest with spice_tls
      and autoport settings - bug 953126 875729'}
- model: caselink.caselink
  pk: 380
  fields: {workitem: RHEL7-13190, autocase_pattern: graphics.spice_vnc.positive_tests.spice_only.defaultMode_secure,
    framework: libvirt-ci, title: '[graphical framebuffers] Start guest with spice_tls
      and autoport settings - bug 953126 875729'}
- model: caselink.caselink
  pk: 381
  fields: {workitem: RHEL7-13190, autocase_pattern: graphics.spice_vnc.positive_tests.spice_only.mixed_channels,
    framework: libvirt-ci, title: '[graphical framebuffers] Start guest with spice_tls
      and autoport settings - bug 953126 875729'}
- model: caselink.caselink
  pk: 382
  fields: {workitem: RHEL7-13190, autocase_pattern: graphics.functional.negative_tests.spice_only.spice_tls_disabled_with_secure_channel,
    framework: libvirt-ci, title: '[graphical framebuffers] Start guest with spice_tls
      and autoport settings - bug 953126 875729'}
- model: caselink.caselink
  pk: 383
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.image_compression_auto_glz,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 384
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.image_compression_auto_lz,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 385
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.image_compression_quic,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 386
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.image_compression_glz,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 387
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.image_compression_lz,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 388
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.image_compression_off,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 389
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.jpeg_compression_auto,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 390
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.jpeg_compression_never,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 391
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.jpeg_compression_always,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 392
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.zlib_compression_auto,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 393
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.zlib_compression_never,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 394
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.zlib_compression_always,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 395
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.playback_compression_on,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 396
  fields: {workitem: RHEL7-13197, autocase_pattern: graphics.functional.positive_tests.spice_only.playback_compression_off,
    framework: libvirt-ci, title: '[Graphical framebuffers] Configuring Spice compression
      options - bug 682237'}
- model: caselink.caselink
  pk: 397
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.spice_listen_all_ipv4,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 398
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.spice_listen_all_ipv6,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 399
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.spice_listen_ipv4,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 400
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.spice_listen_ipv6,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 401
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_address_override_spice_listen,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 402
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_address_all_ipv4,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 403
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_address_all_ipv6,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 404
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_address_ipv4,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 405
  fields: {workitem: RHEL7-13199, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_address_ipv6,
    framework: libvirt-ci, title: '[Graphical framebuffers] spice ssl connection'}
- model: caselink.caselink
  pk: 406
  fields: {workitem: RHEL7-13171, autocase_pattern: graphics.functional.positive_tests.vnc_only.default,
    framework: libvirt-ci, title: '[graphical framebuffers] vnc autoport settings'}
- model: caselink.caselink
  pk: 407
  fields: {workitem: RHEL7-13171, autocase_pattern: graphics.functional.positive_tests.vnc_only.no_autoport.port_-1,
    framework: libvirt-ci, title: '[graphical framebuffers] vnc autoport settings'}
- model: caselink.caselink
  pk: 408
  fields: {workitem: RHEL7-13171, autocase_pattern: graphics.functional.positive_tests.vnc_only.no_autoport.port_65535,
    framework: libvirt-ci, title: '[graphical framebuffers] vnc autoport settings'}
- model: caselink.caselink
  pk: 409
  fields: {workitem: RHEL7-13174, autocase_pattern: graphics.functional.positive_tests.vnc_only.vnc_tls_enabled,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc tls connection'}
- model: caselink.caselink
  pk: 410
  fields: {workitem: RHEL7-13174, autocase_pattern: graphics.functional.positive_tests.vnc_only.vnc_tls_disabled,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc tls connection'}
- model: caselink.caselink
  pk: 411
  fields: {workitem: RHEL7-13174, autocase_pattern: graphics.functional.positive_tests.vnc_only.vnc_tls_x509_verify_enabled,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc tls connection'}
- model: caselink.caselink
  pk: 412
  fields: {workitem: RHEL7-13174, autocase_pattern: graphics.functional.positive_tests.vnc_only.vnc_tls_x509_verify_disabled,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc tls connection'}
- model: caselink.caselink
  pk: 413
  fields: {workitem: RHEL7-13176, autocase_pattern: graphics.functional.positive_tests.vnc_only.vnc_auto_unix_socket_enabled,
    framework: libvirt-ci, title: '[Graphical framebuffers] support for unix sockets
      - libvirt/vnc - NEED_UPDATE'}
- model: caselink.caselink
  pk: 414
  fields: {workitem: RHEL7-13176, autocase_pattern: graphics.functional.positive_tests.vnc_only.vnc_auto_unix_socket_disabled,
    framework: libvirt-ci, title: '[Graphical framebuffers] support for unix sockets
      - libvirt/vnc - NEED_UPDATE'}
- model: caselink.caselink
  pk: 415
  fields: {workitem: RHEL7-13207, autocase_pattern: graphics.functional.negative_tests.spice_only.no_port_avail,
    framework: libvirt-ci, title: '[graphical framebuffers] Start guests with conflicted
      ports for vnc/spice.'}
- model: caselink.caselink
  pk: 416
  fields: {workitem: RHEL7-13207, autocase_pattern: graphics.functional.negative_tests.vnc_only.no_port_avail,
    framework: libvirt-ci, title: '[graphical framebuffers] Start guests with conflicted
      ports for vnc/spice.'}
- model: caselink.caselink
  pk: 417
  fields: {workitem: RHEL7-13207, autocase_pattern: graphics.functional.negative_tests.spice_vnc.no_port_avail,
    framework: libvirt-ci, title: '[graphical framebuffers] Start guests with conflicted
      ports for vnc/spice.'}
- model: caselink.caselink
  pk: 418
  fields: {workitem: RHEL7-13206, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_vnet,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc and spice testing
      while set listen type=network'}
- model: caselink.caselink
  pk: 419
  fields: {workitem: RHEL7-13206, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_macvtap,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc and spice testing
      while set listen type=network'}
- model: caselink.caselink
  pk: 420
  fields: {workitem: RHEL7-13206, autocase_pattern: graphics.functional.positive_tests.spice_only.listen_bridge,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc and spice testing
      while set listen type=network'}
- model: caselink.caselink
  pk: 421
  fields: {workitem: RHEL7-13206, autocase_pattern: graphics.functional.positive_tests.vnc_only.listen_vnet,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc and spice testing
      while set listen type=network'}
- model: caselink.caselink
  pk: 422
  fields: {workitem: RHEL7-13206, autocase_pattern: graphics.functional.positive_tests.vnc_only.listen_macvtap,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc and spice testing
      while set listen type=network'}
- model: caselink.caselink
  pk: 423
  fields: {workitem: RHEL7-13206, autocase_pattern: graphics.functional.positive_tests.vnc_only.listen_bridge,
    framework: libvirt-ci, title: '[Graphical framebuffers] vnc and spice testing
      while set listen type=network'}
- model: caselink.caselink
  pk: 424
  fields: {workitem: RHEL7-13210, autocase_pattern: graphics.functional.positive_tests.spice_vnc.default,
    framework: libvirt-ci, title: '[Graphical framebuffers] set the spice&vnc listening
      address and connect guest with them together -bug 895582'}
- model: caselink.caselink
  pk: 425
  fields: {workitem: RHEL7-13210, autocase_pattern: graphics.functional.positive_tests.spice_vnc.listen_all_ipv4,
    framework: libvirt-ci, title: '[Graphical framebuffers] set the spice&vnc listening
      address and connect guest with them together -bug 895582'}
- model: caselink.caselink
  pk: 426
  fields: {workitem: RHEL7-13210, autocase_pattern: graphics.functional.positive_tests.spice_vnc.listen_all_ipv6,
    framework: libvirt-ci, title: '[Graphical framebuffers] set the spice&vnc listening
      address and connect guest with them together -bug 895582'}
- model: caselink.caselink
  pk: 427
  fields: {workitem: RHEL7-13210, autocase_pattern: graphics.functional.positive_tests.spice_vnc.listen_ipv4,
    framework: libvirt-ci, title: '[Graphical framebuffers] set the spice&vnc listening
      address and connect guest with them together -bug 895582'}
- model: caselink.caselink
  pk: 428
  fields: {workitem: RHEL7-13210, autocase_pattern: graphics.functional.positive_tests.spice_vnc.listen_ipv6,
    framework: libvirt-ci, title: '[Graphical framebuffers] set the spice&vnc listening
      address and connect guest with them together -bug 895582'}
- model: caselink.caselink
  pk: 429
  fields: {workitem: RHEL7-13210, autocase_pattern: graphics.functional.positive_tests.spice_vnc.listen_non_exist,
    framework: libvirt-ci, title: '[Graphical framebuffers] set the spice&vnc listening
      address and connect guest with them together -bug 895582'}
- model: caselink.caselink
  pk: 430
  fields: {workitem: RHEL7-13210, autocase_pattern: graphics.functional.positive_tests.spice_vnc.listen_address_all_ipv4,
    framework: libvirt-ci, title: '[Graphical framebuffers] set the spice&vnc listening
      address and connect guest with them together -bug 895582'}
- model: caselink.caselink
  pk: 431
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.all_secure_channels,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 432
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.all_insecure_channels,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 433
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.only_secure_channels,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 434
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.only_insecure_channels,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 435
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.mixed_channels,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 436
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.defaultMode_secure,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 437
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.defaultMode_secure_port_-1,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 438
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.defaultMode_insecure_tlsPort_-1,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 439
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.defaultMode_insecure,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 440
  fields: {workitem: RHEL7-13198, autocase_pattern: graphics.functional.positive_tests.spice_only.defaultMode_any,
    framework: libvirt-ci, title: '[Graphical framebuffers] Various spice channel
      testing - bug 819499'}
- model: caselink.caselink
  pk: 441
  fields: {workitem: RHEL7-16563, autocase_pattern: blockcommit..network_disk.iscsi..base_as_middle.top_active,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from top
      to middle after creating external disk-only snapshot with "network" disk type(iscsi)'}
- model: caselink.caselink
  pk: 442
  fields: {workitem: RHEL7-16562, autocase_pattern: blockcommit..network_disk.iscsi..nobase.top_active,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from top
      to base after creating external disk-only snapshot with "network" disk type(iscsi)'}
- model: caselink.caselink
  pk: 443
  fields: {workitem: RHEL7-16561, autocase_pattern: blockcommit.normal_test.network_disk.iscsi.with_ga.timeout.nobase.top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from middle
      to base after creating external disk-only snapshot with "network" disk type(iscsi)'}
- model: caselink.caselink
  pk: 444
  fields: {workitem: RHEL7-16553, autocase_pattern: blockcommit..network_disk.gluster..shallow..top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from middle
      to middle after creating external disk-only snapshot with "network" disk type(gluster)'}
- model: caselink.caselink
  pk: 445
  fields: {workitem: RHEL7-16552, autocase_pattern: blockcommit..network_disk.gluster..nobase..top_active,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from top
      to base after creating external disk-only snapshot with "network" disk type(gluster)'}
- model: caselink.caselink
  pk: 446
  fields: {workitem: RHEL7-16540, autocase_pattern: blockcommit..network_disk.gluster..nobase..top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from middle
      to base after creating external disk-only snapshot with "network" disk type(gluster)'}
- model: caselink.caselink
  pk: 447
  fields: {workitem: RHEL7-16623, autocase_pattern: blockcommit.error_test.snap_in_mirror,
    framework: libvirt-ci, title: '[Disk snapshot][External][Negative Test] Do save/snapshot
      during block job is in mirror phase'}
- model: caselink.caselink
  pk: 448
  fields: {workitem: RHEL7-16623, autocase_pattern: Only cover the blockcommit + snapshot
      part, framework: libvirt-ci, title: '[Disk snapshot][External][Negative Test]
      Do save/snapshot during block job is in mirror phase'}
- model: caselink.caselink
  pk: 449
  fields: {workitem: RHEL7-16541, autocase_pattern: 'blockcommit,', framework: libvirt-ci,
    title: '[Disk snapshot][External] Doing blockcommit is unsupported with qemu-kvm'}
- model: caselink.caselink
  pk: 450
  fields: {workitem: RHEL7-16541, autocase_pattern: just run the case in your own
      env with qemu-kvm, framework: libvirt-ci, title: '[Disk snapshot][External]
      Doing blockcommit is unsupported with qemu-kvm'}
- model: caselink.caselink
  pk: 451
  fields: {workitem: RHEL7-16551, autocase_pattern: blockcommit..nfs..base_as_middle..top_active,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from top
      to middle after creating external disk-only snapshot with guest source file
      based on NFS'}
- model: caselink.caselink
  pk: 452
  fields: {workitem: RHEL7-16550, autocase_pattern: blockcommit..nfs..nobase..top_active,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from top
      to base after creating external disk-only snapshot with guest source file based
      on NFS'}
- model: caselink.caselink
  pk: 453
  fields: {workitem: RHEL7-16548, autocase_pattern: blockcommit..nfs..shallow..top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from middle
      to middle after creating external disk-only snapshot with guest source file
      based on NFS'}
- model: caselink.caselink
  pk: 454
  fields: {workitem: RHEL7-16547, autocase_pattern: blockcommit..local..shallow..top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from middle
      to middle after creating external disk-only snapshot with "file" disk type'}
- model: caselink.caselink
  pk: 455
  fields: {workitem: RHEL7-16549, autocase_pattern: blockcommit..block_disk..base_as_middle..top_active,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from top
      to middle after creating external disk-only snapshot with "block" disk type
      #BZ 1062142'}
- model: caselink.caselink
  pk: 456
  fields: {workitem: RHEL7-16544, autocase_pattern: blockcommit..block_disk..nobase..top_inactive,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from middle
      to base after creating external disk-only snapshot with "block" disk type'}
- model: caselink.caselink
  pk: 457
  fields: {workitem: RHEL7-16546, autocase_pattern: blockcommit..local..base_as_middle..top_active,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockcommit from top
      to middle after creating external disk-only snapshot with "file" disk type #BZ
      1062142'}
- model: caselink.caselink
  pk: 458
  fields: {workitem: RHEL7-16620, autocase_pattern: blockcommit..active_bz1135339,
    framework: libvirt-ci, title: '[Disk snapshot][External][Negative Test] Active
      commit will be cancelled by another commit #BZ1135339'}
- model: caselink.caselink
  pk: 459
  fields: {workitem: RHEL7-16542, autocase_pattern: blockcommit..multiple_chain, framework: libvirt-ci,
    title: '[Disk snapshot][External] Do blockcommit when guest image has multiple
      backing-chains'}
- model: caselink.caselink
  pk: 460
  fields: {workitem: RHEL7-16577, autocase_pattern: virsh.blockcopy..nfs_disk, framework: libvirt-ci,
    title: '[Disk snapshot][External] Do blockcopy after create external disk-only
      snapshot with guest source file based on NFS'}
- model: caselink.caselink
  pk: 461
  fields: {workitem: RHEL7-16622, autocase_pattern: blockcopy..mirror_state_lock,
    framework: libvirt-ci, title: '[Disk snapshot][External][Negative Test] Libvirt
      can''t acquire state change lock after do blockjob --pivot before block copy
      job is finished BZ1134294'}
- model: caselink.caselink
  pk: 462
  fields: {workitem: RHEL7-16621, autocase_pattern: blockcopy..finish_async_option,
    framework: libvirt-ci, title: '[Disk snapshot][External][Negative Test] Blockcopy
      job was cancel by "CTRL+C" while it show there still be one block job in background
      #BZ1135169'}
- model: caselink.caselink
  pk: 463
  fields: {workitem: RHEL7-16618, autocase_pattern: blockcopy, framework: libvirt-ci,
    title: '[Disk snapshot][External] Doing blockcopy is unsupported with qemu-kvm'}
- model: caselink.caselink
  pk: 464
  fields: {workitem: RHEL7-16618, autocase_pattern: Need to test with qemu-kvm, framework: libvirt-ci,
    title: '[Disk snapshot][External] Doing blockcopy is unsupported with qemu-kvm'}
- model: caselink.caselink
  pk: 465
  fields: {workitem: RHEL7-16564, autocase_pattern: blockpull..iscsi, framework: libvirt-ci,
    title: '[Disk snapshot][External] Do blockpull from middle to top after creating
      external disk-only snapshot with "network" disk type(iscsi)'}
- model: caselink.caselink
  pk: 466
  fields: {workitem: RHEL7-16560, autocase_pattern: blockpull..gluster..base_snap_one,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockpull from middle
      to top after creating external disk-only snapshot with "network" disk type(gluster)'}
- model: caselink.caselink
  pk: 467
  fields: {workitem: RHEL7-16554, autocase_pattern: blockpull..gluster..nobase, framework: libvirt-ci,
    title: '[Disk snapshot][External] Do blockpull from base to top after creating
      external disk-only snapshot with "network" disk type(gluster)'}
- model: caselink.caselink
  pk: 468
  fields: {workitem: RHEL7-16617, autocase_pattern: blockpull, framework: libvirt-ci,
    title: '[Disk snapshot][External] Doing blockpull is unsupported with qemu-kvm'}
- model: caselink.caselink
  pk: 469
  fields: {workitem: RHEL7-16617, autocase_pattern: 'Although it covered, but it may
      not tested with others as it need qemu-kvm instead of qemu-kvm-rhev', framework: libvirt-ci,
    title: '[Disk snapshot][External] Doing blockpull is unsupported with qemu-kvm'}
- model: caselink.caselink
  pk: 470
  fields: {workitem: RHEL7-16539, autocase_pattern: blockpull..local..nobase, framework: libvirt-ci,
    title: '[Disk snapshot][External] Do blockpull from base to top after creating
      external disk-only snapshot with "file" disk type'}
- model: caselink.caselink
  pk: 471
  fields: {workitem: RHEL7-16538, autocase_pattern: blockpull..block_disk..nobase,
    framework: libvirt-ci, title: '[Disk snapshot][External] Do blockpull from base
      to top after creating external disk-only snapshot with "block" disk type'}
- model: caselink.caselink
  pk: 472
  fields: {workitem: RHEL7-12785, autocase_pattern: virsh.dompmsuspend.positive_test.save_restore,
    framework: libvirt-ci, title: '[libvirtd] libvirtd should keep in running status
      when destroyed the linux guest which excuted a series of operations about S3
      save and restore - bug 928672'}
- model: caselink.caselink
  pk: 473
  fields: {workitem: RHEL7-12786, autocase_pattern: virsh.managedsave.test_cpu_mode,
    framework: libvirt-ci, title: '[Managed save] managed save should not crash libvirtd
      for <cpu mode=''host-model''> guest - bug 801160'}
- model: caselink.caselink
  pk: 474
  fields: {workitem: RHEL7-12787, autocase_pattern: virsh.dompmsuspend.positive_test.managedsave,
    framework: libvirt-ci, title: '[Managed save] Managedsave and resume the guest
      which was in pmsuspended status'}
- model: caselink.caselink
  pk: 475
  fields: {workitem: RHEL7-12788, autocase_pattern: virsh.managedsave.test_undefine,
    framework: libvirt-ci, title: '[Managed save] The managed save image is removed
      when undefining the domain with "--manage-save" flag'}
- model: caselink.caselink
  pk: 476
  fields: {workitem: RHEL7-12776, autocase_pattern: virsh.managedsave.test_autostart_bypass,
    framework: libvirt-ci, title: '[Managed save]Autostart the managedsave guest with
      auto_start_bypass_cache=1 in qemu.conf -bug963623'}
- model: caselink.caselink
  pk: 477
  fields: {workitem: RHEL7-12797, autocase_pattern: virsh.managedsave.test_security_driver,
    framework: libvirt-ci, title: '[Managed save]Managedsave with security_driver
      = "none" -bug923946 947387'}
- model: caselink.caselink
  pk: 478
  fields: {workitem: RHEL7-12789, autocase_pattern: virsh.managedsave.status_error_no,
    framework: libvirt-ci, title: '[Managed save]List the domains with managed save
      state-bug810799'}
- model: caselink.caselink
  pk: 479
  fields: {workitem: RHEL7-12790, autocase_pattern: virsh.managedsave.status_error_no.name_option.managedsave_remove,
    framework: libvirt-ci, title: '[Managed save] A managed save file for a domain
      can be manually removed'}
- model: caselink.caselink
  pk: 480
  fields: {workitem: RHEL7-12791, autocase_pattern: virsh.managedsave.status_error_no.name_option.normal_status,
    framework: libvirt-ci, title: '[Managed save] Guest could be started up nornally
      instead of restored without managedsave file'}
- model: caselink.caselink
  pk: 481
  fields: {workitem: RHEL7-12792, autocase_pattern: virsh.managedsave.status_error_yes.name_option.shut_status,
    framework: libvirt-ci, title: '[Managed save] Stopped domain fails to be saved
      via virsh.'}
- model: caselink.caselink
  pk: 482
  fields: {workitem: RHEL7-12793, autocase_pattern: virsh.managedsave.status_error_no.name_option.normal_status,
    framework: libvirt-ci, title: '[Managed save] Managesdsave and restore a normal
      guest'}
- model: caselink.caselink
  pk: 483
  fields: {workitem: RHEL7-12794, autocase_pattern: virsh.managedsave.status_error_yes.name_option.transient_vm,
    framework: libvirt-ci, title: '[Managed save] Cann''t managed save a transient
      domain - bug 729714'}
- model: caselink.caselink
  pk: 484
  fields: {workitem: RHEL7-12795, autocase_pattern: virsh.managedsave.test_saved_file,
    framework: libvirt-ci, title: '[Managed save] invalid save file should not block
      the domain start - bug 730750'}
- model: caselink.caselink
  pk: 485
  fields: {workitem: RHEL7-12796, autocase_pattern: virsh.managedsave.test_loop_cmd,
    framework: libvirt-ci, title: '[Managed save] survive from 20 iterations without
      failure - bug 727249'}
- model: caselink.caselink
  pk: 486
  fields: {workitem: RHEL7-12784, autocase_pattern: virsh.managedsave.test_bypass_cache,
    framework: libvirt-ci, title: '[Managed save] bypass the file system cache when
      saving and restoring guests'}
- model: caselink.caselink
  pk: 487
  fields: {workitem: RHEL7-12784, autocase_pattern: virsh.managedsave.test_libvirt_guests.single_guest,
    framework: libvirt-ci, title: '[Managed save] bypass the file system cache when
      saving and restoring guests'}
- model: caselink.caselink
  pk: 488
  fields: {workitem: RHEL7-12766, autocase_pattern: virsh.managedsave.test_libvirt_guests.multi_guests,
    framework: libvirt-ci, title: '[Managed save] Implement START_DELAY in libvirt-guests
      before starting next guest'}
- model: caselink.caselink
  pk: 489
  fields: {workitem: RHEL7-12778, autocase_pattern: virsh.managedsave.test_libvirt_guests.single_guest,
    framework: libvirt-ci, title: '[Managed save]libvirt-guests init script status
      returns right exit code -bug 957779'}
- model: caselink.caselink
  pk: 490
  fields: {workitem: RHEL7-12781, autocase_pattern: virsh.managedsave.test_libvirt_guests.single_guest,
    framework: libvirt-ci, title: '[Managed save]Checking the status of libvirt-guests
      service'}
- model: caselink.caselink
  pk: 491
  fields: {workitem: RHEL7-16782, autocase_pattern: virsh.setmem.memballoon_option.remove_driver,
    framework: libvirt-ci, title: '[memory management] setmem without virtio balloon
      driver'}
- model: caselink.caselink
  pk: 492
  fields: {workitem: RHEL7-16779, autocase_pattern: virsh.setmem.valid_options.manipulate_action,
    framework: libvirt-ci, title: '[Memory management] change memory/currentMemory
      by virsh then do operations BZ 873134'}
- model: caselink.caselink
  pk: 493
  fields: {workitem: RHEL7-16777, autocase_pattern: virsh.setmem.memballoon_option.none_model,
    framework: libvirt-ci, title: '[Memory management] Deactivate memory balloon with
      type of none BZ 833674'}
- model: caselink.caselink
  pk: 494
  fields: {workitem: RHEL7-16772, autocase_pattern: libvirt_qemu_cmdline.memory_backing.disable_ksm,
    framework: libvirt-ci, title: '[Memory management] Disable ksm for per VM - BZ#635419,
      950968, 1008500'}
- model: caselink.caselink
  pk: 495
  fields: {workitem: RHEL7-16781, autocase_pattern: virsh.setmem.valid_options.manipulate_action.s3,
    framework: libvirt-ci, title: '[Memory management]setmem when guest do S3 operations'}
- model: caselink.caselink
  pk: 496
  fields: {workitem: RHEL7-16780, autocase_pattern: virsh.setmem.valid_options.manipulate_action.s4,
    framework: libvirt-ci, title: '[Memory management]setmem when guest do S4 operations
      - BZ 872419 975376'}
- model: caselink.caselink
  pk: 497
  fields: {workitem: RHEL7-16776, autocase_pattern: virsh.setmem.valid_options.manipulate_action.no_action,
    framework: libvirt-ci, title: '[Memory management] ballooning testing(virsh)'}
- model: caselink.caselink
  pk: 498
  fields: {workitem: RHEL7-16767, autocase_pattern: libvirt_hugepage, framework: libvirt-ci,
    title: '[Memory management] huge pages - bug 1175449'}
- model: caselink.caselink
  pk: 499
  fields: {workitem: RHEL7-16770, autocase_pattern: libvirt_qemu_cmdline.memory_backing.lock_page,
    framework: libvirt-ci, title: '[Memory management] lock pages - bug 876096, 1035954'}
- model: caselink.caselink
  pk: 500
  fields: {workitem: RHEL7-18684, autocase_pattern: virsh.domiflist.with_valid_option.iface_model.virtio_iface,
    framework: libvirt-ci, title: '[Virtio] Replace a domain''s existing e1000/RTL8139
      network driver to virtio'}
- model: caselink.caselink
  pk: 501
  fields: {workitem: RHEL7-18668, autocase_pattern: virsh.edit.error_test.edit_iface,
    framework: libvirt-ci, title: '[Guest network driver] Illegal interface type or
      NIC model'}
- model: caselink.caselink
  pk: 502
  fields: {workitem: RHEL7-18669, autocase_pattern: virsh.domiflist.with_valid_option.iface_model.virtio_iface,
    framework: libvirt-ci, title: '[Guest network driver]Check all supported NIC models
      driver'}
- model: caselink.caselink
  pk: 503
  fields: {workitem: RHEL7-18669, autocase_pattern: virsh.domiflist.with_valid_option.iface_model.e1000_iface,
    framework: libvirt-ci, title: '[Guest network driver]Check all supported NIC models
      driver'}
- model: caselink.caselink
  pk: 504
  fields: {workitem: RHEL7-18669, autocase_pattern: virsh.domiflist.with_valid_option.iface_model.rtl8139_iface,
    framework: libvirt-ci, title: '[Guest network driver]Check all supported NIC models
      driver'}
- model: caselink.caselink
  pk: 505
  fields: {workitem: RHEL7-18729, autocase_pattern: virtual_network.iface_options.iface_source_default,
    framework: libvirt-ci, title: '[Guest network driver]Check the the default network
      card model into the domain XML -bug887886'}
- model: caselink.caselink
  pk: 506
  fields: {workitem: RHEL7-18683, autocase_pattern: virsh.domif_setlink_getlink.multi_functional_test.check_update_device,
    framework: libvirt-ci, title: '[Update device flags] control link up/down state
      of guest NICs via XML & domif-setlink - bug 643373'}
- model: caselink.caselink
  pk: 507
  fields: {workitem: RHEL7-18683, autocase_pattern: virsh.domif_setlink_getlink.multi_functional_test.check_options_config,
    framework: libvirt-ci, title: '[Update device flags] control link up/down state
      of guest NICs via XML & domif-setlink - bug 643373'}
- model: caselink.caselink
  pk: 508
  fields: {workitem: RHEL7-18753, autocase_pattern: virtual_network.iface_options.iface_offloads.update_iface,
    framework: libvirt-ci, title: '[Virtual Networks] Forbid NIC offloads change on
      the fly using update-device'}
- model: caselink.caselink
  pk: 509
  fields: {workitem: RHEL7-18686, autocase_pattern: virtual_network.iface_options.iface_driver,
    framework: libvirt-ci, title: '[Virtio] Support for virtio-net tuning option--
      Bug 1066209,1071888'}
- model: caselink.caselink
  pk: 510
  fields: {workitem: RHEL7-18723, autocase_pattern: virtual_network.iface_options.iface_driver.driver_queues,
    framework: libvirt-ci, title: '[Virtual Networks] Multiple queue support in macvtap/virtio-net
      - bug 651941,bug 1071888,bug 1095636 -- the migration will be automated later'}
- model: caselink.caselink
  pk: 511
  fields: {workitem: RHEL7-18670, autocase_pattern: virtual_network.iface_options.iface_driver,
    framework: libvirt-ci, title: '[Guest network driver]Libvirt can pick up the vhost
      driver for interface automatically'}
- model: caselink.caselink
  pk: 512
  fields: {workitem: RHEL7-18754, autocase_pattern: virtual_network.iface_options.iface_offloads.attach_iface,
    framework: libvirt-ci, title: '[Virtual Networks] Attach interface with offloads.'}
- model: caselink.caselink
  pk: 513
  fields: {workitem: RHEL7-18712, autocase_pattern: virtual_network.iface_network.dnsmasq_test.net_dhcp_range,
    framework: libvirt-ci, title: '[Virtual Networks] the number of guests exceeds
      the maximum IP number of DHCP'}
- model: caselink.caselink
  pk: 514
  fields: {workitem: RHEL7-18727, autocase_pattern: virtual_network.iface_network.dnsmasq_test,
    framework: libvirt-ci, title: '[virtual networks] Allow changing XML parameters
      sent to dnsmasq --bug 928638,1061099 [virtual networks] Allow changing XML parameters
      sent to dnsmasq --bug 928638,1061099'}
- model: caselink.caselink
  pk: 515
  fields: {workitem: RHEL7-18747, autocase_pattern: virtual_network.iface_network.dnsmasq_test.net_dns_host,
    framework: libvirt-ci, title: '[virtual networks] Check DNS server config for
      a virtual network.'}
- model: caselink.caselink
  pk: 516
  fields: {workitem: RHEL7-18717, autocase_pattern: virtual_network.iface_network.net_pxe,
    framework: libvirt-ci, title: '[Virtual Networks]PXE and TFTP support in virtual
      network'}
- model: caselink.caselink
  pk: 517
  fields: {workitem: RHEL7-18694, autocase_pattern: virsh.net_define_undefine.normal_test,
    framework: libvirt-ci, title: '[Virtual Networks] deactivate network'}
- model: caselink.caselink
  pk: 518
  fields: {workitem: RHEL7-18695, autocase_pattern: virsh.net_dumpxml.normal_test.non_acl.name_option,
    framework: libvirt-ci, title: '[Virtual Networks]define network - bug 1004627'}
- model: caselink.caselink
  pk: 519
  fields: {workitem: RHEL7-18696, autocase_pattern: virsh.net_create.normal_test.file_as_argument.new_network,
    framework: libvirt-ci, title: '[Virtual Networks] destroy network'}
- model: caselink.caselink
  pk: 520
  fields: {workitem: RHEL7-18701, autocase_pattern: virtual_network.iface_network.net_guest,
    framework: libvirt-ci, title: '[Virtual networks] libvirtd in guest collides with
      default host virtual network routing - bug 594494'}
- model: caselink.caselink
  pk: 521
  fields: {workitem: RHEL7-18707, autocase_pattern: virsh.net_define_undefine.normal_test.new_network.state_test,
    framework: libvirt-ci, title: '[Virtual Networks] network autostart set'}
- model: caselink.caselink
  pk: 522
  fields: {workitem: RHEL7-18714, autocase_pattern: virsh.net_define_undefine.normal_test.new_network.state_test,
    framework: libvirt-ci, title: '[Virtual Networks] undefine network -bug949487'}
- model: caselink.caselink
  pk: 523
  fields: {workitem: RHEL7-18688, autocase_pattern: virtual_network.iface_network.dnsmasq_test.net_host_ip,
    framework: libvirt-ci, title: '[Virtual Networks] activate network'}
- model: caselink.caselink
  pk: 524
  fields: {workitem: RHEL7-18688, autocase_pattern: virtual_network.iface_network.dnsmasq_test.net_dhcp_range,
    framework: libvirt-ci, title: '[Virtual Networks] activate network'}
- model: caselink.caselink
  pk: 525
  fields: {workitem: RHEL7-18692, autocase_pattern: virtual_network.iface_network.bridge_test,
    framework: libvirt-ci, title: '[Virtual Networks] Virtual networks can be started
      even if the network definition without ip section - Bug 532834'}
- model: caselink.caselink
  pk: 526
  fields: {workitem: RHEL7-18693, autocase_pattern: virsh.net_edit.net_create, framework: libvirt-ci,
    title: '[Virtual Networks] create network -bug949915 949915 921777'}
- model: caselink.caselink
  pk: 527
  fields: {workitem: RHEL7-18734, autocase_pattern: virsh.net_update, framework: libvirt-ci,
    title: '[virtual networks] Check the ability to dynamically change a libvirt network
      - BZ#844404'}
- model: caselink.caselink
  pk: 528
  fields: {workitem: RHEL7-18672, autocase_pattern: virtual_network.iface_hotplug..large_scale,
    framework: libvirt-ci, title: '[Interface hotplug] Attach 32 NIC to guest'}
- model: caselink.caselink
  pk: 529
  fields: {workitem: RHEL7-18673, autocase_pattern: virtual_network.iface_hotplug..test_libvirtd,
    framework: libvirt-ci, title: '[Interface hotplug] Restart libvirtd before and
      after interface hot-plug, then unplug the interface - bug1146310'}
- model: caselink.caselink
  pk: 530
  fields: {workitem: RHEL7-18676, autocase_pattern: virtual_network.iface_hotplug,
    framework: libvirt-ci, title: '[Interface hotplug] Attach/Detach supported model
      NIC to guest'}
- model: caselink.caselink
  pk: 531
  fields: {workitem: RHEL7-18674, autocase_pattern: virtual_network.iface_hotplug..duplicate_target,
    framework: libvirt-ci, title: '[interface hotplug] Attach interface with same
      mac or target as already attached interface'}
- model: caselink.caselink
  pk: 532
  fields: {workitem: RHEL7-18674, autocase_pattern: virtual_network.iface_hotplug..duplicate_mac,
    framework: libvirt-ci, title: '[interface hotplug] Attach interface with same
      mac or target as already attached interface'}
- model: caselink.caselink
  pk: 533
  fields: {workitem: RHEL7-18675, autocase_pattern: virtual_network.iface_hotplug..stress_test,
    framework: libvirt-ci, title: '[Interface hotplug] Attach/Detach NIC to guest
      for 500 times - stress test'}
- model: caselink.caselink
  pk: 534
  fields: {workitem: RHEL7-18678, autocase_pattern: virtual_network.iface_hotplug..options_test,
    framework: libvirt-ci, title: '[interface hotplug] virsh can''t attach a new device
      to an inactive domain'}
- model: caselink.caselink
  pk: 535
  fields: {workitem: RHEL7-18679, autocase_pattern: virsh.attach_detach_interface.error_test.attach_with_script,
    framework: libvirt-ci, title: '[interface hotplug] virsh attach-interface using  a
      nonexistent script file  - bug 638633'}
- model: caselink.caselink
  pk: 536
  fields: {workitem: RHEL7-18744, autocase_pattern: virtual_network.iface_options.iface_type.type_mcast,
    framework: libvirt-ci, title: '[virtual networks] Check multicast messages'}
- model: caselink.caselink
  pk: 537
  fields: {workitem: RHEL7-18745, autocase_pattern: virtual_network.iface_options.iface_type.type_user,
    framework: libvirt-ci, title: '[virtual networks] check guest''s ip when interface
      type is ''user''. -  bug 1147238'}
- model: caselink.caselink
  pk: 538
  fields: {workitem: RHEL7-18721, autocase_pattern: virtual_network.iface_options.iface_unprivileged_user,
    framework: libvirt-ci, title: '[Virtual Networks]  libvirt support for QEMU network
      helper for unprivileged users - bug 833167'}
- model: caselink.caselink
  pk: 539
  fields: {workitem: RHEL7-18748, autocase_pattern: virtual_network.iface_network.net_forward.net_nat,
    framework: libvirt-ci, title: '[Virtual Networks]NAT virtual network doesn''t
      exclude multicast/broadcast networks --bug1033020'}
- model: caselink.caselink
  pk: 540
  fields: {workitem: RHEL7-18697, autocase_pattern: virtual_network.iface_network.net_forward.net_isolated,
    framework: libvirt-ci, title: '[Virtual Networks] IPv6 support in Isolated network'}
- model: caselink.caselink
  pk: 541
  fields: {workitem: RHEL7-18698, autocase_pattern: virtual_network.iface_network.net_forward.net_nat,
    framework: libvirt-ci, title: '[Virtual Networks] IPv6 support in NAT virtual
      network'}
- model: caselink.caselink
  pk: 542
  fields: {workitem: RHEL7-18700, autocase_pattern: virtual_network.iface_network.net_forward.net_isolated,
    framework: libvirt-ci, title: '[Virtual Networks] Isolated virtual network'}
- model: caselink.caselink
  pk: 543
  fields: {workitem: RHEL7-18706, autocase_pattern: virtual_network.iface_network.net_forward.net_nat,
    framework: libvirt-ci, title: '[Virtual Networks] NAT virtual network'}
- model: caselink.caselink
  pk: 544
  fields: {workitem: RHEL7-18710, autocase_pattern: virtual_network.iface_network.net_forward.net_route,
    framework: libvirt-ci, title: '[Virtual Networks] Route virtual network'}
- model: caselink.caselink
  pk: 545
  fields: {workitem: RHEL7-18738, autocase_pattern: virtual_network.iface_network.net_forward.net_route,
    framework: libvirt-ci, title: '[virtual networks] IPv6 support in routed network'}
- model: caselink.caselink
  pk: 546
  fields: {workitem: RHEL7-18720, autocase_pattern: virtual_network.iface_network.qos_test.qos_option_bandwidth.positive_test,
    framework: libvirt-ci, title: '[Virtual Networks] Extend libvirt network QoS to
      support guaranteed minimum bandwidth "floor"  - bug 837908'}
- model: caselink.caselink
  pk: 547
  fields: {workitem: RHEL7-18725, autocase_pattern: virtual_network.iface_network.qos_test.qos_option_bandwidth.positive_test,
    framework: libvirt-ci, title: '[virtual networks]Check the actual network throughput
      correspond with bandwidth parameter in network bug 895340'}
- model: caselink.caselink
  pk: 548
  fields: {workitem: RHEL7-18725, autocase_pattern: virtual_network.iface_network.qos_test.qos_option_bandwidth.negtive_start_test,
    framework: libvirt-ci, title: '[virtual networks]Check the actual network throughput
      correspond with bandwidth parameter in network bug 895340'}
- model: caselink.caselink
  pk: 549
  fields: {workitem: RHEL7-18731, autocase_pattern: virtual_network.iface_network.qos_test.qos_option_bandwidth.negtive_remove_test,
    framework: libvirt-ci, title: '[virtual networks] libvirtd should not crash when
      destroy one guest with floor setting and remove bandwidth setting from network  --bug
      975359'}
- model: caselink.caselink
  pk: 550
  fields: {workitem: RHEL7-18671, autocase_pattern: virtual_network.iface_options.iface_macvtap,
    framework: libvirt-ci, title: '[Guest network driver] macvtap device name keeps
      the same after libvirtd shutdown/restart cycle --- Bug 649964'}
- model: caselink.caselink
  pk: 551
  fields: {workitem: RHEL7-18687, autocase_pattern: virtual_network.iface_network.net_macvtap.error_test.start_error,
    framework: libvirt-ci, title: '[virtual networks] - VM creation failure should
      not leave behind stale macvtap interfaces - bug 754621'}
- model: caselink.caselink
  pk: 552
  fields: {workitem: RHEL7-18689, autocase_pattern: virtual_network.iface_network.net_macvtap.net_bridge.default_test,
    framework: libvirt-ci, title: '[virtual networks] Bridged network, eth + macvtap
      + bridge'}
- model: caselink.caselink
  pk: 553
  fields: {workitem: RHEL7-18690, autocase_pattern: iface_network.net_macvtap.net_passthrough,
    framework: libvirt-ci, title: '[virtual networks] Bridged network, eth + macvtap
      + passthrough'}
- model: caselink.caselink
  pk: 554
  fields: {workitem: RHEL7-18702, autocase_pattern: virtual_network.iface_options.iface_macvtap,
    framework: libvirt-ci, title: '[virtual networks]  Direct attachment to physical
      interface'}
- model: caselink.caselink
  pk: 555
  fields: {workitem: RHEL7-18718, autocase_pattern: virtual_network.iface_network.net_macvtap.error_test.define_error,
    framework: libvirt-ci, title: '[Virtual Networks] Define and start a macvtap network
      with invalid section - bug 767057'}
- model: caselink.caselink
  pk: 556
  fields: {workitem: RHEL7-18743, autocase_pattern: virtual_network.iface_network.net_macvtap.net_private,
    framework: libvirt-ci, title: '[virtual networks] Check macvtap private network'}
- model: caselink.caselink
  pk: 557
  fields: {workitem: RHEL7-18751, autocase_pattern: virtual_network.iface_options.iface_macvtap..mode_bridge,
    framework: libvirt-ci, title: '[virtual networks] Check the ''bridge'' mode for
      direct interface'}
- model: caselink.caselink
  pk: 558
  fields: {workitem: RHEL7-18751, autocase_pattern: virtual_network.iface_network.net_macvtap.net_bridge.multi_guests,
    framework: libvirt-ci, title: '[virtual networks] Check the ''bridge'' mode for
      direct interface'}
- model: caselink.caselink
  pk: 559
  fields: {workitem: RHEL7-18739, autocase_pattern: virtual_network.iface_ovs.net_ovs.ovs_portgroup,
    framework: libvirt-ci, title: '[virtual networks] Configure the ''native-tagged''
      and ''native-untagged'' vlan modes using openvswitch'}
- model: caselink.caselink
  pk: 560
  fields: {workitem: RHEL7-18708, autocase_pattern: virtual_network.iface_ovs.net_ovs.default_test,
    framework: libvirt-ci, title: '[virtual networks] openvswitch support'}
- model: caselink.caselink
  pk: 561
  fields: {workitem: RHEL7-18708, autocase_pattern: virtual_network.iface_ovs.net_ovs.ovs_iface,
    framework: libvirt-ci, title: '[virtual networks] openvswitch support'}
- model: caselink.caselink
  pk: 562
  fields: {workitem: RHEL7-18737, autocase_pattern: virtual_network.iface_network.net_portgroup,
    framework: libvirt-ci, title: '[virtual networks] Define a <network> with a subelement  <portgroup>'}
- model: caselink.caselink
  pk: 563
  fields: {workitem: RHEL7-18740, autocase_pattern: virtual_network.iface_network.net_forward.route_test,
    framework: libvirt-ci, title: '[virtual networks] Static Routes in virtual networks'}
- model: caselink.caselink
  pk: 564
  fields: {workitem: RHEL7-18749, autocase_pattern: virtual_network.iface_options.iface_backend,
    framework: libvirt-ci, title: '[Virtual networks]Supply way to change path to
      tun/vhost devices per NIC --bug 1139362'}
- model: caselink.caselink
  pk: 565
  fields: {workitem: RHEL7-16680, autocase_pattern: pool_edit.positive_test.name_option.disk_pool.edit_pool_format,
    framework: libvirt-ci, title: '[storage][disk pool]Edit source format of a disk
      pool in active status BZ# 851078'}
- model: caselink.caselink
  pk: 566
  fields: {workitem: RHEL7-16715, autocase_pattern: pool_edit.positive_test.name_option.disk_pool.edit_pool_format,
    framework: libvirt-ci, title: '[Storage][disk pool]check if the guest can be work
      well in disk pool with all supported format types'}
- model: caselink.caselink
  pk: 567
  fields: {workitem: RHEL7-16679, autocase_pattern: pool_edit.positive_test.name_option.disk_pool.edit_pool_format,
    framework: libvirt-ci, title: '[Storage][disk pool] Disk based storage pool --
      Bug 570286'}
- model: caselink.caselink
  pk: 568
  fields: {workitem: RHEL7-16682, autocase_pattern: pool_edit.positive_test.name_option.disk_pool.edit_pool_format,
    framework: libvirt-ci, title: '[Storage][disk pool]define and build the disk type
      of pool with all the supported format types'}
- model: caselink.caselink
  pk: 569
  fields: {workitem: RHEL7-16681, autocase_pattern: virsh.vol_create.positive_test.disk_pool.vol_format_none.pool_format_gpt,
    framework: libvirt-ci, title: '[Storage]Create 128 partition volume on disk pool'}
- model: caselink.caselink
  pk: 570
  fields: {workitem: RHEL7-16670, autocase_pattern: virsh.vol_create.positive_test.logical_pool.snapshot_vol,
    framework: libvirt-ci, title: '[Storage][logical pool]lvm volume groups that contains
      snapshot lvm'}
- model: caselink.caselink
  pk: 571
  fields: {workitem: RHEL7-16668, autocase_pattern: virsh.pool.pool_type_logical,
    framework: libvirt-ci, title: '[Storage][logical pool] Logical based storage pool'}
- model: caselink.caselink
  pk: 572
  fields: {workitem: RHEL7-16676, autocase_pattern: virsh.vol_create.positive_test.logical_pool.deactivate_vol,
    framework: libvirt-ci, title: '[storage][logical pool]  Create/refresh logical
      pool on the vg with inactive volumes BZ#958702'}
- model: caselink.caselink
  pk: 573
  fields: {workitem: RHEL7-16677, autocase_pattern: virsh.vol_create.positive_test.logical_pool.invalid_target,
    framework: libvirt-ci, title: '[storage] create logical pool with wrong --target
      device --bug952973'}
- model: caselink.caselink
  pk: 574
  fields: {workitem: RHEL7-16688, autocase_pattern: 'virsh.pool.pool_type_scsi ---
      not push to github yet?', framework: libvirt-ci, title: '[Storage][scsi pool]
      SCSI based storage pool'}
- model: caselink.caselink
  pk: 575
  fields: {workitem: RHEL7-16655, autocase_pattern: virsh.volume.dir_pool.vol_format_vmdk
      virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk_v4 virsh.vol_create.positive_test.fs_like_pool.vol_format.v_vmdk_v5,
    framework: libvirt-ci, title: '[Storage][dir pool][vmdk vol]VMDK v5 disk format
      in directory pool - Bug 836676, 1030795, 1060905'}
- model: caselink.caselink
  pk: 576
  fields: {workitem: RHEL7-16654, autocase_pattern: virsh.pool.pool_type_dir, framework: libvirt-ci,
    title: '[Storage][dir pool]Dir based storage pool'}
- model: caselink.caselink
  pk: 577
  fields: {workitem: RHEL7-16686, autocase_pattern: virsh.pool.pool_type_fs, framework: libvirt-ci,
    title: '[Storage][fs pool] FileSystem based storage pool'}
- model: caselink.caselink
  pk: 578
  fields: {workitem: RHEL7-16704, autocase_pattern: virsh.pool -- Add a check point
      in all virsh.pool cases, framework: libvirt-ci, title: '[Storage][fs pool] check
      pool info for fs pool after vol-create-as failed -bug 1024159'}
- model: caselink.caselink
  pk: 579
  fields: {workitem: RHEL7-34928, autocase_pattern: virsh.pool.positive_test.pool_type_iscsi.ipv6,
    framework: libvirt-ci, title: '[storage][iscsi pool] iSCSI based storage pool
      (ipv6) BZ#907171'}
- model: caselink.caselink
  pk: 580
  fields: {workitem: RHEL7-16719, autocase_pattern: virtual_disks.at_dt_iscsi_disk.positive_test.cold_plug.volume_disk,
    framework: libvirt-ci, title: '[Storage][encryption] - support username/password
      for iSCSI pools BZ#957294'}
- model: caselink.caselink
  pk: 581
  fields: {workitem: RHEL7-16664, autocase_pattern: virsh.pool_create.negative_test.duplicate_pool_source,
    framework: libvirt-ci, title: '[storage][iscsi pool]define multiple iscsi pools
      with the same target--bug: 817219'}
- model: caselink.caselink
  pk: 582
  fields: {workitem: RHEL7-16663, autocase_pattern: virsh.pool.pool_type_iscsi, framework: libvirt-ci,
    title: '[Storage][iscsi pool] iSCSI based storage pool'}
- model: caselink.caselink
  pk: 583
  fields: {workitem: RHEL7-16659, autocase_pattern: virsh.pool.positive_test.pool_type_netfs.source_format_glusterfs,
    framework: libvirt-ci, title: '[storage][netfs pool] netfs based storage pool
      with glusterfs source format --BZ1072714'}
- model: caselink.caselink
  pk: 584
  fields: {workitem: RHEL7-16660, autocase_pattern: virsh.volume.netfs_pool.glusterfs_format,
    framework: libvirt-ci, title: '[storage][netfs pool] volume operations in netfs
      pool with glusterfs source format --BZ1072653, 1077068'}
- model: caselink.caselink
  pk: 585
  fields: {workitem: RHEL7-16658, autocase_pattern: virsh.pool.pool_type_netfs, framework: libvirt-ci,
    title: '[Storage][netfs pool] netfs based storage pool with source format type=nfs'}
- model: caselink.caselink
  pk: 586
  fields: {workitem: RHEL7-16661, autocase_pattern: virsh.pool_create.positive_test,
    framework: libvirt-ci, title: '[Storage][netfs pool] check the uuid changed after
      create the same netfs pool second time - Bug 603442'}
- model: caselink.caselink
  pk: 587
  fields: {workitem: RHEL7-16656, autocase_pattern: virsh.volume.netfs_pool.nfs_format,
    framework: libvirt-ci, title: '[storage] Volume operations in dir/fs/netfs pools  --BZ
      1077068'}
- model: caselink.caselink
  pk: 588
  fields: {workitem: RHEL7-16656, autocase_pattern: virsh.volume.dir_pool, framework: libvirt-ci,
    title: '[storage] Volume operations in dir/fs/netfs pools  --BZ 1077068'}
- model: caselink.caselink
  pk: 589
  fields: {workitem: RHEL7-17150, autocase_pattern: virsh.volume.dir_pool, framework: libvirt-ci,
    title: '[Storage] Delete a vol - Bug 510450'}
- model: caselink.caselink
  pk: 590
  fields: {workitem: RHEL7-17154, autocase_pattern: virsh.volume.dir_pool, framework: libvirt-ci,
    title: '[Storage] Get vol key by name or path '}
- model: caselink.caselink
  pk: 591
  fields: {workitem: RHEL7-17156, autocase_pattern: virsh.volume.dir_pool, framework: libvirt-ci,
    title: '[Storage] Get vol name by key or path'}
- model: caselink.caselink
  pk: 592
  fields: {workitem: RHEL7-17157, autocase_pattern: virsh.volume.dir_pool, framework: libvirt-ci,
    title: '[Storage] Get vol path by name or key - Bug 509306'}
- model: caselink.caselink
  pk: 593
  fields: {workitem: RHEL7-16671, autocase_pattern: virsh.volume.logical_pool.vol_allocation.zero_size,
    framework: libvirt-ci, title: '[Storage][logical pool] LVM volume created with
      allocation=0 -- Bug: 888118,912179,1166592'}
- model: caselink.caselink
  pk: 594
  fields: {workitem: RHEL7-16749, autocase_pattern: virsh.vol_create.positive_test.logical_pool.snapshot_vol,
    framework: libvirt-ci, title: '[storage][logical pool] use vol-create-as --backing-vol
      to take snapshot of an existing volume --Bug: 896398'}
- model: caselink.caselink
  pk: 595
  fields: {workitem: RHEL7-16730, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f,
    framework: libvirt-ci, title: '[Storage][volume wiping] the volume format of qcow2
      is changed to raw after volume wiped'}
- model: caselink.caselink
  pk: 596
  fields: {workitem: RHEL7-16731, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.logical,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe logical volume in
      logical volume pool'}
- model: caselink.caselink
  pk: 597
  fields: {workitem: RHEL7-16732, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.disk_part.pool_type.disk,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe partition volume
      in disk pool - bug 738936'}
- model: caselink.caselink
  pk: 598
  fields: {workitem: RHEL7-16733, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.dir,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(QCOW2) in
      directory  pool'}
- model: caselink.caselink
  pk: 599
  fields: {workitem: RHEL7-16734, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.fs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(QCOW2) in
      filesystem pool'}
- model: caselink.caselink
  pk: 600
  fields: {workitem: RHEL7-16735, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc.pool_type.netfs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(QCOW2) in
      network filesystem  pool'}
- model: caselink.caselink
  pk: 601
  fields: {workitem: RHEL7-16736, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.prealloc.pool_type.dir,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(RAW) in directory  pool'}
- model: caselink.caselink
  pk: 602
  fields: {workitem: RHEL7-16737, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.prealloc.pool_type.dir,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(RAW) in directory
      pool by vol-key or vol-path'}
- model: caselink.caselink
  pk: 603
  fields: {workitem: RHEL7-16738, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.prealloc.pool_type.fs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(RAW) in filesystem
      pool'}
- model: caselink.caselink
  pk: 604
  fields: {workitem: RHEL7-16739, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.raw_f.prealloc.pool_type.netfs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(RAW) in network
      filesystem  pool'}
- model: caselink.caselink
  pk: 605
  fields: {workitem: RHEL7-16740, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.sparse_file.pool_type.dir,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(sparse file)
      in directory pool'}
- model: caselink.caselink
  pk: 606
  fields: {workitem: RHEL7-16741, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.sparse_file.pool_type.dir,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(sparse file)
      in directory pool by pool uuid'}
- model: caselink.caselink
  pk: 607
  fields: {workitem: RHEL7-16742, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.sparse_file.pool_type.fs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(sparse file)
      in filesystem pool'}
- model: caselink.caselink
  pk: 608
  fields: {workitem: RHEL7-16743, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.sparse_file.pool_type.netfs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(sparse file)
      in network filesystem pool'}
- model: caselink.caselink
  pk: 609
  fields: {workitem: RHEL7-16744, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.vdmk_f.pool_type.dir,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(VMDK) in directory  pool'}
- model: caselink.caselink
  pk: 610
  fields: {workitem: RHEL7-16745, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.vdmk_f.pool_type.fs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(VMDK) in filesystem  pool'}
- model: caselink.caselink
  pk: 611
  fields: {workitem: RHEL7-16746, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.vdmk_f.pool_type.netfs,
    framework: libvirt-ci, title: '[Storage][Volume wiping] wipe volume(VMDK) in network
      filesystem  pool'}
- model: caselink.caselink
  pk: 612
  fields: {workitem: RHEL7-16700, autocase_pattern: virsh.pool_create.negative_test.invalid_source_format,
    framework: libvirt-ci, title: '[Storage][negative]Define a storage pool with unsupported
      format type'}
- model: caselink.caselink
  pk: 613
  fields: {workitem: RHEL7-16701, autocase_pattern: virsh.vol_create.negative_test.nfs_pool_malformed_size,
    framework: libvirt-ci, title: '[Storage][negative]vol-create-as should fail when
      allocate a malformed size image --Bug 823362'}
- model: caselink.caselink
  pk: 614
  fields: {workitem: RHEL7-16699, autocase_pattern: 'virsh.pool.positive_test ----
      Just add a step to undefine an active pool, covered in all positive cases of
      visrh.pool', framework: libvirt-ci, title: '[Storage][negative] correct work
      flow for pool management'}
- model: caselink.caselink
  pk: 615
  fields: {workitem: RHEL7-16711, autocase_pattern: virsh.vol_create.negative_test.fs_pool_overcommit,
    framework: libvirt-ci, title: '[Storage][negative] create volume in fs pool when
      no enough space left'}
- model: caselink.caselink
  pk: 616
  fields: {workitem: RHEL7-16718, autocase_pattern: virsh.volume.dir_pool.vol_encrypt_default
      volume.dir_pool.vol_encrypt_qcow, framework: libvirt-ci, title: '[Storage][encryption]
      Encrypt a volume at the time of volume creation'}
- model: caselink.caselink
  pk: 617
  fields: {workitem: RHEL7-16725, autocase_pattern: virsh.pool_acl.positive_test.dir_pool.dir_permission.,
    framework: libvirt-ci, title: '[Storage][permission]check directory pool permission
      -- Bug: 815644'}
- model: caselink.caselink
  pk: 618
  fields: {workitem: RHEL7-16702, autocase_pattern: virsh.vol_clone_wipe.positive_test.non_acl.vol_format.qcow2_f.prealloc
      virsh.vol_create.positive_test.fs_like_pool.vol_format.v_qcow2_with_prealloc,
    framework: libvirt-ci, title: '[storage]Requesting qcow2 allocation should preallocate
      metadata -- Bug:684793'}
- model: caselink.caselink
  pk: 619
  fields: {workitem: RHEL7-17371, autocase_pattern: virsh.blockcopy.positive_test.non_acl.local_disk.max_bandwidth,
    framework: libvirt-ci, title: '[storage] bandwidth limit for block copy/pull will
      fail if the value reach to max value - bug 927156'}
- model: caselink.caselink
  pk: 620
  fields: {workitem: RHEL7-17463, autocase_pattern: daemon.functional.no_opt, framework: libvirt-ci,
    title: '[libvirtd] Delete UNIX sockets upon libvirtd shutdown'}
- model: caselink.caselink
  pk: 621
  fields: {workitem: RHEL7-17464, autocase_pattern: daemon.functional.opt_config,
    framework: libvirt-ci, title: '[libvirtd] overriding the default configuration
      file'}
- model: caselink.caselink
  pk: 622
  fields: {workitem: RHEL7-17465, autocase_pattern: daemon.functional.opt_pid, framework: libvirt-ci,
    title: '[libvirtd] overriding the default pid file'}
- model: caselink.caselink
  pk: 623
  fields: {workitem: RHEL7-17482, autocase_pattern: daemon.functional.opt_timeout_3,
    framework: libvirt-ci, title: '[libvirtd] option "--timeout" testing - 1'}
- model: caselink.caselink
  pk: 624
  fields: {workitem: RHEL7-17483, autocase_pattern: daemon.functional.opt_invalid_timeout_short,
    framework: libvirt-ci, title: '[libvirtd] option "--timeout" testing - 2'}
- model: caselink.caselink
  pk: 625
  fields: {workitem: RHEL7-17484, autocase_pattern: daemon.functional.opt_invalid_timeout_long,
    framework: libvirt-ci, title: '[libvirtd] option "--timeout" testing - 3'}
- model: caselink.caselink
  pk: 626
  fields: {workitem: RHEL7-17487, autocase_pattern: daemon.crash_regression.destroy_console,
    framework: libvirt-ci, title: '[libvirtd] destroy a creating domain - bug 843716'}
- model: caselink.caselink
  pk: 627
  fields: {workitem: RHEL7-17495, autocase_pattern: daemon.crash_regression.shutdown_console,
    framework: libvirt-ci, title: '[libvirtd] libvirtd crash/hang at virFDStreamEvent
      when qemu guest shuts down - BZ#716393'}
- model: caselink.caselink
  pk: 628
  fields: {workitem: RHEL7-17468, autocase_pattern: daemon.crash_regression.restart_save_restore,
    framework: libvirt-ci, title: '[libvirtd] Restart libvirtd without killing guest
      - bug 816465'}
- model: caselink.caselink
  pk: 629
  fields: {workitem: RHEL7-12898, autocase_pattern: daemon.crash_regression.mix_boot_order_os_boot
      -- change to bios tag, framework: libvirt-ci, title: '[bios] Boot order elements
      in <devices> cannot be used together with os/boot elements - bug 751287'}
- model: caselink.caselink
  pk: 630
  fields: {workitem: RHEL7-17486, autocase_pattern: daemon.crash_regression.invalid_interface,
    framework: libvirt-ci, title: '[libvirtd] xmldesc with a typo should not make
      libvirtd segfault - Bug 523418'}
- model: caselink.caselink
  pk: 631
  fields: {workitem: RHEL7-17502, autocase_pattern: daemon.crash_regression.cpu_compare,
    framework: libvirt-ci, title: '[libvirtd]libvirtd should not crash after running
      virsh cpu-compare with unexpected input - Bug 630618'}
- model: caselink.caselink
  pk: 632
  fields: {workitem: RHEL7-17496, autocase_pattern: daemon.crash_regression.job_acquire
      -- need update, framework: libvirt-ci, title: '[libvirtd] Check for domain being
      active on successful job acquire'}
- model: caselink.caselink
  pk: 633
  fields: {workitem: RHEL7-12785, autocase_pattern: daemon.crash_regression.pm_test
      -- change to managed save tag, framework: libvirt-ci, title: '[libvirtd] libvirtd
      should keep in running status when destroyed the linux guest  which excuted
      a series of operations about S3 save and restore - bug 928672'}
- model: caselink.caselink
  pk: 634
  fields: {workitem: RHEL7-18681, autocase_pattern: daemon.crash_regression.invalid_mac_net
      -- change to virtual networks tag, framework: libvirt-ci, title: '[libvirtd]libvirtd
      crash when start a net with special MAC address Bug#817234 , 823765'}
- model: caselink.caselink
  pk: 635
  fields: {workitem: RHEL7-17505, autocase_pattern: daemon.crash_regression.restart_firewalld,
    framework: libvirt-ci, title: '[libvirtd] Libvirtd crashes if firewalld is restarted
      while libvirtd is starting up -bug 1015108'}
- model: caselink.caselink
  pk: 636
  fields: {workitem: RHEL7-35116, autocase_pattern: daemon.crash_regression.kill_virsh_while_managedsave
      -- need update, framework: libvirt-ci, title: '[libvirtd]libvirtd crashes if
      client quits unexpectedly - bug 727071'}
- model: caselink.caselink
  pk: 637
  fields: {workitem: RHEL7-17473, autocase_pattern: daemon.init_scripts, framework: libvirt-ci,
    title: '[libvirtd] /var/run/libvirtd.pid will be lost after restarting libvirtd
      with vdsm installed - bug 726649'}
- model: caselink.caselink
  pk: 638
  fields: {workitem: RHEL7-17469, autocase_pattern: daemon.init_scripts, framework: libvirt-ci,
    title: '[libvirtd] check systemD unit file'}
- model: caselink.caselink
  pk: 639
  fields: {workitem: RHEL7-17481, autocase_pattern: daemon.init_scripts, framework: libvirt-ci,
    title: '[libvirtd] check return value when restart libvirtd  by non-root user
      - bug 730510 889984 955470'}
- model: caselink.caselink
  pk: 640
  fields: {workitem: RHEL7-17499, autocase_pattern: daemon.restart_consist, framework: libvirt-ci,
    title: '[libvirtd] Restart libvirtd without killing guests'}
- model: caselink.caselink
  pk: 641
  fields: {workitem: RHEL7-18680, autocase_pattern: daemon.restart_consist -- change
      to virtual networks tag, framework: libvirt-ci, title: '[libvirtd] network interface
      <target> after libvirtd restart - Bug 588046'}
- model: caselink.caselink
  pk: 642
  fields: {workitem: RHEL7-17470, autocase_pattern: daemon.kill_starting.virStateInitialize,
    framework: libvirt-ci, title: '[libvirtd] run libvirtd foreground BZ#831044&966449'}
- model: caselink.caselink
  pk: 643
  fields: {workitem: RHEL7-17470, autocase_pattern: daemon.kill_starting.qemuStateInitialize,
    framework: libvirt-ci, title: '[libvirtd] run libvirtd foreground BZ#831044&966449'}
- model: caselink.caselink
  pk: 644
  fields: {workitem: RHEL7-17470, autocase_pattern: daemon.kill_starting.netcfStateInitialize,
    framework: libvirt-ci, title: '[libvirtd] run libvirtd foreground BZ#831044&966449'}
- model: caselink.caselink
  pk: 645
  fields: {workitem: RHEL7-17470, autocase_pattern: daemon.kill_starting.networkStateInitialize,
    framework: libvirt-ci, title: '[libvirtd] run libvirtd foreground BZ#831044&966449'}
- model: caselink.caselink
  pk: 646
  fields: {workitem: RHEL7-17470, autocase_pattern: daemon.kill_starting.nwfilterStateInitialize,
    framework: libvirt-ci, title: '[libvirtd] run libvirtd foreground BZ#831044&966449'}
- model: caselink.caselink
  pk: 647
  fields: {workitem: RHEL7-17467, autocase_pattern: daemon.kill_started.sigseg, framework: libvirt-ci,
    title: '[libvirtd] Libvirtd daemon core dump'}
- model: caselink.caselink
  pk: 648
  fields: {workitem: RHEL7-35114, autocase_pattern: daemon.kill_started.sigkill, framework: libvirt-ci,
    title: '[libvirtd] Stop/Kill qemu process'}
- model: caselink.caselink
  pk: 649
  fields: {workitem: RHEL7-17460, autocase_pattern: daemon.kill_started.sigabrt, framework: libvirt-ci,
    title: '[libvirtd] send "SIGABRT" and "SIGKILL" to libvirtd'}
- model: caselink.caselink
  pk: 650
  fields: {workitem: RHEL7-17460, autocase_pattern: daemon.kill_started.sigkill, framework: libvirt-ci,
    title: '[libvirtd] send "SIGABRT" and "SIGKILL" to libvirtd'}
- model: caselink.caselink
  pk: 651
  fields: {workitem: RHEL7-17462, autocase_pattern: daemon.kill_started.sigquit, framework: libvirt-ci,
    title: '[libvirtd] send signal "SIGTERM", "SIGQUIT", "SIGINT" to libvirtd'}
- model: caselink.caselink
  pk: 652
  fields: {workitem: RHEL7-17462, autocase_pattern: daemon.kill_started.sigint, framework: libvirt-ci,
    title: '[libvirtd] send signal "SIGTERM", "SIGQUIT", "SIGINT" to libvirtd'}
- model: caselink.caselink
  pk: 653
  fields: {workitem: RHEL7-17462, autocase_pattern: daemon.kill_started.sigterm, framework: libvirt-ci,
    title: '[libvirtd] send signal "SIGTERM", "SIGQUIT", "SIGINT" to libvirtd'}
- model: caselink.caselink
  pk: 654
  fields: {workitem: RHEL7-17461, autocase_pattern: daemon.kill_started.sighup, framework: libvirt-ci,
    title: '[libvirtd] libvirt lost SIGHUP reloading behavior - bug 730428'}
- model: caselink.caselink
  pk: 655
  fields: {workitem: RHEL7-17488, autocase_pattern: conf_file.libvirtd_conf.host_uuid,
    framework: libvirt-ci, title: '[libvirtd]  libvirtd.conf error causes libvirtd
      to exit silently - bug 728654'}
- model: caselink.caselink
  pk: 656
  fields: {workitem: RHEL7-17480, autocase_pattern: conf_file.libvirtd_conf.unix_sock,
    framework: libvirt-ci, title: '[libvirtd] check access control of readonly unix
      socket.'}
- model: caselink.caselink
  pk: 657
  fields: {workitem: RHEL7-17500, autocase_pattern: virsh.start.status_error_no.console,
    framework: libvirt-ci, title: '[libvirtd] virsh crashes at remoteStreamEventTimer
      when libvirtd restarts - BZ#716781'}
- model: caselink.caselink
  pk: 658
  fields: {workitem: RHEL7-17476, autocase_pattern: virsh.qemu_attach.error_test.invalid_pid1,
    framework: libvirt-ci, title: '[libvirtd] QEMU attach a nonexistent PID'}
- model: caselink.caselink
  pk: 659
  fields: {workitem: RHEL7-12662, autocase_pattern: virsh.domtime.negative.no_agent_channel,
    framework: libvirt-ci, title: '[guest agent] Check the domain time while the qemu-guest-agent
      service was unavaliable -bug 1147847'}
- model: caselink.caselink
  pk: 660
  fields: {workitem: RHEL7-12662, autocase_pattern: virsh.domtime.negative.no_agent,
    framework: libvirt-ci, title: '[guest agent] Check the domain time while the qemu-guest-agent
      service was unavaliable -bug 1147847'}
- model: caselink.caselink
  pk: 661
  fields: {workitem: RHEL7-12662, autocase_pattern: virsh.domtime.negative.shutdown_vm,
    framework: libvirt-ci, title: '[guest agent] Check the domain time while the qemu-guest-agent
      service was unavaliable -bug 1147847'}
- model: caselink.caselink
  pk: 662
  fields: {workitem: RHEL7-12660, autocase_pattern: virsh.domtime.positive.set_time,
    framework: libvirt-ci, title: '[guest agent] libvirt should reset rtc interrupt
      backlog after guest-set-time -bug 1103245 1062384'}
- model: caselink.caselink
  pk: 663
  fields: {workitem: RHEL7-12661, autocase_pattern: virsh.domtime.positive.suspend_vm,
    framework: libvirt-ci, title: '[guest agent] Domain time sync correctly after
      do some operation with guest -bug 1049038'}
- model: caselink.caselink
  pk: 664
  fields: {workitem: RHEL7-12661, autocase_pattern: virsh.domtime.positive.managedsave_vm,
    framework: libvirt-ci, title: '[guest agent] Domain time sync correctly after
      do some operation with guest -bug 1049038'}
- model: caselink.caselink
  pk: 665
  fields: {workitem: RHEL7-12661, autocase_pattern: virsh.domtime.positive.pmsuspend_vm,
    framework: libvirt-ci, title: '[guest agent] Domain time sync correctly after
      do some operation with guest -bug 1049038'}
- model: caselink.caselink
  pk: 666
  fields: {workitem: RHEL7-12663, autocase_pattern: virsh.domtime.negative.now_sync,
    framework: libvirt-ci, title: '[guest agent]The options of virsh domtime are checked
      properly'}
- model: caselink.caselink
  pk: 667
  fields: {workitem: RHEL7-12663, autocase_pattern: virsh.domtime.negative.time_sync,
    framework: libvirt-ci, title: '[guest agent]The options of virsh domtime are checked
      properly'}
- model: caselink.caselink
  pk: 668
  fields: {workitem: RHEL7-12663, autocase_pattern: virsh.domtime.negative.time_now,
    framework: libvirt-ci, title: '[guest agent]The options of virsh domtime are checked
      properly'}
- model: caselink.caselink
  pk: 669
  fields: {workitem: RHEL7-12668, autocase_pattern: virsh.domfsfreeze_domfsthaw, framework: libvirt-ci,
    title: '[guest agent]Freeze and thaw the domain''s mounted filesystems'}
- model: caselink.caselink
  pk: 670
  fields: {workitem: RHEL7-12656, autocase_pattern: virsh.reboot.normal_test.agent_mode,
    framework: libvirt-ci, title: '[guest agent] reboot guest with ''agent''  mode'}
- model: caselink.caselink
  pk: 671
  fields: {workitem: RHEL7-12653, autocase_pattern: virsh.dompmsuspend.positive_test..suspend_resume,
    framework: libvirt-ci, title: '[guest agent]Should forbid suspend&resume operate
      when guest in pmsuspend status. -bug 846639'}
- model: caselink.caselink
  pk: 672
  fields: {workitem: RHEL7-12680, autocase_pattern: libvirt_vcpu_plug_unplug.positive_test.vcpu_set.guest.vm_operate.no_operation,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108'}
- model: caselink.caselink
  pk: 673
  fields: {workitem: RHEL7-12680, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.guest_plug,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108'}
- model: caselink.caselink
  pk: 674
  fields: {workitem: RHEL7-17896, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.guest_plug,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      - bug 924400 1035108'}
- model: caselink.caselink
  pk: 675
  fields: {workitem: RHEL7-12681, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.no_ga_channel,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      without guest agent configuration - bug 984821'}
- model: caselink.caselink
  pk: 676
  fields: {workitem: RHEL7-17897, autocase_pattern: libvirt_vcpu_plug_unplug.negative_test.no_ga_channel,
    framework: libvirt-ci, title: '[CPU Management] guest-agent based vCPU hot-unplug
      without guest agent configuration - bug 984821'}
- model: caselink.caselink
  pk: 677
  fields: {workitem: RHEL7-12690, autocase_pattern: channel.functional.positive_tests.target_virtio.autopath_on,
    framework: libvirt-ci, title: '[guest-agent] Guest agent (unix type) channel with
      automatic path of source -bug 888325'}
- model: caselink.caselink
  pk: 678
  fields: {workitem: RHEL7-12693, autocase_pattern: virsh.attach_device.character.channel.type_unix,
    framework: libvirt-ci, title: '[Guest agent] hotplug/hot-unplug guest agent char
      device from guest - bug 1168530,1181408'}
- model: caselink.caselink
  pk: 679
  fields: {workitem: RHEL7-18353, autocase_pattern: nwfilter_update_lock, framework: libvirt-ci,
    title: '[network filter]nwfilter deadlock -- bug 1034807'}
- model: caselink.caselink
  pk: 680
  fields: {workitem: RHEL7-18355, autocase_pattern: nwfilter_vm_start..dhcpserver_variable,
    framework: libvirt-ci, title: '[Network filter]DHCPSERVER variable usage in nwfilter'}
- model: caselink.caselink
  pk: 681
  fields: {workitem: RHEL7-18356, autocase_pattern: nwfilter_vm_start..variable_notation,
    framework: libvirt-ci, title: '[Network filter] Using the notation of $VARIABLE[@<iterator
      ID>]'}
- model: caselink.caselink
  pk: 682
  fields: {workitem: RHEL7-18327, autocase_pattern: nwfilter_edit_uuid, framework: libvirt-ci,
    title: '[Network filter]The uuid of a nwfilter shouldn''t be permitted to change
      --bug 1077009'}
- model: caselink.caselink
  pk: 683
  fields: {workitem: RHEL7-18357, autocase_pattern: nwfilter_vm_start..kill_libvirtd,
    framework: libvirt-ci, title: '[Network filter]To terminate libvirtd when DHCP
      snooping is being used --Bug 1075543'}
- model: caselink.caselink
  pk: 684
  fields: {workitem: RHEL7-18358, autocase_pattern: nwfilter_vm_attach..attach_invalid_twice,
    framework: libvirt-ci, title: '[Network filter]Consistent error message when hot-plugging
      interface with an inexistence nwfilter repeatedly --Bug 1072677'}
- model: caselink.caselink
  pk: 685
  fields: {workitem: RHEL7-18359, autocase_pattern: nwfilter_vm_start..chain_priority_greater_than_rule,
    framework: libvirt-ci, title: '[Network filter]To start a domain with nwfilter
      whose chain priority is greater than its filter rule priority  --Bug 1072292'}
- model: caselink.caselink
  pk: 686
  fields: {workitem: RHEL7-18360, autocase_pattern: nwfilter_vm_start..ip_learning_err,
    framework: libvirt-ci, title: '[Network filter]Clear error message when parsing
      invalid value of CTRL_IP_LEARNING in nwfilter --Bug 1071095'}
- model: caselink.caselink
  pk: 687
  fields: {workitem: RHEL7-18345, autocase_pattern: nwfilter_vm_start..ipset_test,
    framework: libvirt-ci, title: '[network filter]Ip set API'}
- model: caselink.caselink
  pk: 688
  fields: {workitem: RHEL7-18326, autocase_pattern: 'nwfilter_update_vm_running..update_arp_rule,
      nwfilter_define..invalid_rule_action', framework: libvirt-ci, title: '[Network
      filter] - edit XML configuration for a network filter - bug 981107'}
- model: caselink.caselink
  pk: 689
  fields: {workitem: RHEL7-18349, autocase_pattern: nwfilter_vm_start..noexec_tmp_dir,
    framework: libvirt-ci, title: '[Network filter] - libvirt should initialize nwfilter
      when /tmp is mounted with noexec option - bug 752255'}
- model: caselink.caselink
  pk: 690
  fields: {workitem: RHEL7-18328, autocase_pattern: nwfilter_list, framework: libvirt-ci,
    title: '[Network filter] - list network filters'}
- model: caselink.caselink
  pk: 691
  fields: {workitem: RHEL7-18329, autocase_pattern: nwfilter_dumpxml, framework: libvirt-ci,
    title: '[Network filter] - network filter information in XML'}
- model: caselink.caselink
  pk: 692
  fields: {workitem: RHEL7-18330, autocase_pattern: nwfilter_undefine, framework: libvirt-ci,
    title: '[Network filter] - undefine a network filter'}
- model: caselink.caselink
  pk: 693
  fields: {workitem: RHEL7-18331, autocase_pattern: nwfilter_vm_start..allow_arp,
    framework: libvirt-ci, title: '[Network filter] allow arp'}
- model: caselink.caselink
  pk: 694
  fields: {workitem: RHEL7-18338, autocase_pattern: nwfilter_vm_start..allow_incoming_ipv4,
    framework: libvirt-ci, title: '[Network filter] allow incoming ipv4'}
- model: caselink.caselink
  pk: 695
  fields: {workitem: RHEL7-18337, autocase_pattern: nwfilter_vm_start..allow_ipv4,
    framework: libvirt-ci, title: '[Network filter] allow ipv4'}
- model: caselink.caselink
  pk: 696
  fields: {workitem: RHEL7-18339, autocase_pattern: nwfilter_vm_start..allow_dhcp,
    framework: libvirt-ci, title: '[Network filter] allow-dhcp'}
- model: caselink.caselink
  pk: 697
  fields: {workitem: RHEL7-18342, autocase_pattern: nwfilter_vm_start..allow_ipv6,
    framework: libvirt-ci, title: '[Network filter] allow-ipv6'}
- model: caselink.caselink
  pk: 698
  fields: {workitem: RHEL7-18341, autocase_pattern: nwfilter_vm_start..clean_traffic,
    framework: libvirt-ci, title: '[Network filter] clean-traffic'}
- model: caselink.caselink
  pk: 699
  fields: {workitem: RHEL7-18332, autocase_pattern: nwfilter_vm_start..disallow_arp,
    framework: libvirt-ci, title: '[Network filter] disallow arp'}
- model: caselink.caselink
  pk: 700
  fields: {workitem: RHEL7-18340, autocase_pattern: nwfilter_vm_start..disallow_dhcp,
    framework: libvirt-ci, title: '[Network filter] disallow dhcp'}
- model: caselink.caselink
  pk: 701
  fields: {workitem: RHEL7-18343, autocase_pattern: nwfilter_vm_start..disallow_ipv6,
    framework: libvirt-ci, title: '[Network filter] disallow-ipv6'}
- model: caselink.caselink
  pk: 702
  fields: {workitem: RHEL7-18336, autocase_pattern: nwfilter_vm_start..no_arp_spoofing,
    framework: libvirt-ci, title: '[Network filter] no-arp-spoofing'}
- model: caselink.caselink
  pk: 703
  fields: {workitem: RHEL7-18333, autocase_pattern: nwfilter_vm_start..no_ip_spoofing,
    framework: libvirt-ci, title: '[Network filter] no-ip-spoofing'}
- model: caselink.caselink
  pk: 704
  fields: {workitem: RHEL7-18335, autocase_pattern: nwfilter_vm_start..no_mac_broadcast,
    framework: libvirt-ci, title: '[Network filter] no-mac-broadcast'}
- model: caselink.caselink
  pk: 705
  fields: {workitem: RHEL7-18334, autocase_pattern: nwfilter_vm_start..no_mac_spoofing,
    framework: libvirt-ci, title: '[Network filter] no-mac-spoofing'}
- model: caselink.caselink
  pk: 706
  fields: {workitem: RHEL7-18344, autocase_pattern: nwfilter_vm_start..no_other_l2_traffic,
    framework: libvirt-ci, title: '[Network filter] no-other-l2-traffic'}
- model: caselink.caselink
  pk: 707
  fields: {workitem: RHEL7-18325, autocase_pattern: 'nwfilter_define..update_exist_filter,
      nwfilter_define..arp_test', framework: libvirt-ci, title: '[Network filter]
      - define or update a network filter from an XML file'}
- model: caselink.caselink
  pk: 708
  fields: {workitem: RHEL7-17369, autocase_pattern: libvirt.virsh.migrate_vm.positive_testing.live_migration.iscsi.ipv4,
    framework: libvirt-ci, title: '[Migration] migrate a guest based on iscsi storage'}
- model: caselink.caselink
  pk: 709
  fields: {workitem: RHEL7-17369, autocase_pattern: 'Note: This cases write long ago
      and the steps are old. We will implement the cases with the method similar with
      318286 which use iscsi network disk for ipv4 to implement.', framework: libvirt-ci,
    title: '[Migration] migrate a guest based on iscsi storage'}
- model: caselink.caselink
  pk: 710
  fields: {workitem: RHEL7-17309, autocase_pattern: libvirt.virsh.migrate_vm.positive_testing.live_migration.iscsi.ipv6,
    framework: libvirt-ci, title: '[Migration] Live migration with ipv6 iSCSI lun'}
- model: caselink.caselink
  pk: 711
  fields: {workitem: RHEL7-17306, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migration_with_ssh.positive_testing.ssh_static_ipv6,
    framework: libvirt-ci, title: '[Migration] migration based on ssh connection with
      ipv6 address - Bug 624626 846013'}
- model: caselink.caselink
  pk: 712
  fields: {workitem: RHEL7-17307, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migration_with_tcp.positive_testing.tcp_static_ipv6,
    framework: libvirt-ci, title: '[Migration] migration based on tcp connection with
      ipv6 address - Bug 624626 846013'}
- model: caselink.caselink
  pk: 713
  fields: {workitem: RHEL7-17308, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migration_with_tls.positive_testing.tls_static_ipv6,
    framework: libvirt-ci, title: '[Migration] migration based on TLS connection with
      ipv6 address - Bug 624626 846013'}
- model: caselink.caselink
  pk: 714
  fields: {workitem: RHEL7-17297, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.tunnelled_migration.positive_testing.with_tcp,
    framework: libvirt-ci, title: '[Migration] Tunnelled migration using a TLS enabled
      URI'}
- model: caselink.caselink
  pk: 715
  fields: {workitem: RHEL7-17298, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.tunnelled_migration.positive_testing.with_tls,
    framework: libvirt-ci, title: '[Migration] Tunnelled migration using TCP enabled
      URI without sasl'}
- model: caselink.caselink
  pk: 716
  fields: {workitem: RHEL7-17295, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.tunnelled_migration.positive_testing.with_ssh,
    framework: libvirt-ci, title: '[Migration][tunnelled] Tunnelled migration'}
- model: caselink.caselink
  pk: 717
  fields: {workitem: RHEL7-17295, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_p2p_tunnelled,
    framework: libvirt-ci, title: '[Migration][tunnelled] Tunnelled migration'}
- model: caselink.caselink
  pk: 718
  fields: {workitem: RHEL7-17285, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration.positive_testing.with_tls,
    framework: libvirt-ci, title: '[Migration] P2P migration using a TLS enabled URI
      - Bug 721411'}
- model: caselink.caselink
  pk: 719
  fields: {workitem: RHEL7-17286, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration.positive_testing.with_tcp,
    framework: libvirt-ci, title: '[Migration] P2P migration using TCP enabled URI
      without sasl'}
- model: caselink.caselink
  pk: 720
  fields: {workitem: RHEL7-17288, autocase_pattern: libvirt.virsh.migrate_vm.positive_testing.p2p_migration.bi_directional,
    framework: libvirt-ci, title: '[Migration]Bi-directional p2p migration between
      2 hosts.'}
- model: caselink.caselink
  pk: 721
  fields: {workitem: RHEL7-17352, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_compressed,
    framework: libvirt-ci, title: '[Migration] Page Delta Compression (xbzrle) for
      Live Migration Feature Request - support in libvirt BZ 842857'}
- model: caselink.caselink
  pk: 722
  fields: {workitem: RHEL7-17355, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_compressed,
    framework: libvirt-ci, title: '[migration]List the domjobinfo while migrate the
      guest with the --compressed option-- Bug: 1012818'}
- model: caselink.caselink
  pk: 723
  fields: {workitem: RHEL7-17353, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_seamless_migration_with_graphicsuri,
    framework: libvirt-ci, title: '[Migration]add optional [--clienturi] [<clienturi>]
      option to the migrate command  Bug: 980131'}
- model: caselink.caselink
  pk: 724
  fields: {workitem: RHEL7-17344, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_persistent,
    framework: libvirt-ci, title: '[Migration] Migration with --persistent with changing
      the original xml of guest - bug 738148'}
- model: caselink.caselink
  pk: 725
  fields: {workitem: RHEL7-17347, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_undefinesource,
    framework: libvirt-ci, title: '[Migration] suspend migration with option --undefinesource'}
- model: caselink.caselink
  pk: 726
  fields: {workitem: RHEL7-17349, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_offline,
    framework: libvirt-ci, title: '[Migration]Offline migration'}
- model: caselink.caselink
  pk: 727
  fields: {workitem: RHEL7-17343, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_direct,
    framework: libvirt-ci, title: '[Migration] direct migration  - bug 832373'}
- model: caselink.caselink
  pk: 728
  fields: {workitem: RHEL7-17348, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_dname,
    framework: libvirt-ci, title: '[Migration]Change domain name during migration'}
- model: caselink.caselink
  pk: 729
  fields: {workitem: RHEL7-17342, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_dname,
    framework: libvirt-ci, title: '[Migration] Change domain xml and name together
      during migration - Bug 744237, 741251'}
- model: caselink.caselink
  pk: 730
  fields: {workitem: RHEL7-17345, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_unsafe,
    framework: libvirt-ci, title: '[Migration] Migration with different cache mode
      - bug 751631'}
- model: caselink.caselink
  pk: 731
  fields: {workitem: RHEL7-17356, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.positive_testing.listen_address
      type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.positive_testing.p2p_listen_address
      type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.p2p_invalid_listen_address,
    framework: libvirt-ci, title: '[migration]Specify a listen address for incoming
      migration connections -- Bug:1015215,1018267,1049338'}
- model: caselink.caselink
  pk: 732
  fields: {workitem: RHEL7-17346, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_xml
      type_specific.io-github-autotest-libvirt.virsh.migrate.there_xml_nonexist type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.noexist_xml
      -- need update, framework: libvirt-ci, title: '[Migration][xml][persistent]
      Migration with xml and persistent - bug 835300 (Status: NEED_UPDATE)'}
- model: caselink.caselink
  pk: 733
  fields: {workitem: RHEL7-17357, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate.there_timeout
      type_specific.io-github-autotest-libvirt.virsh.migrate.there_timeout_short type_specific.io-github-autotest-libvirt.virsh.migrate.there_timeout_invalid
      type_specific.io-github-autotest-libvirt.virsh.migrate.there_timeout_offline,
    framework: libvirt-ci, title: '[migration][timeout]Setting timeout in live migration'}
- model: caselink.caselink
  pk: 734
  fields: {workitem: RHEL7-17357, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.timeout,
    framework: libvirt-ci, title: '[migration][timeout]Setting timeout in live migration'}
- model: caselink.caselink
  pk: 735
  fields: {workitem: RHEL7-17420, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.eject_cdrom_in_guest,
    framework: libvirt-ci, title: '[Migration] Migration after eject cdrom in guest
      - bug 725673'}
- model: caselink.caselink
  pk: 736
  fields: {workitem: RHEL7-17421, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom.requisite_policy,
    framework: libvirt-ci, title: '[Migration] Migration with non-shared floppy and
      cdrom with startupPolicy'}
- model: caselink.caselink
  pk: 737
  fields: {workitem: RHEL7-17421, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom.optional_policy,
    framework: libvirt-ci, title: '[Migration] Migration with non-shared floppy and
      cdrom with startupPolicy'}
- model: caselink.caselink
  pk: 738
  fields: {workitem: RHEL7-17421, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_floppy.requisite_policy,
    framework: libvirt-ci, title: '[Migration] Migration with non-shared floppy and
      cdrom with startupPolicy'}
- model: caselink.caselink
  pk: 739
  fields: {workitem: RHEL7-17421, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_floppy.optional_policy,
    framework: libvirt-ci, title: '[Migration] Migration with non-shared floppy and
      cdrom with startupPolicy'}
- model: caselink.caselink
  pk: 740
  fields: {workitem: RHEL7-17421, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom_and_floppy.requisite_policy,
    framework: libvirt-ci, title: '[Migration] Migration with non-shared floppy and
      cdrom with startupPolicy'}
- model: caselink.caselink
  pk: 741
  fields: {workitem: RHEL7-17421, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.startup_policy.attach_cdrom_and_floppy.optional_policy,
    framework: libvirt-ci, title: '[Migration] Migration with non-shared floppy and
      cdrom with startupPolicy'}
- model: caselink.caselink
  pk: 742
  fields: {workitem: RHEL7-17426, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.attach_virtual_disk,
    framework: libvirt-ci, title: '[migration] Migrate a guest with hotplugged virtio
      NICs and hotplugged disks'}
- model: caselink.caselink
  pk: 743
  fields: {workitem: RHEL7-17426, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.attach_virtual_nic,
    framework: libvirt-ci, title: '[migration] Migrate a guest with hotplugged virtio
      NICs and hotplugged disks'}
- model: caselink.caselink
  pk: 744
  fields: {workitem: RHEL7-17335, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.positive_testing.reboot_vm,
    framework: libvirt-ci, title: '[Migration] migration during vm reboot'}
- model: caselink.caselink
  pk: 745
  fields: {workitem: RHEL7-17333, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.positive_testing.pause_vm,
    framework: libvirt-ci, title: '[Migration] Migrate a paused KVM guest - Bug 519204
      981139'}
- model: caselink.caselink
  pk: 746
  fields: {workitem: RHEL7-17336, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.normal_test.zero
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.normal_test.one
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.normal_test.default
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.normal_test.uint32_max
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.normal_test.int64_max
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.error_test.space_option
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.error_test.no_option
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.error_test.invalid_option
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.error_test.negone
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.error_test.additional_option
      type_specific.io-github-autotest-libvirt.virsh.migrate_set_get_speed.error_test.uint64_max,
    framework: libvirt-ci, title: '[Migration][migrate-setspeed/getspeed] Set bandwidth
      of migration'}
- model: caselink.caselink
  pk: 747
  fields: {workitem: RHEL7-17336, autocase_pattern: need to double verify checkpoint,
    framework: libvirt-ci, title: '[Migration][migrate-setspeed/getspeed] Set bandwidth
      of migration'}
- model: caselink.caselink
  pk: 748
  fields: {workitem: RHEL7-17316, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.abort_job,
    framework: libvirt-ci, title: '[Migration]Abort migration job on destination during
      live migration --bug:580876 760149'}
- model: caselink.caselink
  pk: 749
  fields: {workitem: RHEL7-17326, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.restart_local_libvirtd,
    framework: libvirt-ci, title: '[Migration]During live migration, restart source
      libvirtd - bug 690175,634065,728603'}
- model: caselink.caselink
  pk: 750
  fields: {workitem: RHEL7-17326, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.tunnelled_migration.restart_local_libvirtd,
    framework: libvirt-ci, title: '[Migration]During live migration, restart source
      libvirtd - bug 690175,634065,728603'}
- model: caselink.caselink
  pk: 751
  fields: {workitem: RHEL7-17321, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.set_max_downtime_with_iozone,
    framework: libvirt-ci, title: '[Migration] Set max downtime during migration'}
- model: caselink.caselink
  pk: 752
  fields: {workitem: RHEL7-17314, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_devices.attach_loop_dev,
    framework: libvirt-ci, title: '[Migration] Do readonly command during qemu migration
      - bug 704124'}
- model: caselink.caselink
  pk: 753
  fields: {workitem: RHEL7-17329, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.track_statistics,
    framework: libvirt-ci, title: '[migration]libvirt should  track statistics of
      Completed Live Migration -- bug:1063724'}
- model: caselink.caselink
  pk: 754
  fields: {workitem: RHEL7-17161, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.set_cache_size,
    framework: libvirt-ci, title: '[migrate-compcache] Get/set size of the cache (in
      bytes) used for compressing repeatedly transferred memory pages during live
      migration - BZ 857578'}
- model: caselink.caselink
  pk: 755
  fields: {workitem: RHEL7-17351, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.set_cache_size,
    framework: libvirt-ci, title: '[migrate-compcache] Get/set size of the cache (in
      bytes) used for compressing repeatedly transferred memory pages during live
      migration - BZ 857578'}
- model: caselink.caselink
  pk: 756
  fields: {workitem: RHEL7-17331, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.stop_libvirtd_remotely,
    framework: libvirt-ci, title: '[migration]Stopping DST libvirtd during migration'}
- model: caselink.caselink
  pk: 757
  fields: {workitem: RHEL7-17412, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.stop_libvirtd_remotely
      -- need update, framework: libvirt-ci, title: '[Migration] Migration with not
      start libvirtd on target host - bug 736590'}
- model: caselink.caselink
  pk: 758
  fields: {workitem: RHEL7-17415, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.unreachable_destenation
      type_specific.io-github-autotest-libvirt.virsh.p2p_migration.negative_testing.tls_unreachable_destenation
      type_specific.io-github-autotest-libvirt.virsh.p2p_migration.negative_testing.tcp_unreachable_destenation,
    framework: libvirt-ci, title: '[Migration]migrating domain to unreachable destination
      - bug 723912, 723881 822839'}
- model: caselink.caselink
  pk: 759
  fields: {workitem: RHEL7-17417, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.stop_virt_use_nfs_remotely,
    framework: libvirt-ci, title: '[migration]migration will cause guest IO failure
      when DST sebool is virt_use_nfs=off BZ 822052, 895826'}
- model: caselink.caselink
  pk: 760
  fields: {workitem: RHEL7-17411, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.noexist_xml,
    framework: libvirt-ci, title: '[Migration] Migration with non-existent xml - bug
      773208'}
- model: caselink.caselink
  pk: 761
  fields: {workitem: RHEL7-17410, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.abort_job,
    framework: libvirt-ci, title: '[migration] general error return on migrate after
      calling abortjob() - bug 760149'}
- model: caselink.caselink
  pk: 762
  fields: {workitem: RHEL7-17414, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.unprivileged_user,
    framework: libvirt-ci, title: '[Migration]migrated VM not visible to non-root
      user on the target host BZ 847822'}
- model: caselink.caselink
  pk: 763
  fields: {workitem: RHEL7-17409, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.p2p_migration_with_ssh.negative_testing.same_host_uuid,
    framework: libvirt-ci, title: '[migration] check the  host''s uuid before migration'}
- model: caselink.caselink
  pk: 764
  fields: {workitem: RHEL7-17330, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.cancel_migration,
    framework: libvirt-ci, title: '[Migration]Stop migration on the third machine
      while migration --bug 983348'}
- model: caselink.caselink
  pk: 765
  fields: {workitem: RHEL7-17385, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_nbd.nbd_port,
    framework: libvirt-ci, title: '[migration]libvirtd use a port from the migration
      range for NBD migration'}
- model: caselink.caselink
  pk: 766
  fields: {workitem: RHEL7-19089, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.migration_with_gluster.gluster,
    framework: libvirt-ci, title: '[Migration] Migration with gluster volume defined
      in disk xml with type=netowrk'}
- model: caselink.caselink
  pk: 767
  fields: {workitem: RHEL7-17303, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.cpuset,
    framework: libvirt-ci, title: '[Migration] migrate a guest with vcpu pinning on
      the same CPU model'}
- model: caselink.caselink
  pk: 768
  fields: {workitem: RHEL7-17302, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.diff_cpu_vendor,
    framework: libvirt-ci, title: '[Migration] Live migration between non-similar
      processors - different vendor'}
- model: caselink.caselink
  pk: 769
  fields: {workitem: RHEL7-17375, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.vm_without_video,
    framework: libvirt-ci, title: '[Migration]  Do live migration from rhel7.0 to
      rhel7.1 or later with pci 0:0:2.0 not assign to video - bug 771603'}
- model: caselink.caselink
  pk: 770
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.SandyBridge,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 771
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Hasswell,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 772
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Westmere_no_xsave,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 773
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Nehalem_no_xsave,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 774
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Penryn_no_xsave,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 775
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.intel.Conroe_no_xsave,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 776
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G4,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 777
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G5,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 778
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G1_no_xsave,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 779
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G2_no_xsave,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 780
  fields: {workitem: RHEL7-17379, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_cpu_model.amd.Opteron_G3_no_xsave,
    framework: libvirt-ci, title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 781
  fields: {workitem: RHEL7-17379, autocase_pattern: need to design and debug, framework: libvirt-ci,
    title: '[migration]Cross migration with different CPU model'}
- model: caselink.caselink
  pk: 782
  fields: {workitem: RHEL7-17380, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.cross_rhel_platform_migration.with_disabled_device.sound_device,
    framework: libvirt-ci, title: '[migration]Cross migration with some disabled device
      on rhel7'}
- model: caselink.caselink
  pk: 783
  fields: {workitem: RHEL7-17380, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.cross_rhel_platform_migration.with_disabled_device.with_host_cdrom,
    framework: libvirt-ci, title: '[migration]Cross migration with some disabled device
      on rhel7'}
- model: caselink.caselink
  pk: 784
  fields: {workitem: RHEL7-17380, autocase_pattern: need to design and debug, framework: libvirt-ci,
    title: '[migration]Cross migration with some disabled device on rhel7'}
- model: caselink.caselink
  pk: 785
  fields: {workitem: RHEL7-17378, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.write_bytes_sec,
    framework: libvirt-ci, title: '[migration]Cross migration with I/O throttling'}
- model: caselink.caselink
  pk: 786
  fields: {workitem: RHEL7-17378, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.read_bytes_sec,
    framework: libvirt-ci, title: '[migration]Cross migration with I/O throttling'}
- model: caselink.caselink
  pk: 787
  fields: {workitem: RHEL7-17378, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.total_bytes_sec,
    framework: libvirt-ci, title: '[migration]Cross migration with I/O throttling'}
- model: caselink.caselink
  pk: 788
  fields: {workitem: RHEL7-17378, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_io_throttling.total_iops_sec,
    framework: libvirt-ci, title: '[migration]Cross migration with I/O throttling'}
- model: caselink.caselink
  pk: 789
  fields: {workitem: RHEL7-12652, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.cross_rhel_platform_migration.with_s3_s4.between_source_and_remote
      -- need update, framework: libvirt-ci, title: '[cross-migration] Do s3/s4 while
      migrate the guest from rhel6.5 host to rhel7 host Bug 1037480'}
- model: caselink.caselink
  pk: 790
  fields: {workitem: RHEL7-17392, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.stress.vm.iozone_with_set_max_downtime,
    framework: libvirt-ci, title: '[Migration] migrate a guest with disk I/O load'}
- model: caselink.caselink
  pk: 791
  fields: {workitem: RHEL7-17393, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.stress.host.stress_cpu,
    framework: libvirt-ci, title: '[Migration] migrate a guest with heavy CPU load'}
- model: caselink.caselink
  pk: 792
  fields: {workitem: RHEL7-17394, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.stress.host.stress_memory,
    framework: libvirt-ci, title: '[Migration] migrate a guest with heavy MEM load'}
- model: caselink.caselink
  pk: 793
  fields: {workitem: RHEL7-17396, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.stress.vm.memhog_memory_without_swap,
    framework: libvirt-ci, title: '[Migration] Live migrate with high memory load
      with no swap'}
- model: caselink.caselink
  pk: 794
  fields: {workitem: RHEL7-17395, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.with_hugepages,
    framework: libvirt-ci, title: '[Migration] migrate a guest with hugepage memory'}
- model: caselink.caselink
  pk: 795
  fields: {workitem: RHEL7-17395, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.with_hugepages.no_config_target,
    framework: libvirt-ci, title: '[Migration] migrate a guest with hugepage memory'}
- model: caselink.caselink
  pk: 796
  fields: {workitem: RHEL7-17395, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.with_hugepages.source_hugemem_less_than_vm_mem,
    framework: libvirt-ci, title: '[Migration] migrate a guest with hugepage memory'}
- model: caselink.caselink
  pk: 797
  fields: {workitem: RHEL7-17395, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.with_hugepages.target_hugemem_less_than_vm_mem,
    framework: libvirt-ci, title: '[Migration] migrate a guest with hugepage memory'}
- model: caselink.caselink
  pk: 798
  fields: {workitem: RHEL7-17395, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_migration.with_hugepages.no_restart_target_libvirtd,
    framework: libvirt-ci, title: '[Migration] migrate a guest with hugepage memory'}
- model: caselink.caselink
  pk: 799
  fields: {workitem: RHEL7-17401, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_migration.stress.host.netperf_network,
    framework: libvirt-ci, title: '[Migration] migration with network load on both
      source and target host in high speed(1000Mb/s) network'}
- model: caselink.caselink
  pk: 800
  fields: {workitem: RHEL7-17367, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.blockpull.normal_test.file_disk.local.notimeout.live_storage_migration,
    framework: libvirt-ci, title: '[Migration] Live migration of storage using blockpull  (without
      moving VM) - bug 638506'}
- model: caselink.caselink
  pk: 801
  fields: {workitem: RHEL7-17370, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_storage_migration.backing_file_with_copy_storage_inc,
    framework: libvirt-ci, title: '[Migration] Migration with copy-storage-inc'}
- model: caselink.caselink
  pk: 802
  fields: {workitem: RHEL7-17368, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_storage_migration.basic,
    framework: libvirt-ci, title: '[Migration] Live migration with non-shared storage
      for kvm with --copy-storage-all - bug 677220, 913363'}
- model: caselink.caselink
  pk: 803
  fields: {workitem: RHEL7-17368, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_storage_migration.writethrough_driver_cache,
    framework: libvirt-ci, title: '[Migration] Live migration with non-shared storage
      for kvm with --copy-storage-all - bug 677220, 913363'}
- model: caselink.caselink
  pk: 804
  fields: {workitem: RHEL7-17372, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_storage_migration.mutually_exclusive_options,
    framework: libvirt-ci, title: '[Migration]Negative testing for storage live migration'}
- model: caselink.caselink
  pk: 805
  fields: {workitem: RHEL7-17372, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_storage_migration.cancel_migration.copy_storage_all,
    framework: libvirt-ci, title: '[Migration]Negative testing for storage live migration'}
- model: caselink.caselink
  pk: 806
  fields: {workitem: RHEL7-17372, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_storage_migration.cancel_migration.copy_storage_inc,
    framework: libvirt-ci, title: '[Migration]Negative testing for storage live migration'}
- model: caselink.caselink
  pk: 807
  fields: {workitem: RHEL7-17372, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_storage_migration.qcow2_to_raw_target_image_format.copy_storage_all,
    framework: libvirt-ci, title: '[Migration]Negative testing for storage live migration'}
- model: caselink.caselink
  pk: 808
  fields: {workitem: RHEL7-17372, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.negative_testing.live_storage_migration.qcow2_to_raw_target_image_format.copy_storage_inc,
    framework: libvirt-ci, title: '[Migration]Negative testing for storage live migration'}
- model: caselink.caselink
  pk: 809
  fields: {workitem: RHEL7-17372, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_storage_migration.raw_to_qcow2_target_image_format.copy_storage_all,
    framework: libvirt-ci, title: '[Migration]Negative testing for storage live migration'}
- model: caselink.caselink
  pk: 810
  fields: {workitem: RHEL7-17372, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_storage_migration.raw_to_qcow2_target_image_format.copy_storage_inc,
    framework: libvirt-ci, title: '[Migration]Negative testing for storage live migration'}
- model: caselink.caselink
  pk: 811
  fields: {workitem: RHEL7-17373, autocase_pattern: type_specific.io-github-autotest-libvirt.virsh.migrate_vm.positive_testing.live_storage_migration.simple,
    framework: libvirt-ci, title: '[migration]Live storage migration'}
- model: caselink.caselink
  pk: 812
  fields: {workitem: RHEL7-17319, autocase_pattern: normal test, framework: libvirt-ci,
    title: '[Migration] migration with SMP enabled'}
- model: caselink.caselink
  pk: 813
  fields: {workitem: RHEL7-17300, autocase_pattern: 'normal test,different host type',
    framework: libvirt-ci, title: '[Migration] Live migration based on same cpu vendor
      - AMD'}
- model: caselink.caselink
  pk: 814
  fields: {workitem: RHEL7-17301, autocase_pattern: 'normal test, different host type',
    framework: libvirt-ci, title: '[Migration] Live migration based on same cpu vendor
      - intel'}
- model: caselink.caselink
  pk: 815
  fields: {workitem: RHEL7-17350, autocase_pattern: It should be covered in above
      cases., framework: libvirt-ci, title: '[Migration]Use an alternate migration
      URI to do the migration'}
- model: caselink.caselink
  pk: 816
  fields: {workitem: RHEL7-17553, autocase_pattern: controller.functional.positive_tests.pci_root,
    framework: libvirt-ci, title: '[console and serial devices][controller]Provide
      option to enable/disable 64-bit PCI hole on pci-root'}
- model: caselink.caselink
  pk: 817
  fields: {workitem: RHEL7-17553, autocase_pattern: controller.functional.positive_tests.pcie_root,
    framework: libvirt-ci, title: '[console and serial devices][controller]Provide
      option to enable/disable 64-bit PCI hole on pci-root'}
- model: caselink.caselink
  pk: 818
  fields: {workitem: RHEL7-17786, autocase_pattern: controller.functional.positive_tests.usb_controller,
    framework: libvirt-ci, title: '[console and serial devices][controller]Support
      ich9-intel-hda audio device and ehci+uhci controllers - bug1003983 (audio device
      not covered yet)'}
- model: caselink.caselink
  pk: 819
  fields: {workitem: RHEL7-17550, autocase_pattern: serial.functional.type_unix, framework: libvirt-ci,
    title: '[console and serial devices][serial]UNIX type serial port in domain --bug
      1088787'}
- model: caselink.caselink
  pk: 820
  fields: {workitem: RHEL7-17549, autocase_pattern: serial.functional.type_udp_client,
    framework: libvirt-ci, title: '[console and serial devices][serial]UDP type serial
      port in domain'}
- model: caselink.caselink
  pk: 821
  fields: {workitem: RHEL7-17548, autocase_pattern: serial.functional.type_pipe, framework: libvirt-ci,
    title: '[console and serial devices][serial]Named pipe type serial port in domain'}
- model: caselink.caselink
  pk: 822
  fields: {workitem: RHEL7-17547, autocase_pattern: serial.functional.type_tcp_server,
    framework: libvirt-ci, title: '[console and serial devices][serial]TCP type serial
      port in domain'}
- model: caselink.caselink
  pk: 823
  fields: {workitem: RHEL7-17547, autocase_pattern: serial.functional.type_tcp_client,
    framework: libvirt-ci, title: '[console and serial devices][serial]TCP type serial
      port in domain'}
- model: caselink.caselink
  pk: 824
  fields: {workitem: RHEL7-17545, autocase_pattern: controller.functional.negative_tests.invalid_index,
    framework: libvirt-ci, title: '[console and serial devices][controller]It should
      report an error while add an invalid pci controller to the guest ---bug 981261'}
- model: caselink.caselink
  pk: 825
  fields: {workitem: RHEL7-17544, autocase_pattern: virsh.console.normal_test.acl_test.valid_domname,
    framework: libvirt-ci, title: '[console and serial devices][console]Prevent multiple
      connections to same VM console and add ability to force disconnect existing
      console sessions 729940'}
- model: caselink.caselink
  pk: 826
  fields: {workitem: RHEL7-17541, autocase_pattern: serial.functional.console_target_type_virtio,
    framework: libvirt-ci, title: '[console and serial devices][serial]Support for
      KVM virtio serial/console'}
- model: caselink.caselink
  pk: 827
  fields: {workitem: RHEL7-17540, autocase_pattern: controller.functional.positive_tests.virtio_serial,
    framework: libvirt-ci, title: '[console and serial devices][controller]virtio-serial
      controller functionality with MSI Enabled/Disabled'}
- model: caselink.caselink
  pk: 828
  fields: {workitem: RHEL7-17540, autocase_pattern: controller.functional.positive_tests.virtio_serial_0_vectors,
    framework: libvirt-ci, title: '[console and serial devices][controller]virtio-serial
      controller functionality with MSI Enabled/Disabled'}
- model: caselink.caselink
  pk: 829
  fields: {workitem: RHEL7-17536, autocase_pattern: virsh.console.normal_test.acl_test.valid_domname,
    framework: libvirt-ci, title: '[console and serial devices][console]console should
      be released in interactive virsh -- bug 730101'}
- model: caselink.caselink
  pk: 830
  fields: {workitem: RHEL7-17564, autocase_pattern: virsh.console.normal_test.acl_test.valid_domname,
    framework: libvirt-ci, title: '[console and serial devices][console]forced console
      connection--Bug811497'}
- model: caselink.caselink
  pk: 831
  fields: {workitem: RHEL7-17533, autocase_pattern: serial.functional.type_vc, framework: libvirt-ci,
    title: '[console and serial devices][serial]vc type serial port in domain'}
- model: caselink.caselink
  pk: 832
  fields: {workitem: RHEL7-17530, autocase_pattern: virsh.console.normal_test.acl_test.valid_domname,
    framework: libvirt-ci, title: '[Console and serial devices][console]console disconnection
      after guest os gets shut down'}
- model: caselink.caselink
  pk: 833
  fields: {workitem: RHEL7-17529, autocase_pattern: serial.functional.type_file, framework: libvirt-ci,
    title: '[Console and serial devices][serial]file type serial port in domain'}
- model: caselink.caselink
  pk: 834
  fields: {workitem: RHEL7-17532, autocase_pattern: virsh.console.normal_test.acl_test.valid_domnamevirsh.console.normal_test.acl_test.valid_domidvirsh.console.normal_test.acl_test.valid_domuuidvirsh.console.error_test.acl_test,
    framework: libvirt-ci, title: '[console and serial devices][console]use non-root
      user to connect guest console - bug 700443'}
- model: caselink.caselink
  pk: 835
  fields: {workitem: RHEL7-17527, autocase_pattern: virsh.console.normal_test.non_acl.valid_domnamevirsh.console.normal_test.non_acl.valid_domidvirsh.console.normal_test.non_acl.valid_domuuid,
    framework: libvirt-ci, title: '[Console and serial devices][console]Connect to
      a guest console'}
- model: caselink.caselink
  pk: 836
  fields: {workitem: RHEL7-17543, autocase_pattern: virsh.attach_device.character.pty_console,
    framework: libvirt-ci, title: '[console and serial devices][console]hot-plug/unplug
      the console and channel to guest --bug 887348'}
- model: caselink.caselink
  pk: 837
  fields: {workitem: RHEL7-17543, autocase_pattern: virsh.attach_device.character.pty_channel,
    framework: libvirt-ci, title: '[console and serial devices][console]hot-plug/unplug
      the console and channel to guest --bug 887348'}
- model: caselink.caselink
  pk: 838
  fields: {workitem: RHEL7-17543, autocase_pattern: virsh.attach_device.character.unix_channel,
    framework: libvirt-ci, title: '[console and serial devices][console]hot-plug/unplug
      the console and channel to guest --bug 887348'}
- model: caselink.caselink
  pk: 839
  fields: {workitem: RHEL7-17542, autocase_pattern: virsh.attach_device.character.scsi_controller,
    framework: libvirt-ci, title: '[console and serial devices][controller]Controllers
      do not support virsh attach/detach-device --persistent BZ#804601'}
- model: caselink.caselink
  pk: 840
  fields: {workitem: RHEL7-17535, autocase_pattern: channel.functional.negative_tests.guestfwd_without_address,
    framework: libvirt-ci, title: '[console and serial devices][channel]Modify target
      type of channel element from ''virtio'' to ''guestfwd'' should not cause libvirtd
      crash -- Bug 856489'}
- model: caselink.caselink
  pk: 841
  fields: {workitem: RHEL7-17537, autocase_pattern: channel.functional.positive_tests.target_virtio..unix_type,
    framework: libvirt-ci, title: '[console and serial devices][channel]virtio UNIX
      type channel in domain'}
- model: caselink.caselink
  pk: 842
  fields: {workitem: RHEL7-16410, autocase_pattern: numa_memory..strict..no_vcpu,
    framework: libvirt-ci, title: '[NUMA]memory tuning strict mode -- bug 1010885'}
- model: caselink.caselink
  pk: 843
  fields: {workitem: RHEL7-16416, autocase_pattern: numa_preferred_undefine, framework: libvirt-ci,
    title: '[NUMA] memory tuning preferred mode with auto placement -- bug 1006722'}
- model: caselink.caselink
  pk: 844
  fields: {workitem: RHEL7-16411, autocase_pattern: numa_memory..out_range, framework: libvirt-ci,
    title: '[NUMA] memory tuning for node out of range'}
- model: caselink.caselink
  pk: 845
  fields: {workitem: RHEL7-16414, autocase_pattern: numa_memory..interleave..no_vcpu,
    framework: libvirt-ci, title: '[NUMA]memory tuning interleave mode'}
- model: caselink.caselink
  pk: 846
  fields: {workitem: RHEL7-16415, autocase_pattern: 'numa_memory..preferred..no_vcpu,
      numa_memory..preferred_multi', framework: libvirt-ci, title: '[NUMA]memory tuning
      preferred mode'}
- model: caselink.caselink
  pk: 847
  fields: {workitem: RHEL7-16412, autocase_pattern: vcpupin, framework: libvirt-ci,
    title: '[NUMA] VM CPU Runtime pinning'}
- model: caselink.caselink
  pk: 848
  fields: {workitem: RHEL7-16408, autocase_pattern: numad_vcpupin, framework: libvirt-ci,
    title: '[NUMA] vcpupin fail with non-specific error msg when numad is running
      - bug 846620'}
- model: caselink.caselink
  pk: 849
  fields: {workitem: RHEL7-16417, autocase_pattern: numa_memory..vcpu, framework: libvirt-ci,
    title: '[NUMA]numad testing - bug 769930, 810157, 820461, 949408'}
- model: caselink.caselink
  pk: 850
  fields: {workitem: RHEL7-16423, autocase_pattern: vcpupin, framework: libvirt-ci,
    title: '[NUMA] creating vm to place the vcpu in certain cell'}
- model: caselink.caselink
  pk: 851
  fields: {workitem: RHEL7-16429, autocase_pattern: numa_capabilities, framework: libvirt-ci,
    title: '[NUMA] show numa topology'}
- model: caselink.caselink
  pk: 852
  fields: {workitem: RHEL7-16432, autocase_pattern: 'numa_capabilities, nodeinfo',
    framework: libvirt-ci, title: '[NUMA] CPU topology parsing bug on special NUMA
      platform - bug 828729,bug874050'}
- model: caselink.caselink
  pk: 853
  fields: {workitem: RHEL7-16432, autocase_pattern: Run on specific host, framework: libvirt-ci,
    title: '[NUMA] CPU topology parsing bug on special NUMA platform - bug 828729,bug874050'}
- model: caselink.caselink
  pk: 854
  fields: {workitem: RHEL7-16430, autocase_pattern: numa_capabilities, framework: libvirt-ci,
    title: '[NUMA] inspect host NUMA node distances -- bug 1086331'}
- model: caselink.caselink
  pk: 855
  fields: {workitem: RHEL7-16438, autocase_pattern: node_memtune, framework: libvirt-ci,
    title: '[NUMA] NUMA aware KSM support in libvirt - bug 840113'}
- model: caselink.caselink
  pk: 856
  fields: {workitem: RHEL7-16425, autocase_pattern: guest_numa..hugepage..2M..numatune_memnode..m_strict..no_numatune_mem,
    framework: libvirt-ci, title: '[NUMA][NFV] strict NUMA policy on hugetlbfs backed
      guests with enough hugepages -- bug 1061470, 1076730, 1076989'}
- model: caselink.caselink
  pk: 857
  fields: {workitem: RHEL7-16426, autocase_pattern: guest_numa.negative_test.strict_memnode_insufficent,
    framework: libvirt-ci, title: '[NUMA][NFV] strict NUMA policy on hugetlbfs backed
      guests without enough hugepages -- bug 1061470, 1076730, 1076989'}
- model: caselink.caselink
  pk: 858
  fields: {workitem: RHEL7-16435, autocase_pattern: nodedev_dumpxml.positve_test.non_acl.normal_test,
    framework: libvirt-ci, title: '[Node Devices][NFV] nodedev-dumpxml reports NUMA
      node locality for PCI devices on NUMA machine--bug 1093127'}
- model: caselink.caselink
  pk: 859
  fields: {workitem: RHEL7-16421, autocase_pattern: guest_numa..hugepage..2M..numatune_memnode..numatune_mem,
    framework: libvirt-ci, title: '[NUMA][NFV] Host to Guest NUMA memory binding -
      bug 997627'}
- model: caselink.caselink
  pk: 860
  fields: {workitem: RHEL7-16424, autocase_pattern: guest_numa..hugepage..2M..topology..no_numatune_memnode..no_numatune_mem,
    framework: libvirt-ci, title: '[NUMA][NFV] guest numa topology with 2M-hugepages
      - bug 1076725'}
- model: caselink.caselink
  pk: 861
  fields: {workitem: RHEL7-16407, autocase_pattern: guest_numa..no_hugepage..topology..no_numatune_memnode..no_numatune_mem,
    framework: libvirt-ci, title: '[NUMA] guest numa topology - bug 832165'}
- model: caselink.caselink
  pk: 862
  fields: {workitem: RHEL7-16406, autocase_pattern: guest_numa..no_hugepage..topology..no_numatune_memnode..no_numatune_mem
      -- need update, framework: libvirt-ci, title: '[NUMA] guest numa topology with
      node memory alignment - bug 832165, 974374, 1076725'}
- model: caselink.caselink
  pk: 863
  fields: {workitem: RHEL7-16427, autocase_pattern: guest_numa..1G, framework: libvirt-ci,
    title: '[NUMA][NFV] guest numa topology with 1G-hugepages - bug 1076725'}
- model: caselink.caselink
  pk: 864
  fields: {workitem: RHEL7-16418, autocase_pattern: numa_memory_migrate -- need update,
    framework: libvirt-ci, title: '[NUMA]virsh numatune doesn''t migrate memory in
      a running VM  - 1198497'}
- model: caselink.caselink
  pk: 865
  fields: {workitem: RHEL7-17263, autocase_pattern: virsh.edit.positive_test.name_option.edit_rng.backend_null,
    framework: libvirt-ci, title: '[virtio-rng] Don''t specify the backend or give
      invalid value for virtio-rng  - bug 919004'}
- model: caselink.caselink
  pk: 866
  fields: {workitem: RHEL7-17263, autocase_pattern: virsh.edit.positive_test.name_option.edit_rng.backend_dev,
    framework: libvirt-ci, title: '[virtio-rng] Don''t specify the backend or give
      invalid value for virtio-rng  - bug 919004'}
- model: caselink.caselink
  pk: 867
  fields: {workitem: RHEL7-17253, autocase_pattern: libvirt_rng.rng_rate, framework: libvirt-ci,
    title: '[virtio-rng]Virtio-rng device limit rate consuming.'}
- model: caselink.caselink
  pk: 868
  fields: {workitem: RHEL7-17254, autocase_pattern: virsh.edit.positive_test.name_option.edit_rng.backend_type_unix,
    framework: libvirt-ci, title: '[virtio-rng] Unsupported combination for backend
      type "unix"/"invalid" and source info for virtio-rng BG1012196'}
- model: caselink.caselink
  pk: 869
  fields: {workitem: RHEL7-17254, autocase_pattern: virsh.edit.positive_test.name_option.edit_rng.backend_type_invalid,
    framework: libvirt-ci, title: '[virtio-rng] Unsupported combination for backend
      type "unix"/"invalid" and source info for virtio-rng BG1012196'}
- model: caselink.caselink
  pk: 870
  fields: {workitem: RHEL7-17255, autocase_pattern: libvirt_rng.rng_snapshot.back_rdm,
    framework: libvirt-ci, title: '[virtio-rng]Snapshot of domain with the random
      backend RNG device'}
- model: caselink.caselink
  pk: 871
  fields: {workitem: RHEL7-17256, autocase_pattern: libvirt_rng.rng_snapshot.back_tcp_connect,
    framework: libvirt-ci, title: '[virtio-rng]Snapshot of domain with TCP backend
      Connect mode RNG device'}
- model: caselink.caselink
  pk: 872
  fields: {workitem: RHEL7-17257, autocase_pattern: libvirt_rng.rng_snapshot.back_tcp_bind,
    framework: libvirt-ci, title: '[virtio-rng]Snapshot of domain with TCP backend
      Bind mode RNG device'}
- model: caselink.caselink
  pk: 873
  fields: {workitem: RHEL7-17258, autocase_pattern: libvirt_rng.rng_snapshot.back_udp,
    framework: libvirt-ci, title: '[virtio-rng]Snapshot of domain with UDP backend
      RNG device'}
- model: caselink.caselink
  pk: 874
  fields: {workitem: RHEL7-17252, autocase_pattern: libvirt_rng.multiple_rng, framework: libvirt-ci,
    title: '[virtio-rng]More than one virtio-rng device are supported -Bug 915335
      1119206 1008860'}
- model: caselink.caselink
  pk: 875
  fields: {workitem: RHEL7-17251, autocase_pattern: libvirt_rng.backend_rdm, framework: libvirt-ci,
    title: '[virtio-rng]Basic test for virtio-rng device - bug 852187'}
- model: caselink.caselink
  pk: 876
  fields: {workitem: RHEL7-17251, autocase_pattern: libvirt_rng.backend_tcp, framework: libvirt-ci,
    title: '[virtio-rng]Basic test for virtio-rng device - bug 852187'}
- model: caselink.caselink
  pk: 877
  fields: {workitem: RHEL7-17251, autocase_pattern: libvirt_rng.backend_udp, framework: libvirt-ci,
    title: '[virtio-rng]Basic test for virtio-rng device - bug 852187'}
- model: caselink.caselink
  pk: 878
  fields: {workitem: RHEL7-17251, autocase_pattern: 'random pool not covered, bug916194',
    framework: libvirt-ci, title: '[virtio-rng]Basic test for virtio-rng device -
      bug 852187'}
- model: caselink.caselink
  pk: 879
  fields: {workitem: RHEL7-16788, autocase_pattern: 'libvirt_mem.mem_device.positive_test.hot_plug,libvirt_mem.mem_device.positive_test.cold_plug',
    framework: libvirt-ci, title: '[Memory management] Support for memory hot-plug
      BZ 790583'}
- model: caselink.caselink
  pk: 880
  fields: {workitem: RHEL7-16786, autocase_pattern: libvirt_mem.positive_test.mem_basic,
    framework: libvirt-ci, title: '[Memory management] basic check for maxmemory'}
- model: caselink.caselink
  pk: 881
  fields: {workitem: RHEL7-16787, autocase_pattern: libvirt_mem.mem_device.positive_test.with_source,
    framework: libvirt-ci, title: '[Memory management] basic check for pc-dimm memory
      device'}
- model: caselink.caselink
  pk: 882
  fields: {workitem: RHEL7-16789, autocase_pattern: 'libvirt_mem.positive_test.cold_plug,libvirt_mem.positive_test.hot_plug',
    framework: libvirt-ci, title: '[Memory management] memory device hot-unplug and
      cold-unplug'}
- model: caselink.caselink
  pk: 883
  fields: {workitem: RHEL7-16792, autocase_pattern: libvirt_mem.positive_test.hugepages,
    framework: libvirt-ci, title: '[Memory management] test memory deivce binding
      to host node and hugepages'}
- model: caselink.caselink
  pk: 884
  fields: {workitem: RHEL7-16790, autocase_pattern: 'libvirt_mem.negative_test.setmem_error,',
    framework: libvirt-ci, title: '[Memory management] relevance test for Max memory,
      initial memory, current memory - bug 1216046 1220702'}
- model: caselink.caselink
  pk: 885
  fields: {workitem: RHEL7-16790, autocase_pattern: 'libvirt_mem.negative_test.attach_error.attach_many_times,',
    framework: libvirt-ci, title: '[Memory management] relevance test for Max memory,
      initial memory, current memory - bug 1216046 1220702'}
- model: caselink.caselink
  pk: 886
  fields: {workitem: RHEL7-16790, autocase_pattern: libvirt_mem.positive_test.cold_plug,
    framework: libvirt-ci, title: '[Memory management] relevance test for Max memory,
      initial memory, current memory - bug 1216046 1220702'}
- model: caselink.caselink
  pk: 887
  fields: {workitem: RHEL7-16791, autocase_pattern: 'libvirt_mem.negative_test.start_error,',
    framework: libvirt-ci, title: '[Memory management] Negative test for memory device
      and memory hot-plug'}
- model: caselink.caselink
  pk: 888
  fields: {workitem: RHEL7-16791, autocase_pattern: libvirt_mem.negative_test.attach_error,
    framework: libvirt-ci, title: '[Memory management] Negative test for memory device
      and memory hot-plug'}
- model: caselink.caselink
  pk: 889
  fields: {workitem: RHEL7-16458, autocase_pattern: virtual_disks.ceph..network_type,
    framework: libvirt-ci, title: '[virtual disks][network][ceph] Start domain with
      images based on ceph with disk type=network'}
- model: caselink.caselink
  pk: 890
  fields: {workitem: RHEL7-16478, autocase_pattern: virtual_disks.ceph..domain_operation.save_restore,
    framework: libvirt-ci, title: '[virtual disks][ceph] Save/restore a guest using
      rbd based image as disk'}
- model: caselink.caselink
  pk: 891
  fields: {workitem: RHEL7-16462, autocase_pattern: virtual_disks.ceph..disk_attach,
    framework: libvirt-ci, title: '[virtual disks][ceph] hotplug/hotunplug rbd based
      disk --BZ1045107'}
- model: caselink.caselink
  pk: 892
  fields: {workitem: RHEL7-16466, autocase_pattern: virtual_disks.ceph..domain_operation.snapshot,
    framework: libvirt-ci, title: '[snapshot][ceph] External system check point snapshot
      with a guest using rbd based image as disk'}
- model: caselink.caselink
  pk: 893
  fields: {workitem: RHEL7-16465, autocase_pattern: virtual_disks.ceph..domain_operation.snapshot.disk_only,
    framework: libvirt-ci, title: '[snapshot][ceph] External disk-only snapshot with
      rbd based disk --BZ1164528'}
- model: caselink.caselink
  pk: 894
  fields: {workitem: RHEL7-16464, autocase_pattern: virtual_disks.ceph..domain_operation.snapshot.disk_internal,
    framework: libvirt-ci, title: '[System checkpoint snapshot][Internal] Create internal
      system checkpoint snapshot with storage based on ceph BZ1179533'}
- model: caselink.caselink
  pk: 895
  fields: {workitem: RHEL7-16468, autocase_pattern: virtual_disks.ceph..domain_operation.blockcopy,
    framework: libvirt-ci, title: '[blockcopy][ceph] Do blockcopy with a guest using
      rbd based image as disk'}
- model: caselink.caselink
  pk: 896
  fields: {workitem: RHEL7-16470, autocase_pattern: virsh.blockpull.normal_test.network_disk.ceph,
    framework: libvirt-ci, title: '[blockpull][ceph] Do blockpull with a guest using
      rbd based image as disk'}
- model: caselink.caselink
  pk: 897
  fields: {workitem: RHEL7-16472, autocase_pattern: virsh.blockcommit.normal_test.single_chain.network_disk.ceph,
    framework: libvirt-ci, title: '[blockcommit][ceph] Do blockcommit with a guest
      using rbd based image as disk BZ1200726'}
- model: caselink.caselink
  pk: 898
  fields: {workitem: RHEL7-16459, autocase_pattern: virtual_disks.ceph..network_type.conf_file,
    framework: libvirt-ci, title: '[virtual disks][network][ceph] Start domain with
      images based on ceph specifying <config..> in xml'}
- model: caselink.caselink
  pk: 899
  fields: {workitem: RHEL7-16460, autocase_pattern: virtual_disks.ceph..domain_operation.snapshot,
    framework: libvirt-ci, title: '[virtual disks][network][ceph] Start domain with
      images based on ceph specifying <snapshot..> in xml'}
- model: caselink.caselink
  pk: 900
  fields: {workitem: RHEL7-16480, autocase_pattern: virtual_disks.ceph.with_auth.network_type,
    framework: libvirt-ci, title: '[virtual disks][authentication][ceph] Start vm
      with enabled authentication'}
- model: caselink.caselink
  pk: 901
  fields: {workitem: RHEL7-16481, autocase_pattern: virtual_disks.ceph.with_auth.domain_operation.snapshot,
    framework: libvirt-ci, title: '[snapshot][ceph] External snapshot with enabled
      authentication -BZ1171569'}
- model: caselink.caselink
  pk: 902
  fields: {workitem: RHEL7-16483, autocase_pattern: virtual_disks.ceph.with_auth.disk_attach,
    framework: libvirt-ci, title: '[virtual disks][authentication][ceph] hotplug/hotunplug
      rbd based disk with authentication enabled --BZ1045107'}
- model: caselink.caselink
  pk: 903
  fields: {workitem: RHEL7-16486, autocase_pattern: virtual_disks.ceph.without_auth.disk_pool,
    framework: libvirt-ci, title: '[storage][rbd pool] - rbd based storage pool -bug
      1187533'}
- model: caselink.caselink
  pk: 904
  fields: {workitem: RHEL7-16488, autocase_pattern: virtual_disks.ceph.without_auth.disk_pool,
    framework: libvirt-ci, title: '[storage][rbd pool] - volume operations in rbd
      pool -bug 1187533'}
- model: caselink.caselink
  pk: 905
  fields: {workitem: RHEL7-16490, autocase_pattern: virtual_disks.ceph.with_auth.disk_pool,
    framework: libvirt-ci, title: '[storage][rbd pool][authentication] - rbd based
      storage pool with authentication-bug 1187533'}
- model: caselink.caselink
  pk: 906
  fields: {workitem: RHEL7-16491, autocase_pattern: virtual_disks.ceph.with_auth.disk_pool,
    framework: libvirt-ci, title: '[storage][rbd pool][authentication] - volume operations
      in rbd pool with authentication enabled -bug 1187533'}
- model: caselink.caselink
  pk: 907
  fields: {workitem: RHEL7-18450, autocase_pattern: libvirt_hooks.error_test.start_error,
    framework: libvirt-ci, title: '[hooks][qemu] return non-zero'}
- model: caselink.caselink
  pk: 908
  fields: {workitem: RHEL7-18451, autocase_pattern: libvirt_hooks.libvirtd_t, framework: libvirt-ci,
    title: '[hooks][qemu] return zero'}
- model: caselink.caselink
  pk: 909
  fields: {workitem: RHEL7-18452, autocase_pattern: libvirt_hooks.save_restore, framework: libvirt-ci,
    title: '[hooks][qemu] restore - bug 1142693'}
- model: caselink.caselink
  pk: 910
  fields: {workitem: RHEL7-18452, autocase_pattern: libvirt_hooks.managedsave_t, framework: libvirt-ci,
    title: '[hooks][qemu] restore - bug 1142693'}
- model: caselink.caselink
  pk: 911
  fields: {workitem: RHEL7-18446, autocase_pattern: libvirt_hooks.virsh_attach, framework: libvirt-ci,
    title: '[hooks][qemu] qemu hooks - bug 825820'}
- model: caselink.caselink
  pk: 912
  fields: {workitem: RHEL7-18441, autocase_pattern: libvirt_hooks.daemon_t, framework: libvirt-ci,
    title: '[Hooks] daemon start - return zero'}
- model: caselink.caselink
  pk: 913
  fields: {workitem: RHEL7-18440, autocase_pattern: libvirt_hooks.daemon_t, framework: libvirt-ci,
    title: '[Hooks] daemon start - return non-zero'}
- model: caselink.caselink
  pk: 914
  fields: {workitem: RHEL7-18443, autocase_pattern: libvirt_hooks.daemon_t, framework: libvirt-ci,
    title: '[Hooks] daemon stop - return zero'}
- model: caselink.caselink
  pk: 915
  fields: {workitem: RHEL7-18442, autocase_pattern: libvirt_hooks.daemon_t, framework: libvirt-ci,
    title: '[Hooks] daemon stop - return non-zero'}
- model: caselink.caselink
  pk: 916
  fields: {workitem: RHEL7-18444, autocase_pattern: libvirt_hooks.daemon_t, framework: libvirt-ci,
    title: '[Hooks] kill daemon with SIGHUP'}
- model: caselink.caselink
  pk: 917
  fields: {workitem: RHEL7-18438, autocase_pattern: libvirt_hooks.daemon_t, framework: libvirt-ci,
    title: '[Hooks] daemon restart - return non-zero'}
- model: caselink.caselink
  pk: 918
  fields: {workitem: RHEL7-18439, autocase_pattern: libvirt_hooks.daemon_t, framework: libvirt-ci,
    title: '[Hooks] daemon restart - return zero'}
- model: caselink.caselink
  pk: 919
  fields: {workitem: RHEL7-18453, autocase_pattern: libvirt_hooks.network_t, framework: libvirt-ci,
    title: '[hooks][network] network hooks network start/destroy and plug/unplug interface
      -bug1064831'}
- model: caselink.caselink
  pk: 920
  fields: {workitem: RHEL7-18445, autocase_pattern: libvirt_hooks.scale_test, framework: libvirt-ci,
    title: '[hooks][network] kvm-guest failed to start; avoid double-close bug in
      libvirt - bug 827050'}
- model: caselink.bug
  pk: '1296800'
  fields:
    manualcases: []
- model: caselink.bug
  pk: '1325800'
  fields:
    manualcases: []
- model: caselink.autocasefailure
  pk: 1
  fields: {type: BUG, framework: null, bug: '1296800', failure_regex: '*', autocase_pattern: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.no_config_target}
- model: caselink.autocasefailure
  pk: 2
  fields: {type: BUG, framework: null, bug: '1296800', failure_regex: '*', autocase_pattern: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.no_restart_target_libvirtd}
- model: caselink.autocasefailure
  pk: 3
  fields: {type: BUG, framework: null, bug: '1296800', failure_regex: '*', autocase_pattern: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.source_hugemem_less_than_vm_mem}
- model: caselink.autocasefailure
  pk: 4
  fields: {type: BUG, framework: null, bug: '1296800', failure_regex: '*', autocase_pattern: virsh.migrate_vm.negative_testing.live_migration.with_hugepages.target_hugemem_less_than_vm_mem}
- model: caselink.autocasefailure
  pk: 5
  fields: {type: CASE-UPDATE, framework: null, bug: null, failure_regex: '*', autocase_pattern: virsh.migrate.there_seamless_migration_with_graphicsuri}
- model: caselink.autocasefailure
  pk: 6
  fields: {type: BUG, framework: null, bug: '1325800', failure_regex: The job info
      on both local and remote are not matched., autocase_pattern: virsh.migrate_vm.positive_testing.live_migration.track_statistics}
- model: caselink.autocasefailure
  pk: 7
  fields: {type: BUG, framework: null, bug: '1325800', failure_regex: The job info
      on both local and remote are not matched., autocase_pattern: virsh.migrate_vm.positive_testing.live_migration.set_cache_size}
